{"ast":null,"code":"import React from\"react\";import{Card,Heading,Link,Box,Text}from\"theme-ui\";import{AddressZero}from\"@ethersproject/constants\";import{Decimal,Percent}from\"@liquity/lib-base\";import{useLiquitySelector}from\"@liquity/lib-react\";import{useLiquity}from\"../hooks/LiquityContext\";import{COIN,GT}from\"../strings\";import{Statistic}from\"./Statistic\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var selectBalances=function selectBalances(_ref){var accountBalance=_ref.accountBalance,lusdBalance=_ref.lusdBalance,lqtyBalance=_ref.lqtyBalance;return{accountBalance:accountBalance,lusdBalance:lusdBalance,lqtyBalance:lqtyBalance};};var Balances=function Balances(){var _useLiquitySelector=useLiquitySelector(selectBalances),accountBalance=_useLiquitySelector.accountBalance,lusdBalance=_useLiquitySelector.lusdBalance,lqtyBalance=_useLiquitySelector.lqtyBalance;return/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Heading,{children:\"My Account Balances\"}),/*#__PURE__*/_jsxs(Statistic,{name:\"ETH\",children:[\" \",accountBalance.prettify(4)]}),/*#__PURE__*/_jsxs(Statistic,{name:COIN,children:[\" \",lusdBalance.prettify()]}),/*#__PURE__*/_jsx(Statistic,{name:GT,children:lqtyBalance.prettify()})]});};var GitHubCommit=function GitHubCommit(_ref2){var children=_ref2.children;return(children===null||children===void 0?void 0:children.match(/[0-9a-f]{40}/))?/*#__PURE__*/_jsx(Link,{href:\"https://github.com/liquity/dev/commit/\".concat(children),children:children.substr(0,7)}):/*#__PURE__*/_jsx(_Fragment,{children:\"unknown\"});};var select=function select(_ref3){var numberOfTroves=_ref3.numberOfTroves,price=_ref3.price,total=_ref3.total,lusdInStabilityPool=_ref3.lusdInStabilityPool,borrowingRate=_ref3.borrowingRate,redemptionRate=_ref3.redemptionRate,totalStakedLQTY=_ref3.totalStakedLQTY,frontend=_ref3.frontend;return{numberOfTroves:numberOfTroves,price:price,total:total,lusdInStabilityPool:lusdInStabilityPool,borrowingRate:borrowingRate,redemptionRate:redemptionRate,totalStakedLQTY:totalStakedLQTY,kickbackRate:frontend.status===\"registered\"?frontend.kickbackRate:null};};export var SystemStats=function SystemStats(_ref4){var _ref4$variant=_ref4.variant,variant=_ref4$variant===void 0?\"info\":_ref4$variant,showBalances=_ref4.showBalances;var _useLiquity=useLiquity(),_useLiquity$liquity$c=_useLiquity.liquity.connection,contractsVersion=_useLiquity$liquity$c.version,deploymentDate=_useLiquity$liquity$c.deploymentDate,frontendTag=_useLiquity$liquity$c.frontendTag;var _useLiquitySelector2=useLiquitySelector(select),numberOfTroves=_useLiquitySelector2.numberOfTroves,price=_useLiquitySelector2.price,lusdInStabilityPool=_useLiquitySelector2.lusdInStabilityPool,total=_useLiquitySelector2.total,borrowingRate=_useLiquitySelector2.borrowingRate,totalStakedLQTY=_useLiquitySelector2.totalStakedLQTY,kickbackRate=_useLiquitySelector2.kickbackRate;var lusdInStabilityPoolPct=total.debt.nonZero&&new Percent(lusdInStabilityPool.div(total.debt));var totalCollateralRatioPct=new Percent(total.collateralRatio(price));var borrowingFeePct=new Percent(borrowingRate);var kickbackRatePct=frontendTag===AddressZero?\"100\":kickbackRate===null||kickbackRate===void 0?void 0:kickbackRate.mul(100).prettify();return/*#__PURE__*/_jsxs(Card,{variant:variant,children:[showBalances&&/*#__PURE__*/_jsx(Balances,{}),/*#__PURE__*/_jsx(Heading,{children:\"Liquity statistics\"}),/*#__PURE__*/_jsx(Heading,{as:\"h2\",sx:{mt:3,fontWeight:\"body\"},children:\"Protocol\"}),/*#__PURE__*/_jsx(Statistic,{name:\"Borrowing Fee\",tooltip:\"The Borrowing Fee is a one-off fee charged as a percentage of the borrowed amount (in LUSD) and is part of a Trove's debt. The fee varies between 0.5% and 5% depending on LUSD redemption volumes.\",children:borrowingFeePct.toString(2)}),/*#__PURE__*/_jsxs(Statistic,{name:\"TVL\",tooltip:\"The Total Value Locked (TVL) is the total value of Ether locked as collateral in the system, given in ETH and USD.\",children:[total.collateral.shorten(),\" \",/*#__PURE__*/_jsx(Text,{sx:{fontSize:1},children:\"\\xA0ETH\"}),/*#__PURE__*/_jsxs(Text,{sx:{fontSize:1},children:[\"\\xA0($\",Decimal.from(total.collateral.mul(price)).shorten(),\")\"]})]}),/*#__PURE__*/_jsx(Statistic,{name:\"Troves\",tooltip:\"The total number of active Troves in the system.\",children:Decimal.from(numberOfTroves).prettify(0)}),/*#__PURE__*/_jsx(Statistic,{name:\"LUSD supply\",tooltip:\"The total LUSD minted by the Liquity Protocol.\",children:total.debt.shorten()}),lusdInStabilityPoolPct&&/*#__PURE__*/_jsxs(Statistic,{name:\"LUSD in Stability Pool\",tooltip:\"The total LUSD currently held in the Stability Pool, expressed as an amount and a fraction of the LUSD supply. \",children:[lusdInStabilityPool.shorten(),/*#__PURE__*/_jsxs(Text,{sx:{fontSize:1},children:[\"\\xA0(\",lusdInStabilityPoolPct.toString(1),\")\"]})]}),/*#__PURE__*/_jsx(Statistic,{name:\"Staked LQTY\",tooltip:\"The total amount of LQTY that is staked for earning fee revenue.\",children:totalStakedLQTY.shorten()}),/*#__PURE__*/_jsx(Statistic,{name:\"Total Collateral Ratio\",tooltip:\"The ratio of the Dollar value of the entire system collateral at the current ETH:USD price, to the entire system debt.\",children:totalCollateralRatioPct.prettify()}),/*#__PURE__*/_jsx(Statistic,{name:\"Recovery Mode\",tooltip:\"Recovery Mode is activated when the Total Collateral Ratio (TCR) falls below 150%. When active, your Trove can be liquidated if its collateral ratio is below the TCR. The maximum collateral you can lose from liquidation is capped at 110% of your Trove's debt. Operations are also restricted that would negatively impact the TCR.\",children:total.collateralRatioIsBelowCritical(price)?/*#__PURE__*/_jsx(Box,{color:\"danger\",children:\"Yes\"}):\"No\"}),/*#__PURE__*/_jsx(Heading,{as:\"h2\",sx:{mt:3,fontWeight:\"body\"},children:\"Frontend\"}),kickbackRatePct&&/*#__PURE__*/_jsxs(Statistic,{name:\"Kickback Rate\",tooltip:\"A rate between 0 and 100% set by the Frontend Operator that determines the fraction of LQTY that will be paid out as a kickback to the Stability Providers using the frontend.\",children:[kickbackRatePct,\"%\"]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3,opacity:0.66},children:[/*#__PURE__*/_jsxs(Box,{sx:{fontSize:0},children:[\"Contracts version: \",/*#__PURE__*/_jsx(GitHubCommit,{children:contractsVersion})]}),/*#__PURE__*/_jsxs(Box,{sx:{fontSize:0},children:[\"Deployed: \",deploymentDate.toLocaleString()]}),/*#__PURE__*/_jsxs(Box,{sx:{fontSize:0},children:[\"Frontend version:\",\" \",process.env.NODE_ENV===\"development\"?\"development\":/*#__PURE__*/_jsx(GitHubCommit,{children:process.env.REACT_APP_VERSION})]})]})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/SystemStats.tsx"],"names":["React","Card","Heading","Link","Box","Text","AddressZero","Decimal","Percent","useLiquitySelector","useLiquity","COIN","GT","Statistic","selectBalances","accountBalance","lusdBalance","lqtyBalance","Balances","mb","prettify","GitHubCommit","children","match","substr","select","numberOfTroves","price","total","lusdInStabilityPool","borrowingRate","redemptionRate","totalStakedLQTY","frontend","kickbackRate","status","SystemStats","variant","showBalances","liquity","connection","contractsVersion","version","deploymentDate","frontendTag","lusdInStabilityPoolPct","debt","nonZero","div","totalCollateralRatioPct","collateralRatio","borrowingFeePct","kickbackRatePct","mul","mt","fontWeight","toString","collateral","shorten","fontSize","from","collateralRatioIsBelowCritical","opacity","toLocaleString","process","env","NODE_ENV","REACT_APP_VERSION"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Heading, Link, Box, Text } from \"theme-ui\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Decimal, Percent, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { COIN, GT } from \"../strings\";\nimport { Statistic } from \"./Statistic\";\n\nconst selectBalances = ({ accountBalance, lusdBalance, lqtyBalance }: LiquityStoreState) => ({\n  accountBalance,\n  lusdBalance,\n  lqtyBalance\n});\n\nconst Balances: React.FC = () => {\n  const { accountBalance, lusdBalance, lqtyBalance } = useLiquitySelector(selectBalances);\n\n  return (\n    <Box sx={{ mb: 3 }}>\n      <Heading>My Account Balances</Heading>\n      <Statistic name=\"ETH\"> {accountBalance.prettify(4)}</Statistic>\n      <Statistic name={COIN}> {lusdBalance.prettify()}</Statistic>\n      <Statistic name={GT}>{lqtyBalance.prettify()}</Statistic>\n    </Box>\n  );\n};\n\nconst GitHubCommit: React.FC<{ children?: string }> = ({ children }) =>\n  children?.match(/[0-9a-f]{40}/) ? (\n    <Link href={`https://github.com/liquity/dev/commit/${children}`}>{children.substr(0, 7)}</Link>\n  ) : (\n    <>unknown</>\n  );\n\ntype SystemStatsProps = {\n  variant?: string;\n  showBalances?: boolean;\n};\n\nconst select = ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  frontend\n}: LiquityStoreState) => ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  kickbackRate: frontend.status === \"registered\" ? frontend.kickbackRate : null\n});\n\nexport const SystemStats: React.FC<SystemStatsProps> = ({ variant = \"info\", showBalances }) => {\n  const {\n    liquity: {\n      connection: { version: contractsVersion, deploymentDate, frontendTag }\n    }\n  } = useLiquity();\n\n  const {\n    numberOfTroves,\n    price,\n    lusdInStabilityPool,\n    total,\n    borrowingRate,\n    totalStakedLQTY,\n    kickbackRate\n  } = useLiquitySelector(select);\n\n  const lusdInStabilityPoolPct =\n    total.debt.nonZero && new Percent(lusdInStabilityPool.div(total.debt));\n  const totalCollateralRatioPct = new Percent(total.collateralRatio(price));\n  const borrowingFeePct = new Percent(borrowingRate);\n  const kickbackRatePct = frontendTag === AddressZero ? \"100\" : kickbackRate?.mul(100).prettify();\n\n  return (\n    <Card {...{ variant }}>\n      {showBalances && <Balances />}\n\n      <Heading>Liquity statistics</Heading>\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Protocol\n      </Heading>\n\n      <Statistic\n        name=\"Borrowing Fee\"\n        tooltip=\"The Borrowing Fee is a one-off fee charged as a percentage of the borrowed amount (in LUSD) and is part of a Trove's debt. The fee varies between 0.5% and 5% depending on LUSD redemption volumes.\"\n      >\n        {borrowingFeePct.toString(2)}\n      </Statistic>\n\n      <Statistic\n        name=\"TVL\"\n        tooltip=\"The Total Value Locked (TVL) is the total value of Ether locked as collateral in the system, given in ETH and USD.\"\n      >\n        {total.collateral.shorten()} <Text sx={{ fontSize: 1 }}>&nbsp;ETH</Text>\n        <Text sx={{ fontSize: 1 }}>\n          &nbsp;(${Decimal.from(total.collateral.mul(price)).shorten()})\n        </Text>\n      </Statistic>\n      <Statistic name=\"Troves\" tooltip=\"The total number of active Troves in the system.\">\n        {Decimal.from(numberOfTroves).prettify(0)}\n      </Statistic>\n      <Statistic name=\"LUSD supply\" tooltip=\"The total LUSD minted by the Liquity Protocol.\">\n        {total.debt.shorten()}\n      </Statistic>\n      {lusdInStabilityPoolPct && (\n        <Statistic\n          name=\"LUSD in Stability Pool\"\n          tooltip=\"The total LUSD currently held in the Stability Pool, expressed as an amount and a fraction of the LUSD supply.\n        \"\n        >\n          {lusdInStabilityPool.shorten()}\n          <Text sx={{ fontSize: 1 }}>&nbsp;({lusdInStabilityPoolPct.toString(1)})</Text>\n        </Statistic>\n      )}\n      <Statistic\n        name=\"Staked LQTY\"\n        tooltip=\"The total amount of LQTY that is staked for earning fee revenue.\"\n      >\n        {totalStakedLQTY.shorten()}\n      </Statistic>\n      <Statistic\n        name=\"Total Collateral Ratio\"\n        tooltip=\"The ratio of the Dollar value of the entire system collateral at the current ETH:USD price, to the entire system debt.\"\n      >\n        {totalCollateralRatioPct.prettify()}\n      </Statistic>\n      <Statistic\n        name=\"Recovery Mode\"\n        tooltip=\"Recovery Mode is activated when the Total Collateral Ratio (TCR) falls below 150%. When active, your Trove can be liquidated if its collateral ratio is below the TCR. The maximum collateral you can lose from liquidation is capped at 110% of your Trove's debt. Operations are also restricted that would negatively impact the TCR.\"\n      >\n        {total.collateralRatioIsBelowCritical(price) ? <Box color=\"danger\">Yes</Box> : \"No\"}\n      </Statistic>\n      {}\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Frontend\n      </Heading>\n      {kickbackRatePct && (\n        <Statistic\n          name=\"Kickback Rate\"\n          tooltip=\"A rate between 0 and 100% set by the Frontend Operator that determines the fraction of LQTY that will be paid out as a kickback to the Stability Providers using the frontend.\"\n        >\n          {kickbackRatePct}%\n        </Statistic>\n      )}\n\n      <Box sx={{ mt: 3, opacity: 0.66 }}>\n        <Box sx={{ fontSize: 0 }}>\n          Contracts version: <GitHubCommit>{contractsVersion}</GitHubCommit>\n        </Box>\n        <Box sx={{ fontSize: 0 }}>Deployed: {deploymentDate.toLocaleString()}</Box>\n        <Box sx={{ fontSize: 0 }}>\n          Frontend version:{\" \"}\n          {process.env.NODE_ENV === \"development\" ? (\n            \"development\"\n          ) : (\n            <GitHubCommit>{process.env.REACT_APP_VERSION}</GitHubCommit>\n          )}\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}