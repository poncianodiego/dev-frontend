{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/ReadOnlyTrove.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { DisabledEditableRow } from \"./Editor\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { Icon } from \"../Icon\";\nimport { COIN } from \"../../strings\";\nimport { CollateralRatio } from \"./CollateralRatio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst select = ({\n  trove,\n  price\n}) => ({\n  trove,\n  price\n});\n\nexport const ReadOnlyTrove = () => {\n  _s();\n\n  const {\n    dispatchEvent\n  } = useTroveView();\n  const handleAdjustTrove = useCallback(() => {\n    dispatchEvent(\"ADJUST_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n  const handleCloseTrove = useCallback(() => {\n    dispatchEvent(\"CLOSE_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n  const {\n    trove,\n    price\n  } = useLiquitySelector(select); // console.log(\"READONLY TROVE\", trove.collateral.prettify(4));\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Trove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(DisabledEditableRow, {\n          label: \"Collateral\",\n          inputId: \"trove-collateral\",\n          amount: trove.collateral.prettify(4),\n          unit: \"ETH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DisabledEditableRow, {\n          label: \"Debt\",\n          inputId: \"trove-debt\",\n          amount: trove.debt.prettify(),\n          unit: COIN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CollateralRatio, {\n          value: trove.collateralRatio(price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        variant: \"layout.actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: handleCloseTrove,\n          children: \"Close Trove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAdjustTrove,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"pen\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), \"\\xA0Adjust\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadOnlyTrove, \"EQ3anv1QyLABF0dYmXuJZ9GvFww=\", false, function () {\n  return [useTroveView, useLiquitySelector];\n});\n\n_c = ReadOnlyTrove;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadOnlyTrove\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/ReadOnlyTrove.tsx"],"names":["React","useCallback","Card","Heading","Box","Flex","Button","useLiquitySelector","DisabledEditableRow","useTroveView","Icon","COIN","CollateralRatio","select","trove","price","ReadOnlyTrove","dispatchEvent","handleAdjustTrove","handleCloseTrove","p","collateral","prettify","debt","collateralRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,UAAjD;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,SAASC,mBAAT,QAAoC,UAApC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,MAA0C;AAAED,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA1C,CAAf;;AAEA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAoBR,YAAY,EAAtC;AACA,QAAMS,iBAAiB,GAAGjB,WAAW,CAAC,MAAM;AAC1CgB,IAAAA,aAAa,CAAC,sBAAD,CAAb;AACD,GAFoC,EAElC,CAACA,aAAD,CAFkC,CAArC;AAGA,QAAME,gBAAgB,GAAGlB,WAAW,CAAC,MAAM;AACzCgB,IAAAA,aAAa,CAAC,qBAAD,CAAb;AACD,GAFmC,EAEjC,CAACA,aAAD,CAFiC,CAApC;AAIA,QAAM;AAAEH,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBR,kBAAkB,CAACM,MAAD,CAA3C,CAT2C,CAW3C;;AACA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEO,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAL,OAAT;AAAA,8BACE,QAAC,GAAD;AAAA,gCACE,QAAC,mBAAD;AACE,UAAA,KAAK,EAAC,YADR;AAEE,UAAA,OAAO,EAAC,kBAFV;AAGE,UAAA,MAAM,EAAEN,KAAK,CAACO,UAAN,CAAiBC,QAAjB,CAA0B,CAA1B,CAHV;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,mBAAD;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,OAAO,EAAC,YAFV;AAGE,UAAA,MAAM,EAAER,KAAK,CAACS,IAAN,CAAWD,QAAX,EAHV;AAIE,UAAA,IAAI,EAAEX;AAJR;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAEG,KAAK,CAACU,eAAN,CAAsBT,KAAtB;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,gBAAd;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEI,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,iBAAjB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,KAAX;AAAiB,YAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA9CM;;GAAMF,a;UACeP,Y,EAQDF,kB;;;KATdS,a","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { DisabledEditableRow } from \"./Editor\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { Icon } from \"../Icon\";\nimport { COIN } from \"../../strings\";\nimport { CollateralRatio } from \"./CollateralRatio\";\n\nconst select = ({ trove, price }: LiquityStoreState) => ({ trove, price });\n\nexport const ReadOnlyTrove: React.FC = () => {\n  const { dispatchEvent } = useTroveView();\n  const handleAdjustTrove = useCallback(() => {\n    dispatchEvent(\"ADJUST_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n  const handleCloseTrove = useCallback(() => {\n    dispatchEvent(\"CLOSE_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  const { trove, price } = useLiquitySelector(select);\n\n  // console.log(\"READONLY TROVE\", trove.collateral.prettify(4));\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <Box>\n          <DisabledEditableRow\n            label=\"Collateral\"\n            inputId=\"trove-collateral\"\n            amount={trove.collateral.prettify(4)}\n            unit=\"ETH\"\n          />\n\n          <DisabledEditableRow\n            label=\"Debt\"\n            inputId=\"trove-debt\"\n            amount={trove.debt.prettify()}\n            unit={COIN}\n          />\n\n          <CollateralRatio value={trove.collateralRatio(price)} />\n        </Box>\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"outline\" onClick={handleCloseTrove}>\n            Close Trove\n          </Button>\n          <Button onClick={handleAdjustTrove}>\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}