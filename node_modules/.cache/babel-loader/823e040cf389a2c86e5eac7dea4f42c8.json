{"ast":null,"code":"import{createContext,useContext}from\"react\";export var StakingViewContext=/*#__PURE__*/createContext(null);export var useStakingView=function useStakingView(){var context=useContext(StakingViewContext);if(context===null){throw new Error(\"You must add a <TroveViewProvider> into the React tree\");}return context;};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/context/StakingViewContext.tsx"],"names":["createContext","useContext","StakingViewContext","useStakingView","context","Error"],"mappings":"AAAA,OAASA,aAAT,CAAwBC,UAAxB,KAA0C,OAA1C,CAiBA,MAAO,IAAMC,CAAAA,kBAAkB,cAAGF,aAAa,CAAgC,IAAhC,CAAxC,CAEP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAA8B,CAC1D,GAAMC,CAAAA,OAAO,CAAGH,UAAU,CAACC,kBAAD,CAA1B,CAEA,GAAIE,OAAO,GAAK,IAAhB,CAAsB,CACpB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,wDAAV,CAAN,CACD,CAED,MAAOD,CAAAA,OAAP,CACD,CARM","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport type StakingView = \"ACTIVE\" | \"ADJUSTING\" | \"NONE\";\n\nexport type StakingViewAction = { type: \"startAdjusting\" | \"cancelAdjusting\" };\n\nexport type StakingViewContextType = {\n  view: StakingView;\n\n  // Indicates that a staking TX is pending.\n  // The panel should be covered with a spinner overlay when this is true.\n  changePending: boolean;\n\n  // Dispatch an action that changes the Staking panel's view.\n  dispatch: (action: StakingViewAction) => void;\n};\n\nexport const StakingViewContext = createContext<StakingViewContextType | null>(null);\n\nexport const useStakingView = (): StakingViewContextType => {\n  const context = useContext(StakingViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <TroveViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}