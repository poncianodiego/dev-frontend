{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/SystemStats.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, Heading, Link, Box, Text } from \"theme-ui\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Decimal, Percent } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { COIN, GT } from \"../strings\";\nimport { Statistic } from \"./Statistic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst selectBalances = ({\n  accountBalance,\n  lusdBalance,\n  lqtyBalance\n}) => ({\n  accountBalance,\n  lusdBalance,\n  lqtyBalance\n});\n\nconst Balances = () => {\n  _s();\n\n  const {\n    accountBalance,\n    lusdBalance,\n    lqtyBalance\n  } = useLiquitySelector(selectBalances);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"My Account Balances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"ETH\",\n      children: [\" \", accountBalance.prettify(4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: COIN,\n      children: [\" \", lusdBalance.prettify()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: GT,\n      children: lqtyBalance.prettify()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balances, \"5fH5mr+S9iXBFXhWxm97GIGj0L0=\", false, function () {\n  return [useLiquitySelector];\n});\n\n_c = Balances;\n\nconst GitHubCommit = ({\n  children\n}) => (children === null || children === void 0 ? void 0 : children.match(/[0-9a-f]{40}/)) ? /*#__PURE__*/_jsxDEV(Link, {\n  href: `https://github.com/liquity/dev/commit/${children}`,\n  children: children.substr(0, 7)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 5\n}, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: \"unknown\"\n}, void 0, false);\n\n_c2 = GitHubCommit;\n\nconst select = ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  frontend\n}) => ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  kickbackRate: frontend.status === \"registered\" ? frontend.kickbackRate : null\n});\n\nexport const SystemStats = ({\n  variant = \"info\",\n  showBalances\n}) => {\n  _s2();\n\n  const {\n    liquity: {\n      connection: {\n        version: contractsVersion,\n        deploymentDate,\n        frontendTag\n      }\n    }\n  } = useLiquity();\n  const {\n    numberOfTroves,\n    price,\n    lusdInStabilityPool,\n    total,\n    borrowingRate,\n    totalStakedLQTY,\n    kickbackRate\n  } = useLiquitySelector(select);\n  const lusdInStabilityPoolPct = total.debt.nonZero && new Percent(lusdInStabilityPool.div(total.debt));\n  const totalCollateralRatioPct = new Percent(total.collateralRatio(price));\n  const borrowingFeePct = new Percent(borrowingRate);\n  const kickbackRatePct = frontendTag === AddressZero ? \"100\" : kickbackRate === null || kickbackRate === void 0 ? void 0 : kickbackRate.mul(100).prettify();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant,\n    children: [showBalances && /*#__PURE__*/_jsxDEV(Balances, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Liquity statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      sx: {\n        mt: 3,\n        fontWeight: \"body\"\n      },\n      children: \"Protocol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"Borrowing Fee\",\n      tooltip: \"The Borrowing Fee is a one-off fee charged as a percentage of the borrowed amount (in LUSD) and is part of a Trove's debt. The fee varies between 0.5% and 5% depending on LUSD redemption volumes.\",\n      children: borrowingFeePct.toString(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"TVL\",\n      tooltip: \"The Total Value Locked (TVL) is the total value of Ether locked as collateral in the system, given in ETH and USD.\",\n      children: [total.collateral.shorten(), \" \", /*#__PURE__*/_jsxDEV(Text, {\n        sx: {\n          fontSize: 1\n        },\n        children: \"\\xA0ETH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        sx: {\n          fontSize: 1\n        },\n        children: [\"\\xA0($\", Decimal.from(total.collateral.mul(price)).shorten(), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"Troves\",\n      tooltip: \"The total number of active Troves in the system.\",\n      children: Decimal.from(numberOfTroves).prettify(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"LUSD supply\",\n      tooltip: \"The total LUSD minted by the Liquity Protocol.\",\n      children: total.debt.shorten()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), lusdInStabilityPoolPct && /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"LUSD in Stability Pool\",\n      tooltip: \"The total LUSD currently held in the Stability Pool, expressed as an amount and a fraction of the LUSD supply. \",\n      children: [lusdInStabilityPool.shorten(), /*#__PURE__*/_jsxDEV(Text, {\n        sx: {\n          fontSize: 1\n        },\n        children: [\"\\xA0(\", lusdInStabilityPoolPct.toString(1), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"Staked LQTY\",\n      tooltip: \"The total amount of LQTY that is staked for earning fee revenue.\",\n      children: totalStakedLQTY.shorten()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"Total Collateral Ratio\",\n      tooltip: \"The ratio of the Dollar value of the entire system collateral at the current ETH:USD price, to the entire system debt.\",\n      children: totalCollateralRatioPct.prettify()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"Recovery Mode\",\n      tooltip: \"Recovery Mode is activated when the Total Collateral Ratio (TCR) falls below 150%. When active, your Trove can be liquidated if its collateral ratio is below the TCR. The maximum collateral you can lose from liquidation is capped at 110% of your Trove's debt. Operations are also restricted that would negatively impact the TCR.\",\n      children: total.collateralRatioIsBelowCritical(price) ? /*#__PURE__*/_jsxDEV(Box, {\n        color: \"danger\",\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 56\n      }, this) : \"No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      sx: {\n        mt: 3,\n        fontWeight: \"body\"\n      },\n      children: \"Frontend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), kickbackRatePct && /*#__PURE__*/_jsxDEV(Statistic, {\n      name: \"Kickback Rate\",\n      tooltip: \"A rate between 0 and 100% set by the Frontend Operator that determines the fraction of LQTY that will be paid out as a kickback to the Stability Providers using the frontend.\",\n      children: [kickbackRatePct, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3,\n        opacity: 0.66\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          fontSize: 0\n        },\n        children: [\"Contracts version: \", /*#__PURE__*/_jsxDEV(GitHubCommit, {\n          children: contractsVersion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          fontSize: 0\n        },\n        children: [\"Deployed: \", deploymentDate.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          fontSize: 0\n        },\n        children: [\"Frontend version:\", \" \", process.env.NODE_ENV === \"development\" ? \"development\" : /*#__PURE__*/_jsxDEV(GitHubCommit, {\n          children: process.env.REACT_APP_VERSION\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SystemStats, \"4H82I6FZ/2i+AEs0pt2e45Ps4uM=\", false, function () {\n  return [useLiquity, useLiquitySelector];\n});\n\n_c3 = SystemStats;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Balances\");\n$RefreshReg$(_c2, \"GitHubCommit\");\n$RefreshReg$(_c3, \"SystemStats\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/SystemStats.tsx"],"names":["React","Card","Heading","Link","Box","Text","AddressZero","Decimal","Percent","useLiquitySelector","useLiquity","COIN","GT","Statistic","selectBalances","accountBalance","lusdBalance","lqtyBalance","Balances","mb","prettify","GitHubCommit","children","match","substr","select","numberOfTroves","price","total","lusdInStabilityPool","borrowingRate","redemptionRate","totalStakedLQTY","frontend","kickbackRate","status","SystemStats","variant","showBalances","liquity","connection","version","contractsVersion","deploymentDate","frontendTag","lusdInStabilityPoolPct","debt","nonZero","div","totalCollateralRatioPct","collateralRatio","borrowingFeePct","kickbackRatePct","mul","mt","fontWeight","toString","collateral","shorten","fontSize","from","collateralRatioIsBelowCritical","opacity","toLocaleString","process","env","NODE_ENV","REACT_APP_VERSION"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Heading, Link, Box, Text } from \"theme-ui\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Decimal, Percent, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { COIN, GT } from \"../strings\";\nimport { Statistic } from \"./Statistic\";\n\nconst selectBalances = ({ accountBalance, lusdBalance, lqtyBalance }: LiquityStoreState) => ({\n  accountBalance,\n  lusdBalance,\n  lqtyBalance\n});\n\nconst Balances: React.FC = () => {\n  const { accountBalance, lusdBalance, lqtyBalance } = useLiquitySelector(selectBalances);\n\n  return (\n    <Box sx={{ mb: 3 }}>\n      <Heading>My Account Balances</Heading>\n      <Statistic name=\"ETH\"> {accountBalance.prettify(4)}</Statistic>\n      <Statistic name={COIN}> {lusdBalance.prettify()}</Statistic>\n      <Statistic name={GT}>{lqtyBalance.prettify()}</Statistic>\n    </Box>\n  );\n};\n\nconst GitHubCommit: React.FC<{ children?: string }> = ({ children }) =>\n  children?.match(/[0-9a-f]{40}/) ? (\n    <Link href={`https://github.com/liquity/dev/commit/${children}`}>{children.substr(0, 7)}</Link>\n  ) : (\n    <>unknown</>\n  );\n\ntype SystemStatsProps = {\n  variant?: string;\n  showBalances?: boolean;\n};\n\nconst select = ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  frontend\n}: LiquityStoreState) => ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  kickbackRate: frontend.status === \"registered\" ? frontend.kickbackRate : null\n});\n\nexport const SystemStats: React.FC<SystemStatsProps> = ({ variant = \"info\", showBalances }) => {\n  const {\n    liquity: {\n      connection: { version: contractsVersion, deploymentDate, frontendTag }\n    }\n  } = useLiquity();\n\n  const {\n    numberOfTroves,\n    price,\n    lusdInStabilityPool,\n    total,\n    borrowingRate,\n    totalStakedLQTY,\n    kickbackRate\n  } = useLiquitySelector(select);\n\n  const lusdInStabilityPoolPct =\n    total.debt.nonZero && new Percent(lusdInStabilityPool.div(total.debt));\n  const totalCollateralRatioPct = new Percent(total.collateralRatio(price));\n  const borrowingFeePct = new Percent(borrowingRate);\n  const kickbackRatePct = frontendTag === AddressZero ? \"100\" : kickbackRate?.mul(100).prettify();\n\n  return (\n    <Card {...{ variant }}>\n      {showBalances && <Balances />}\n\n      <Heading>Liquity statistics</Heading>\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Protocol\n      </Heading>\n\n      <Statistic\n        name=\"Borrowing Fee\"\n        tooltip=\"The Borrowing Fee is a one-off fee charged as a percentage of the borrowed amount (in LUSD) and is part of a Trove's debt. The fee varies between 0.5% and 5% depending on LUSD redemption volumes.\"\n      >\n        {borrowingFeePct.toString(2)}\n      </Statistic>\n\n      <Statistic\n        name=\"TVL\"\n        tooltip=\"The Total Value Locked (TVL) is the total value of Ether locked as collateral in the system, given in ETH and USD.\"\n      >\n        {total.collateral.shorten()} <Text sx={{ fontSize: 1 }}>&nbsp;ETH</Text>\n        <Text sx={{ fontSize: 1 }}>\n          &nbsp;(${Decimal.from(total.collateral.mul(price)).shorten()})\n        </Text>\n      </Statistic>\n      <Statistic name=\"Troves\" tooltip=\"The total number of active Troves in the system.\">\n        {Decimal.from(numberOfTroves).prettify(0)}\n      </Statistic>\n      <Statistic name=\"LUSD supply\" tooltip=\"The total LUSD minted by the Liquity Protocol.\">\n        {total.debt.shorten()}\n      </Statistic>\n      {lusdInStabilityPoolPct && (\n        <Statistic\n          name=\"LUSD in Stability Pool\"\n          tooltip=\"The total LUSD currently held in the Stability Pool, expressed as an amount and a fraction of the LUSD supply.\n        \"\n        >\n          {lusdInStabilityPool.shorten()}\n          <Text sx={{ fontSize: 1 }}>&nbsp;({lusdInStabilityPoolPct.toString(1)})</Text>\n        </Statistic>\n      )}\n      <Statistic\n        name=\"Staked LQTY\"\n        tooltip=\"The total amount of LQTY that is staked for earning fee revenue.\"\n      >\n        {totalStakedLQTY.shorten()}\n      </Statistic>\n      <Statistic\n        name=\"Total Collateral Ratio\"\n        tooltip=\"The ratio of the Dollar value of the entire system collateral at the current ETH:USD price, to the entire system debt.\"\n      >\n        {totalCollateralRatioPct.prettify()}\n      </Statistic>\n      <Statistic\n        name=\"Recovery Mode\"\n        tooltip=\"Recovery Mode is activated when the Total Collateral Ratio (TCR) falls below 150%. When active, your Trove can be liquidated if its collateral ratio is below the TCR. The maximum collateral you can lose from liquidation is capped at 110% of your Trove's debt. Operations are also restricted that would negatively impact the TCR.\"\n      >\n        {total.collateralRatioIsBelowCritical(price) ? <Box color=\"danger\">Yes</Box> : \"No\"}\n      </Statistic>\n      {}\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Frontend\n      </Heading>\n      {kickbackRatePct && (\n        <Statistic\n          name=\"Kickback Rate\"\n          tooltip=\"A rate between 0 and 100% set by the Frontend Operator that determines the fraction of LQTY that will be paid out as a kickback to the Stability Providers using the frontend.\"\n        >\n          {kickbackRatePct}%\n        </Statistic>\n      )}\n\n      <Box sx={{ mt: 3, opacity: 0.66 }}>\n        <Box sx={{ fontSize: 0 }}>\n          Contracts version: <GitHubCommit>{contractsVersion}</GitHubCommit>\n        </Box>\n        <Box sx={{ fontSize: 0 }}>Deployed: {deploymentDate.toLocaleString()}</Box>\n        <Box sx={{ fontSize: 0 }}>\n          Frontend version:{\" \"}\n          {process.env.NODE_ENV === \"development\" ? (\n            \"development\"\n          ) : (\n            <GitHubCommit>{process.env.REACT_APP_VERSION}</GitHubCommit>\n          )}\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}