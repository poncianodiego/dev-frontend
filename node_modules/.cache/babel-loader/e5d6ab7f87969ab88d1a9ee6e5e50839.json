{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/StabilityDepositAction.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectFrontendRegistered = ({\n  frontend\n}) => frontend.status === \"registered\";\n\nexport const StabilityDepositAction = ({\n  children,\n  transactionId,\n  change\n}) => {\n  _s();\n\n  const {\n    config,\n    liquity\n  } = useLiquity();\n  const frontendRegistered = useLiquitySelector(selectFrontendRegistered);\n  const frontendTag = frontendRegistered ? config.frontendTag : undefined;\n  const [sendTransaction] = useTransactionFunction(transactionId, change.depositLUSD ? liquity.send.depositLUSDInStabilityPool.bind(liquity.send, change.depositLUSD, frontendTag) : liquity.send.withdrawLUSDFromStabilityPool.bind(liquity.send, change.withdrawLUSD));\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: sendTransaction,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StabilityDepositAction, \"M9bEhkz5imqH1pbpEkltKduUZcs=\", false, function () {\n  return [useLiquity, useLiquitySelector, useTransactionFunction];\n});\n\n_c = StabilityDepositAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"StabilityDepositAction\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/StabilityDepositAction.tsx"],"names":["Button","useLiquitySelector","useLiquity","useTransactionFunction","selectFrontendRegistered","frontend","status","StabilityDepositAction","children","transactionId","change","config","liquity","frontendRegistered","frontendTag","undefined","sendTransaction","depositLUSD","send","depositLUSDInStabilityPool","bind","withdrawLUSDFromStabilityPool","withdrawLUSD"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,sBAAT,QAAuC,gBAAvC;;;AAOA,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC/BA,QAAQ,CAACC,MAAT,KAAoB,YADtB;;AAGA,OAAO,MAAMC,sBAA6D,GAAG,CAAC;AAC5EC,EAAAA,QAD4E;AAE5EC,EAAAA,aAF4E;AAG5EC,EAAAA;AAH4E,CAAD,KAIvE;AAAA;;AACJ,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBV,UAAU,EAAtC;AACA,QAAMW,kBAAkB,GAAGZ,kBAAkB,CAACG,wBAAD,CAA7C;AAEA,QAAMU,WAAW,GAAGD,kBAAkB,GAAGF,MAAM,CAACG,WAAV,GAAwBC,SAA9D;AAEA,QAAM,CAACC,eAAD,IAAoBb,sBAAsB,CAC9CM,aAD8C,EAE9CC,MAAM,CAACO,WAAP,GACIL,OAAO,CAACM,IAAR,CAAaC,0BAAb,CAAwCC,IAAxC,CAA6CR,OAAO,CAACM,IAArD,EAA2DR,MAAM,CAACO,WAAlE,EAA+EH,WAA/E,CADJ,GAEIF,OAAO,CAACM,IAAR,CAAaG,6BAAb,CAA2CD,IAA3C,CAAgDR,OAAO,CAACM,IAAxD,EAA8DR,MAAM,CAACY,YAArE,CAJ0C,CAAhD;AAOA,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,eAAjB;AAAA,cAAmCR;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBM;;GAAMD,sB;UAKiBL,U,EACDD,kB,EAIDE,sB;;;KAVfI,sB","sourcesContent":["import { Button } from \"theme-ui\";\nimport { Decimal, LiquityStoreState, StabilityDepositChange } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\n\ntype StabilityDepositActionProps = {\n  transactionId: string;\n  change: StabilityDepositChange<Decimal>;\n};\n\nconst selectFrontendRegistered = ({ frontend }: LiquityStoreState) =>\n  frontend.status === \"registered\";\n\nexport const StabilityDepositAction: React.FC<StabilityDepositActionProps> = ({\n  children,\n  transactionId,\n  change\n}) => {\n  const { config, liquity } = useLiquity();\n  const frontendRegistered = useLiquitySelector(selectFrontendRegistered);\n\n  const frontendTag = frontendRegistered ? config.frontendTag : undefined;\n\n  const [sendTransaction] = useTransactionFunction(\n    transactionId,\n    change.depositLUSD\n      ? liquity.send.depositLUSDInStabilityPool.bind(liquity.send, change.depositLUSD, frontendTag)\n      : liquity.send.withdrawLUSDFromStabilityPool.bind(liquity.send, change.withdrawLUSD)\n  );\n\n  return <Button onClick={sendTransaction}>{children}</Button>;\n};\n"]},"metadata":{},"sourceType":"module"}