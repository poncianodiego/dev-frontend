{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/RedeemedTrove.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Button, Flex } from \"theme-ui\";\nimport { CollateralSurplusAction } from \"../CollateralSurplusAction\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { InfoMessage } from \"../InfoMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst select = ({\n  collateralSurplusBalance\n}) => ({\n  hasSurplusCollateral: !collateralSurplusBalance.isZero\n});\n\nexport const RedeemedTrove = () => {\n  _s();\n\n  const {\n    hasSurplusCollateral\n  } = useLiquitySelector(select);\n  const {\n    dispatchEvent\n  } = useTroveView();\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"OPEN_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Trove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoMessage, {\n        title: \"Your Trove has been redeemed.\",\n        children: hasSurplusCollateral ? \"Please reclaim your remaining collateral before opening a new Trove.\" : \"You can borrow LUSD by opening a Trove.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        variant: \"layout.actions\",\n        children: [hasSurplusCollateral && /*#__PURE__*/_jsxDEV(CollateralSurplusAction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 36\n        }, this), !hasSurplusCollateral && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOpenTrove,\n          children: \"Open Trove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RedeemedTrove, \"/+bSXQWegERUXGhuggzzwjsKZC4=\", false, function () {\n  return [useLiquitySelector, useTroveView];\n});\n\n_c = RedeemedTrove;\n\nvar _c;\n\n$RefreshReg$(_c, \"RedeemedTrove\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/RedeemedTrove.tsx"],"names":["React","useCallback","Card","Heading","Box","Button","Flex","CollateralSurplusAction","useLiquitySelector","useTroveView","InfoMessage","select","collateralSurplusBalance","hasSurplusCollateral","isZero","RedeemedTrove","dispatchEvent","handleOpenTrove","p"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,QAAiD,UAAjD;AACA,SAASC,uBAAT,QAAwC,4BAAxC;AAEA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAsD;AACnEC,EAAAA,oBAAoB,EAAE,CAACD,wBAAwB,CAACE;AADmB,CAAtD,CAAf;;AAIA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AAC3C,QAAM;AAAEF,IAAAA;AAAF,MAA2BL,kBAAkB,CAACG,MAAD,CAAnD;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAoBP,YAAY,EAAtC;AAEA,QAAMQ,eAAe,GAAGhB,WAAW,CAAC,MAAM;AACxCe,IAAAA,aAAa,CAAC,oBAAD,CAAb;AACD,GAFkC,EAEhC,CAACA,aAAD,CAFgC,CAAnC;AAIA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEE,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAL,OAAT;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC,+BAAnB;AAAA,kBACGL,oBAAoB,GACjB,sEADiB,GAEjB;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,gBAAd;AAAA,mBACGA,oBAAoB,iBAAI,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,gBAD3B,EAEG,CAACA,oBAAD,iBAAyB,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBM;;GAAMF,a;UACsBP,kB,EACPC,Y;;;KAFfM,a","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Button, Flex } from \"theme-ui\";\nimport { CollateralSurplusAction } from \"../CollateralSurplusAction\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { InfoMessage } from \"../InfoMessage\";\n\nconst select = ({ collateralSurplusBalance }: LiquityStoreState) => ({\n  hasSurplusCollateral: !collateralSurplusBalance.isZero\n});\n\nexport const RedeemedTrove: React.FC = () => {\n  const { hasSurplusCollateral } = useLiquitySelector(select);\n  const { dispatchEvent } = useTroveView();\n\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"OPEN_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <InfoMessage title=\"Your Trove has been redeemed.\">\n          {hasSurplusCollateral\n            ? \"Please reclaim your remaining collateral before opening a new Trove.\"\n            : \"You can borrow LUSD by opening a Trove.\"}\n        </InfoMessage>\n\n        <Flex variant=\"layout.actions\">\n          {hasSurplusCollateral && <CollateralSurplusAction />}\n          {!hasSurplusCollateral && <Button onClick={handleOpenTrove}>Open Trove</Button>}\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}