{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionFailedError = void 0;\n/**\n * Thrown by {@link TransactableLiquity} functions in case of transaction failure.\n *\n * @public\n */\n\nvar TransactionFailedError = /*#__PURE__*/function (_Error) {\n  _inherits(TransactionFailedError, _Error);\n\n  var _super = _createSuper(TransactionFailedError);\n\n  /** @internal */\n  function TransactionFailedError(name, message, failedReceipt) {\n    var _this;\n\n    _classCallCheck(this, TransactionFailedError);\n\n    _this = _super.call(this, message);\n    _this.name = name;\n    _this.failedReceipt = failedReceipt;\n    return _this;\n  }\n\n  return TransactionFailedError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.TransactionFailedError = TransactionFailedError;","map":{"version":3,"sources":["../../src/TransactableLiquity.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA;;;;AAIG;;IACU,sB;;;;;AAGX;AACA,kCAAY,IAAZ,EAA0B,OAA1B,EAA2C,aAA3C,EAA2D;AAAA;;AAAA;;AACzD,8BAAM,OAAN;AACA,UAAK,IAAL,GAAY,IAAZ;AACA,UAAK,aAAL,GAAqB,aAArB;AAHyD;AAI1D;;;iCARkF,K;;AAArF,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionFailedError = void 0;\n/**\n * Thrown by {@link TransactableLiquity} functions in case of transaction failure.\n *\n * @public\n */\nclass TransactionFailedError extends Error {\n    /** @internal */\n    constructor(name, message, failedReceipt) {\n        super(message);\n        this.name = name;\n        this.failedReceipt = failedReceipt;\n    }\n}\nexports.TransactionFailedError = TransactionFailedError;\n//# sourceMappingURL=TransactableLiquity.js.map"]},"metadata":{},"sourceType":"script"}