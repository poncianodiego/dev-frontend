{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{AddressZero}from\"@ethersproject/constants\";import{useLiquitySelector}from\"@liquity/lib-react\";import{useLiquity}from\"../hooks/LiquityContext\";import{Dashboard}from\"./Dashboard\";import{UnregisteredFrontend}from\"./UnregisteredFrontend\";import{FrontendRegistration}from\"./FrontendRegistration\";import{FrontendRegistrationSuccess}from\"./FrontendRegistrationSuccess\";import{jsx as _jsx}from\"react/jsx-runtime\";var selectFrontend=function selectFrontend(_ref){var frontend=_ref.frontend;return frontend;};export var PageSwitcher=function PageSwitcher(){var _useLiquity=useLiquity(),account=_useLiquity.account,frontendTag=_useLiquity.config.frontendTag;var frontend=useLiquitySelector(selectFrontend);var unregistered=frontendTag!==AddressZero&&frontend.status===\"unregistered\";var _useState=useState(false),_useState2=_slicedToArray(_useState,2),registering=_useState2[0],setRegistering=_useState2[1];useEffect(function(){if(unregistered){setRegistering(true);}},[unregistered]);if(registering||unregistered){if(frontend.status===\"registered\"){return/*#__PURE__*/_jsx(FrontendRegistrationSuccess,{onDismiss:function onDismiss(){return setRegistering(false);}});}else if(account===frontendTag){return/*#__PURE__*/_jsx(FrontendRegistration,{});}else{return/*#__PURE__*/_jsx(UnregisteredFrontend,{});}}else{return/*#__PURE__*/_jsx(Dashboard,{});}};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/pages/PageSwitcher.tsx"],"names":["useEffect","useState","AddressZero","useLiquitySelector","useLiquity","Dashboard","UnregisteredFrontend","FrontendRegistration","FrontendRegistrationSuccess","selectFrontend","frontend","PageSwitcher","account","frontendTag","config","unregistered","status","registering","setRegistering"],"mappings":"+LAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,WAAT,KAA4B,0BAA5B,CAGA,OAASC,kBAAT,KAAmC,oBAAnC,CAEA,OAASC,UAAT,KAA2B,yBAA3B,CAEA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,oBAAT,KAAqC,wBAArC,CACA,OAASC,oBAAT,KAAqC,wBAArC,CACA,OAASC,2BAAT,KAA4C,+BAA5C,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,UAAGC,CAAAA,QAAH,MAAGA,QAAH,OAAqCA,CAAAA,QAArC,EAAvB,CAEA,MAAO,IAAMC,CAAAA,YAAsB,CAAG,QAAzBA,CAAAA,YAAyB,EAAM,iBAItCP,UAAU,EAJ4B,CAExCQ,OAFwC,aAExCA,OAFwC,CAG9BC,WAH8B,aAGxCC,MAHwC,CAG9BD,WAH8B,CAM1C,GAAMH,CAAAA,QAAQ,CAAGP,kBAAkB,CAACM,cAAD,CAAnC,CACA,GAAMM,CAAAA,YAAY,CAAGF,WAAW,GAAKX,WAAhB,EAA+BQ,QAAQ,CAACM,MAAT,GAAoB,cAAxE,CAP0C,cASJf,QAAQ,CAAC,KAAD,CATJ,wCASnCgB,WATmC,eAStBC,cATsB,eAW1ClB,SAAS,CAAC,UAAM,CACd,GAAIe,YAAJ,CAAkB,CAChBG,cAAc,CAAC,IAAD,CAAd,CACD,CACF,CAJQ,CAIN,CAACH,YAAD,CAJM,CAAT,CAMA,GAAIE,WAAW,EAAIF,YAAnB,CAAiC,CAC/B,GAAIL,QAAQ,CAACM,MAAT,GAAoB,YAAxB,CAAsC,CACpC,mBAAO,KAAC,2BAAD,EAA6B,SAAS,CAAE,2BAAME,CAAAA,cAAc,CAAC,KAAD,CAApB,EAAxC,EAAP,CACD,CAFD,IAEO,IAAIN,OAAO,GAAKC,WAAhB,CAA6B,CAClC,mBAAO,KAAC,oBAAD,IAAP,CACD,CAFM,IAEA,CACL,mBAAO,KAAC,oBAAD,IAAP,CACD,CACF,CARD,IAQO,CACL,mBAAO,KAAC,SAAD,IAAP,CACD,CACF,CA5BM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { AddressZero } from \"@ethersproject/constants\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Dashboard } from \"./Dashboard\";\nimport { UnregisteredFrontend } from \"./UnregisteredFrontend\";\nimport { FrontendRegistration } from \"./FrontendRegistration\";\nimport { FrontendRegistrationSuccess } from \"./FrontendRegistrationSuccess\";\n\nconst selectFrontend = ({ frontend }: LiquityStoreState) => frontend;\n\nexport const PageSwitcher: React.FC = () => {\n  const {\n    account,\n    config: { frontendTag }\n  } = useLiquity();\n\n  const frontend = useLiquitySelector(selectFrontend);\n  const unregistered = frontendTag !== AddressZero && frontend.status === \"unregistered\";\n\n  const [registering, setRegistering] = useState(false);\n\n  useEffect(() => {\n    if (unregistered) {\n      setRegistering(true);\n    }\n  }, [unregistered]);\n\n  if (registering || unregistered) {\n    if (frontend.status === \"registered\") {\n      return <FrontendRegistrationSuccess onDismiss={() => setRegistering(false)} />;\n    } else if (account === frontendTag) {\n      return <FrontendRegistration />;\n    } else {\n      return <UnregisteredFrontend />;\n    }\n  } else {\n    return <Dashboard />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}