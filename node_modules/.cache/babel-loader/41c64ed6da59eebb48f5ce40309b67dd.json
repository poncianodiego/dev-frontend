{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button}from\"theme-ui\";import{useLiquity}from\"../../hooks/LiquityContext\";import{useTransactionFunction}from\"../Transaction\";import{jsx as _jsx}from\"react/jsx-runtime\";export var TroveAction=function TroveAction(_ref){var children=_ref.children,transactionId=_ref.transactionId,change=_ref.change,maxBorrowingRate=_ref.maxBorrowingRate;var _useLiquity=useLiquity(),liquity=_useLiquity.liquity;var _useTransactionFuncti=useTransactionFunction(transactionId,change.type===\"creation\"?liquity.send.openTrove.bind(liquity.send,change.params,maxBorrowingRate):change.type===\"closure\"?liquity.send.closeTrove.bind(liquity.send):liquity.send.adjustTrove.bind(liquity.send,change.params,maxBorrowingRate)),_useTransactionFuncti2=_slicedToArray(_useTransactionFuncti,1),sendTransaction=_useTransactionFuncti2[0];return/*#__PURE__*/_jsx(Button,{onClick:sendTransaction,children:children});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/TroveAction.tsx"],"names":["Button","useLiquity","useTransactionFunction","TroveAction","children","transactionId","change","maxBorrowingRate","liquity","type","send","openTrove","bind","params","closeTrove","adjustTrove","sendTransaction"],"mappings":"+LAAA,OAASA,MAAT,KAAuB,UAAvB,CAIA,OAASC,UAAT,KAA2B,4BAA3B,CACA,OAASC,sBAAT,KAAuC,gBAAvC,C,2CAQA,MAAO,IAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAKjD,IAJJC,CAAAA,QAII,MAJJA,QAII,CAHJC,aAGI,MAHJA,aAGI,CAFJC,MAEI,MAFJA,MAEI,CADJC,gBACI,MADJA,gBACI,iBACgBN,UAAU,EAD1B,CACIO,OADJ,aACIA,OADJ,2BAGsBN,sBAAsB,CAC9CG,aAD8C,CAE9CC,MAAM,CAACG,IAAP,GAAgB,UAAhB,CACID,OAAO,CAACE,IAAR,CAAaC,SAAb,CAAuBC,IAAvB,CAA4BJ,OAAO,CAACE,IAApC,CAA0CJ,MAAM,CAACO,MAAjD,CAAyDN,gBAAzD,CADJ,CAEID,MAAM,CAACG,IAAP,GAAgB,SAAhB,CACAD,OAAO,CAACE,IAAR,CAAaI,UAAb,CAAwBF,IAAxB,CAA6BJ,OAAO,CAACE,IAArC,CADA,CAEAF,OAAO,CAACE,IAAR,CAAaK,WAAb,CAAyBH,IAAzB,CAA8BJ,OAAO,CAACE,IAAtC,CAA4CJ,MAAM,CAACO,MAAnD,CAA2DN,gBAA3D,CAN0C,CAH5C,gEAGGS,eAHH,2BAYJ,mBAAO,KAAC,MAAD,EAAQ,OAAO,CAAEA,eAAjB,UAAmCZ,QAAnC,EAAP,CACD,CAlBM","sourcesContent":["import { Button } from \"theme-ui\";\n\nimport { Decimal, TroveChange } from \"@liquity/lib-base\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\n\ntype TroveActionProps = {\n  transactionId: string;\n  change: Exclude<TroveChange<Decimal>, { type: \"invalidCreation\" }>;\n  maxBorrowingRate: Decimal;\n};\n\nexport const TroveAction: React.FC<TroveActionProps> = ({\n  children,\n  transactionId,\n  change,\n  maxBorrowingRate\n}) => {\n  const { liquity } = useLiquity();\n\n  const [sendTransaction] = useTransactionFunction(\n    transactionId,\n    change.type === \"creation\"\n      ? liquity.send.openTrove.bind(liquity.send, change.params, maxBorrowingRate)\n      : change.type === \"closure\"\n      ? liquity.send.closeTrove.bind(liquity.send)\n      : liquity.send.adjustTrove.bind(liquity.send, change.params, maxBorrowingRate)\n  );\n\n  return <Button onClick={sendTransaction}>{children}</Button>;\n};\n"]},"metadata":{},"sourceType":"module"}