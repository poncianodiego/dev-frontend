{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/NoTrove.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { InfoMessage } from \"../InfoMessage\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NoTrove = props => {\n  _s();\n\n  const {\n    dispatchEvent\n  } = useTroveView();\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"OPEN_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Trove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfoMessage, {\n        title: \"You haven't borrowed any LUSD yet.\",\n        children: \"You can borrow LUSD by opening a Trove.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        variant: \"layout.actions\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOpenTrove,\n          children: \"Open Trove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoTrove, \"o9RSEITGOhofcq8D3gTbm34R0Lc=\", false, function () {\n  return [useTroveView];\n});\n\n_c = NoTrove;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoTrove\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/NoTrove.tsx"],"names":["React","useCallback","Card","Heading","Box","Flex","Button","InfoMessage","useTroveView","NoTrove","props","dispatchEvent","handleOpenTrove","p"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,UAAjD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,OAAO,MAAMC,OAAiB,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,YAAY,EAAtC;AAEA,QAAMI,eAAe,GAAGX,WAAW,CAAC,MAAM;AACxCU,IAAAA,aAAa,CAAC,oBAAD,CAAb;AACD,GAFkC,EAEhC,CAACA,aAAD,CAFgC,CAAnC;AAIA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEE,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAL,OAAT;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC,oCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,gBAAd;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArBM;;GAAMH,O;UACeD,Y;;;KADfC,O","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { InfoMessage } from \"../InfoMessage\";\nimport { useTroveView } from \"./context/TroveViewContext\";\n\nexport const NoTrove: React.FC = props => {\n  const { dispatchEvent } = useTroveView();\n\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"OPEN_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <InfoMessage title=\"You haven't borrowed any LUSD yet.\">\n          You can borrow LUSD by opening a Trove.\n        </InfoMessage>\n\n        <Flex variant=\"layout.actions\">\n          <Button onClick={handleOpenTrove}>Open Trove</Button>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}