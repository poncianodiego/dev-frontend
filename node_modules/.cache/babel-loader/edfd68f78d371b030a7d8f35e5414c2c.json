{"ast":null,"code":"import _objectSpread from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{TroveManager}from\"./TroveManager\";import{ReadOnlyTrove}from\"./ReadOnlyTrove\";import{NoTrove}from\"./NoTrove\";import{Opening}from\"./Opening\";import{Adjusting}from\"./Adjusting\";import{RedeemedTrove}from\"./RedeemedTrove\";import{useTroveView}from\"./context/TroveViewContext\";import{LiquidatedTrove}from\"./LiquidatedTrove\";import{Decimal}from\"@liquity/lib-base\";import{jsx as _jsx}from\"react/jsx-runtime\";export var Trove=function Trove(props){var _useTroveView=useTroveView(),view=_useTroveView.view;switch(view){// loading state not needed, as main app has a loading spinner that blocks render until the liquity backend data is available\ncase\"ACTIVE\":{return/*#__PURE__*/_jsx(ReadOnlyTrove,_objectSpread({},props));}case\"ADJUSTING\":{return/*#__PURE__*/_jsx(Adjusting,_objectSpread({},props));}case\"CLOSING\":{return/*#__PURE__*/_jsx(TroveManager,_objectSpread(_objectSpread({},props),{},{collateral:Decimal.ZERO,debt:Decimal.ZERO}));}case\"OPENING\":{return/*#__PURE__*/_jsx(Opening,_objectSpread({},props));}case\"LIQUIDATED\":{return/*#__PURE__*/_jsx(LiquidatedTrove,_objectSpread({},props));}case\"REDEEMED\":{return/*#__PURE__*/_jsx(RedeemedTrove,_objectSpread({},props));}case\"NONE\":{return/*#__PURE__*/_jsx(NoTrove,_objectSpread({},props));}}};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/Trove.tsx"],"names":["React","TroveManager","ReadOnlyTrove","NoTrove","Opening","Adjusting","RedeemedTrove","useTroveView","LiquidatedTrove","Decimal","Trove","props","view","ZERO"],"mappings":"8LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,YAAT,KAA6B,4BAA7B,CACA,OAASC,eAAT,KAAgC,mBAAhC,CACA,OAASC,OAAT,KAAwB,mBAAxB,C,2CAEA,MAAO,IAAMC,CAAAA,KAAe,CAAG,QAAlBA,CAAAA,KAAkB,CAAAC,KAAK,CAAI,mBACrBJ,YAAY,EADS,CAC9BK,IAD8B,eAC9BA,IAD8B,CAGtC,OAAQA,IAAR,EACE;AACA,IAAK,QAAL,CAAe,CACb,mBAAO,KAAC,aAAD,kBAAmBD,KAAnB,EAAP,CACD,CACD,IAAK,WAAL,CAAkB,CAChB,mBAAO,KAAC,SAAD,kBAAeA,KAAf,EAAP,CACD,CACD,IAAK,SAAL,CAAgB,CACd,mBAAO,KAAC,YAAD,gCAAkBA,KAAlB,MAAyB,UAAU,CAAEF,OAAO,CAACI,IAA7C,CAAmD,IAAI,CAAEJ,OAAO,CAACI,IAAjE,GAAP,CACD,CACD,IAAK,SAAL,CAAgB,CACd,mBAAO,KAAC,OAAD,kBAAaF,KAAb,EAAP,CACD,CACD,IAAK,YAAL,CAAmB,CACjB,mBAAO,KAAC,eAAD,kBAAqBA,KAArB,EAAP,CACD,CACD,IAAK,UAAL,CAAiB,CACf,mBAAO,KAAC,aAAD,kBAAmBA,KAAnB,EAAP,CACD,CACD,IAAK,MAAL,CAAa,CACX,mBAAO,KAAC,OAAD,kBAAaA,KAAb,EAAP,CACD,CAtBH,CAwBD,CA3BM","sourcesContent":["import React from \"react\";\nimport { TroveManager } from \"./TroveManager\";\nimport { ReadOnlyTrove } from \"./ReadOnlyTrove\";\nimport { NoTrove } from \"./NoTrove\";\nimport { Opening } from \"./Opening\";\nimport { Adjusting } from \"./Adjusting\";\nimport { RedeemedTrove } from \"./RedeemedTrove\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { LiquidatedTrove } from \"./LiquidatedTrove\";\nimport { Decimal } from \"@liquity/lib-base\";\n\nexport const Trove: React.FC = props => {\n  const { view } = useTroveView();\n\n  switch (view) {\n    // loading state not needed, as main app has a loading spinner that blocks render until the liquity backend data is available\n    case \"ACTIVE\": {\n      return <ReadOnlyTrove {...props} />;\n    }\n    case \"ADJUSTING\": {\n      return <Adjusting {...props} />;\n    }\n    case \"CLOSING\": {\n      return <TroveManager {...props} collateral={Decimal.ZERO} debt={Decimal.ZERO} />;\n    }\n    case \"OPENING\": {\n      return <Opening {...props} />;\n    }\n    case \"LIQUIDATED\": {\n      return <LiquidatedTrove {...props} />;\n    }\n    case \"REDEEMED\": {\n      return <RedeemedTrove {...props} />;\n    }\n    case \"NONE\": {\n      return <NoTrove {...props} />;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}