{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/validation/validateStabilityDepositChange.tsx\";\nimport { COIN } from \"../../../strings\";\nimport { Amount } from \"../../ActionDescription\";\nimport { ErrorDescription } from \"../../ErrorDescription\";\nimport { StabilityActionDescription } from \"../StabilityActionDescription\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const selectForStabilityDepositChangeValidation = ({\n  trove,\n  lusdBalance,\n  ownFrontend,\n  haveUndercollateralizedTroves\n}) => ({\n  trove,\n  lusdBalance,\n  haveOwnFrontend: ownFrontend.status === \"registered\",\n  haveUndercollateralizedTroves\n});\nexport const validateStabilityDepositChange = (originalDeposit, editedLUSD, {\n  lusdBalance,\n  haveOwnFrontend,\n  haveUndercollateralizedTroves\n}) => {\n  var _change$depositLUSD;\n\n  const change = originalDeposit.whatChanged(editedLUSD);\n\n  if (haveOwnFrontend) {\n    return [undefined, /*#__PURE__*/_jsxDEV(ErrorDescription, {\n      children: \"You can\\u2019t deposit using a wallet address that is registered as a frontend.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)];\n  }\n\n  if (!change) {\n    return [undefined, undefined];\n  }\n\n  if ((_change$depositLUSD = change.depositLUSD) === null || _change$depositLUSD === void 0 ? void 0 : _change$depositLUSD.gt(lusdBalance)) {\n    return [undefined, /*#__PURE__*/_jsxDEV(ErrorDescription, {\n      children: [\"The amount you're trying to deposit exceeds your balance by\", \" \", /*#__PURE__*/_jsxDEV(Amount, {\n        children: [change.depositLUSD.sub(lusdBalance).prettify(), \" \", COIN]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)];\n  }\n\n  if (change.withdrawLUSD && haveUndercollateralizedTroves) {\n    return [undefined, /*#__PURE__*/_jsxDEV(ErrorDescription, {\n      children: \"You're not allowed to withdraw LUSD from your Stability Deposit when there are undercollateralized Troves. Please liquidate those Troves or try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)];\n  }\n\n  return [change, /*#__PURE__*/_jsxDEV(StabilityActionDescription, {\n    originalDeposit: originalDeposit,\n    change: change\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 19\n  }, this)];\n};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/validation/validateStabilityDepositChange.tsx"],"names":["COIN","Amount","ErrorDescription","StabilityActionDescription","selectForStabilityDepositChangeValidation","trove","lusdBalance","ownFrontend","haveUndercollateralizedTroves","haveOwnFrontend","status","validateStabilityDepositChange","originalDeposit","editedLUSD","change","whatChanged","undefined","depositLUSD","gt","sub","prettify","withdrawLUSD"],"mappings":";AAOA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;;AAEA,OAAO,MAAMC,yCAAyC,GAAG,CAAC;AACxDC,EAAAA,KADwD;AAExDC,EAAAA,WAFwD;AAGxDC,EAAAA,WAHwD;AAIxDC,EAAAA;AAJwD,CAAD,MAK/B;AACxBH,EAAAA,KADwB;AAExBC,EAAAA,WAFwB;AAGxBG,EAAAA,eAAe,EAAEF,WAAW,CAACG,MAAZ,KAAuB,YAHhB;AAIxBF,EAAAA;AAJwB,CAL+B,CAAlD;AAgBP,OAAO,MAAMG,8BAA8B,GAAG,CAC5CC,eAD4C,EAE5CC,UAF4C,EAG5C;AACEP,EAAAA,WADF;AAEEG,EAAAA,eAFF;AAGED,EAAAA;AAHF,CAH4C,KAWzC;AAAA;;AACH,QAAMM,MAAM,GAAGF,eAAe,CAACG,WAAhB,CAA4BF,UAA5B,CAAf;;AAEA,MAAIJ,eAAJ,EAAqB;AACnB,WAAO,CACLO,SADK,eAEL,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,CAAP;AAMD;;AAED,MAAI,CAACF,MAAL,EAAa;AACX,WAAO,CAACE,SAAD,EAAYA,SAAZ,CAAP;AACD;;AAED,6BAAIF,MAAM,CAACG,WAAX,wDAAI,oBAAoBC,EAApB,CAAuBZ,WAAvB,CAAJ,EAAyC;AACvC,WAAO,CACLU,SADK,eAEL,QAAC,gBAAD;AAAA,gFAC8D,GAD9D,eAEE,QAAC,MAAD;AAAA,mBACGF,MAAM,CAACG,WAAP,CAAmBE,GAAnB,CAAuBb,WAAvB,EAAoCc,QAApC,EADH,OACoDpB,IADpD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,CAAP;AAUD;;AAED,MAAIc,MAAM,CAACO,YAAP,IAAuBb,6BAA3B,EAA0D;AACxD,WAAO,CACLQ,SADK,eAEL,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,CAAP;AAOD;;AAED,SAAO,CAACF,MAAD,eAAS,QAAC,0BAAD;AAA4B,IAAA,eAAe,EAAEF,eAA7C;AAA8D,IAAA,MAAM,EAAEE;AAAtE;AAAA;AAAA;AAAA;AAAA,UAAT,CAAP;AACD,CAnDM","sourcesContent":["import {\n  Decimal,\n  LiquityStoreState,\n  StabilityDeposit,\n  StabilityDepositChange\n} from \"@liquity/lib-base\";\n\nimport { COIN } from \"../../../strings\";\nimport { Amount } from \"../../ActionDescription\";\nimport { ErrorDescription } from \"../../ErrorDescription\";\nimport { StabilityActionDescription } from \"../StabilityActionDescription\";\n\nexport const selectForStabilityDepositChangeValidation = ({\n  trove,\n  lusdBalance,\n  ownFrontend,\n  haveUndercollateralizedTroves\n}: LiquityStoreState) => ({\n  trove,\n  lusdBalance,\n  haveOwnFrontend: ownFrontend.status === \"registered\",\n  haveUndercollateralizedTroves\n});\n\ntype StabilityDepositChangeValidationContext = ReturnType<\n  typeof selectForStabilityDepositChangeValidation\n>;\n\nexport const validateStabilityDepositChange = (\n  originalDeposit: StabilityDeposit,\n  editedLUSD: Decimal,\n  {\n    lusdBalance,\n    haveOwnFrontend,\n    haveUndercollateralizedTroves\n  }: StabilityDepositChangeValidationContext\n): [\n  validChange: StabilityDepositChange<Decimal> | undefined,\n  description: JSX.Element | undefined\n] => {\n  const change = originalDeposit.whatChanged(editedLUSD);\n\n  if (haveOwnFrontend) {\n    return [\n      undefined,\n      <ErrorDescription>\n        You canâ€™t deposit using a wallet address that is registered as a frontend.\n      </ErrorDescription>\n    ];\n  }\n\n  if (!change) {\n    return [undefined, undefined];\n  }\n\n  if (change.depositLUSD?.gt(lusdBalance)) {\n    return [\n      undefined,\n      <ErrorDescription>\n        The amount you're trying to deposit exceeds your balance by{\" \"}\n        <Amount>\n          {change.depositLUSD.sub(lusdBalance).prettify()} {COIN}\n        </Amount>\n        .\n      </ErrorDescription>\n    ];\n  }\n\n  if (change.withdrawLUSD && haveUndercollateralizedTroves) {\n    return [\n      undefined,\n      <ErrorDescription>\n        You're not allowed to withdraw LUSD from your Stability Deposit when there are\n        undercollateralized Troves. Please liquidate those Troves or try again later.\n      </ErrorDescription>\n    ];\n  }\n\n  return [change, <StabilityActionDescription originalDeposit={originalDeposit} change={change} />];\n};\n"]},"metadata":{},"sourceType":"module"}