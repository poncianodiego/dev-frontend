{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/CollateralSurplusAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button, Flex, Spinner } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"./Transaction\";\nimport { useTroveView } from \"./Trove/context/TroveViewContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst select = ({\n  collateralSurplusBalance\n}) => ({\n  collateralSurplusBalance\n});\n\nexport const CollateralSurplusAction = () => {\n  _s();\n\n  const {\n    collateralSurplusBalance\n  } = useLiquitySelector(select);\n  const {\n    liquity: {\n      send: liquity\n    }\n  } = useLiquity();\n  const myTransactionId = \"claim-coll-surplus\";\n  const myTransactionState = useMyTransactionState(myTransactionId);\n  const {\n    dispatchEvent\n  } = useTroveView();\n  useEffect(() => {\n    if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"TROVE_SURPLUS_COLLATERAL_CLAIMED\");\n    }\n  }, [myTransactionState.type, dispatchEvent]);\n  return myTransactionState.type === \"waitingForApproval\" ? /*#__PURE__*/_jsxDEV(Flex, {\n    variant: \"layout.actions\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      sx: {\n        mx: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        sx: {\n          mr: 2,\n          color: \"white\"\n        },\n        size: \"20px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"Waiting for your approval\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : myTransactionState.type !== \"waitingForConfirmation\" && myTransactionState.type !== \"confirmed\" ? /*#__PURE__*/_jsxDEV(Flex, {\n    variant: \"layout.actions\",\n    children: /*#__PURE__*/_jsxDEV(Transaction, {\n      id: myTransactionId,\n      send: liquity.claimCollateralSurplus.bind(liquity, undefined),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          mx: 2\n        },\n        children: [\"Claim \", collateralSurplusBalance.prettify(), \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(CollateralSurplusAction, \"fp93PZs1wPcmDudgZgAEmO5nCNk=\", false, function () {\n  return [useLiquitySelector, useLiquity, useMyTransactionState, useTroveView];\n});\n\n_c = CollateralSurplusAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollateralSurplusAction\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/CollateralSurplusAction.tsx"],"names":["React","useEffect","Button","Flex","Spinner","useLiquitySelector","useLiquity","Transaction","useMyTransactionState","useTroveView","select","collateralSurplusBalance","CollateralSurplusAction","liquity","send","myTransactionId","myTransactionState","dispatchEvent","type","mx","mr","color","claimCollateralSurplus","bind","undefined","prettify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,UAAtC;AAGA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,eAAnD;AACA,SAASC,YAAT,QAA6B,kCAA7B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAsD;AACnEA,EAAAA;AADmE,CAAtD,CAAf;;AAIA,OAAO,MAAMC,uBAAiC,GAAG,MAAM;AAAA;;AACrD,QAAM;AAAED,IAAAA;AAAF,MAA+BN,kBAAkB,CAACK,MAAD,CAAvD;AACA,QAAM;AACJG,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAED;AAAR;AADL,MAEFP,UAAU,EAFd;AAIA,QAAMS,eAAe,GAAG,oBAAxB;AACA,QAAMC,kBAAkB,GAAGR,qBAAqB,CAACO,eAAD,CAAhD;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAoBR,YAAY,EAAtC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,kBAAkB,CAACE,IAAnB,KAA4B,kBAAhC,EAAoD;AAClDD,MAAAA,aAAa,CAAC,kCAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACD,kBAAkB,CAACE,IAApB,EAA0BD,aAA1B,CAJM,CAAT;AAMA,SAAOD,kBAAkB,CAACE,IAAnB,KAA4B,oBAA5B,gBACL,QAAC,IAAD;AAAM,IAAA,OAAO,EAAC,gBAAd;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAArB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE,CAAN;AAASC,UAAAA,KAAK,EAAE;AAAhB,SAAb;AAAwC,QAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,GAOHL,kBAAkB,CAACE,IAAnB,KAA4B,wBAA5B,IACFF,kBAAkB,CAACE,IAAnB,KAA4B,WAD1B,gBAEF,QAAC,IAAD;AAAM,IAAA,OAAO,EAAC,gBAAd;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,EAAE,EAAEH,eADN;AAEE,MAAA,IAAI,EAAEF,OAAO,CAACS,sBAAR,CAA+BC,IAA/B,CAAoCV,OAApC,EAA6CW,SAA7C,CAFR;AAAA,6BAIE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAEL,UAAAA,EAAE,EAAE;AAAN,SAAZ;AAAA,6BAA8BR,wBAAwB,CAACc,QAAzB,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFE,GAUA,IAjBJ;AAkBD,CAnCM;;GAAMb,uB;UAC0BP,kB,EAGjCC,U,EAGuBE,qB,EAEDC,Y;;;KATfG,uB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button, Flex, Spinner } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Transaction, useMyTransactionState } from \"./Transaction\";\nimport { useTroveView } from \"./Trove/context/TroveViewContext\";\n\nconst select = ({ collateralSurplusBalance }: LiquityStoreState) => ({\n  collateralSurplusBalance\n});\n\nexport const CollateralSurplusAction: React.FC = () => {\n  const { collateralSurplusBalance } = useLiquitySelector(select);\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const myTransactionId = \"claim-coll-surplus\";\n  const myTransactionState = useMyTransactionState(myTransactionId);\n\n  const { dispatchEvent } = useTroveView();\n\n  useEffect(() => {\n    if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"TROVE_SURPLUS_COLLATERAL_CLAIMED\");\n    }\n  }, [myTransactionState.type, dispatchEvent]);\n\n  return myTransactionState.type === \"waitingForApproval\" ? (\n    <Flex variant=\"layout.actions\">\n      <Button disabled sx={{ mx: 2 }}>\n        <Spinner sx={{ mr: 2, color: \"white\" }} size=\"20px\" />\n        Waiting for your approval\n      </Button>\n    </Flex>\n  ) : myTransactionState.type !== \"waitingForConfirmation\" &&\n    myTransactionState.type !== \"confirmed\" ? (\n    <Flex variant=\"layout.actions\">\n      <Transaction\n        id={myTransactionId}\n        send={liquity.claimCollateralSurplus.bind(liquity, undefined)}\n      >\n        <Button sx={{ mx: 2 }}>Claim {collateralSurplusBalance.prettify()} ETH</Button>\n      </Transaction>\n    </Flex>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}