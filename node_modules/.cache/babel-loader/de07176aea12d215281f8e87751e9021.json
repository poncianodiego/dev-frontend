{"ast":null,"code":"import React from\"react\";import{Web3ReactProvider}from\"@web3-react/core\";import{Flex,Spinner,Heading,ThemeProvider,Paragraph,Link}from\"theme-ui\";import{BatchedWebSocketAugmentedWeb3Provider}from\"@liquity/providers\";import{LiquityProvider}from\"./hooks/LiquityContext\";import{WalletConnector}from\"./components/WalletConnector\";import{TransactionProvider}from\"./components/Transaction\";import{Icon}from\"./components/Icon\";import{getConfig}from\"./config\";import theme from\"./theme\";import{DisposableWalletProvider}from\"./testUtils/DisposableWalletProvider\";import{LiquityFrontend}from\"./LiquityFrontend\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";if(window.ethereum){// Silence MetaMask warning in console\nObject.assign(window.ethereum,{autoRefreshOnNetworkChange:false});}if(process.env.REACT_APP_DEMO_MODE===\"true\"){var ethereum=new DisposableWalletProvider(\"http://\".concat(window.location.hostname,\":8545\"),\"0x4d5db4107d237df6a3d58ee5f70ae63d73d7658d4026f2eefd2f204c81682cb7\");Object.assign(window,{ethereum:ethereum});}// Start pre-fetching the config\ngetConfig().then(function(config){// console.log(\"Frontend config:\");\n// console.log(config);\nObject.assign(window,{config:config});});var EthersWeb3ReactProvider=function EthersWeb3ReactProvider(_ref){var children=_ref.children;return/*#__PURE__*/_jsx(Web3ReactProvider,{getLibrary:function getLibrary(provider){return new BatchedWebSocketAugmentedWeb3Provider(provider);},children:children});};var UnsupportedMainnetFallback=function UnsupportedMainnetFallback(){return/*#__PURE__*/_jsxs(Flex,{sx:{flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"100vh\",textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(Heading,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Icon,{name:\"exclamation-triangle\"}),\" This app is for testing purposes only.\"]}),/*#__PURE__*/_jsx(Paragraph,{sx:{mb:3},children:\"Please change your network to Ropsten, Rinkeby, Kovan or G\\xF6rli.\"}),/*#__PURE__*/_jsxs(Paragraph,{children:[\"If you'd like to use the Liquity Protocol on mainnet, please pick a frontend\",\" \",/*#__PURE__*/_jsxs(Link,{href:\"https://www.liquity.org/frontend\",children:[\"here \",/*#__PURE__*/_jsx(Icon,{name:\"external-link-alt\",size:\"xs\"})]}),\".\"]})]});};var App=function App(){var loader=/*#__PURE__*/_jsxs(Flex,{sx:{alignItems:\"center\",justifyContent:\"center\",height:\"100vh\"},children:[/*#__PURE__*/_jsx(Spinner,{sx:{m:2,color:\"text\"},size:\"32px\"}),/*#__PURE__*/_jsx(Heading,{children:\"Loading...\"})]});var unsupportedNetworkFallback=function unsupportedNetworkFallback(chainId){return/*#__PURE__*/_jsxs(Flex,{sx:{flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"100vh\",textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(Heading,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Icon,{name:\"exclamation-triangle\"}),\" Liquity is not yet deployed to\",\" \",chainId===1?\"mainnet\":\"this network\",\".\"]}),\"Please switch to Ropsten, Rinkeby, Kovan or G\\xF6rli.\"]});};return/*#__PURE__*/_jsx(EthersWeb3ReactProvider,{children:/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(WalletConnector,{loader:loader,children:/*#__PURE__*/_jsx(LiquityProvider,{loader:loader,unsupportedNetworkFallback:unsupportedNetworkFallback,unsupportedMainnetFallback:/*#__PURE__*/_jsx(UnsupportedMainnetFallback,{}),children:/*#__PURE__*/_jsx(TransactionProvider,{children:/*#__PURE__*/_jsx(LiquityFrontend,{loader:loader})})})})})});};export default App;","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/App.tsx"],"names":["React","Web3ReactProvider","Flex","Spinner","Heading","ThemeProvider","Paragraph","Link","BatchedWebSocketAugmentedWeb3Provider","LiquityProvider","WalletConnector","TransactionProvider","Icon","getConfig","theme","DisposableWalletProvider","LiquityFrontend","window","ethereum","Object","assign","autoRefreshOnNetworkChange","process","env","REACT_APP_DEMO_MODE","location","hostname","then","config","EthersWeb3ReactProvider","children","provider","UnsupportedMainnetFallback","flexDirection","alignItems","justifyContent","height","textAlign","mb","App","loader","m","color","unsupportedNetworkFallback","chainId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Flex, Spinner, Heading, ThemeProvider, Paragraph, Link } from \"theme-ui\";\n\nimport { BatchedWebSocketAugmentedWeb3Provider } from \"@liquity/providers\";\nimport { LiquityProvider } from \"./hooks/LiquityContext\";\nimport { WalletConnector } from \"./components/WalletConnector\";\nimport { TransactionProvider } from \"./components/Transaction\";\nimport { Icon } from \"./components/Icon\";\nimport { getConfig } from \"./config\";\nimport theme from \"./theme\";\n\nimport { DisposableWalletProvider } from \"./testUtils/DisposableWalletProvider\";\nimport { LiquityFrontend } from \"./LiquityFrontend\";\n\nif (window.ethereum) {\n  // Silence MetaMask warning in console\n  Object.assign(window.ethereum, { autoRefreshOnNetworkChange: false });\n}\n\nif (process.env.REACT_APP_DEMO_MODE === \"true\") {\n  const ethereum = new DisposableWalletProvider(\n    `http://${window.location.hostname}:8545`,\n    \"0x4d5db4107d237df6a3d58ee5f70ae63d73d7658d4026f2eefd2f204c81682cb7\"\n  );\n\n  Object.assign(window, { ethereum });\n}\n\n// Start pre-fetching the config\ngetConfig().then(config => {\n  // console.log(\"Frontend config:\");\n  // console.log(config);\n  Object.assign(window, { config });\n});\n\nconst EthersWeb3ReactProvider: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={provider => new BatchedWebSocketAugmentedWeb3Provider(provider)}>\n      {children}\n    </Web3ReactProvider>\n  );\n};\n\nconst UnsupportedMainnetFallback: React.FC = () => (\n  <Flex\n    sx={{\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      textAlign: \"center\"\n    }}\n  >\n    <Heading sx={{ mb: 3 }}>\n      <Icon name=\"exclamation-triangle\" /> This app is for testing purposes only.\n    </Heading>\n\n    <Paragraph sx={{ mb: 3 }}>\n      Please change your network to Ropsten, Rinkeby, Kovan or GÃ¶rli.\n    </Paragraph>\n\n    <Paragraph>\n      If you'd like to use the Liquity Protocol on mainnet, please pick a frontend{\" \"}\n      <Link href=\"https://www.liquity.org/frontend\">\n        here <Icon name=\"external-link-alt\" size=\"xs\" />\n      </Link>\n      .\n    </Paragraph>\n  </Flex>\n);\n\nconst App = () => {\n  const loader = (\n    <Flex sx={{ alignItems: \"center\", justifyContent: \"center\", height: \"100vh\" }}>\n      <Spinner sx={{ m: 2, color: \"text\" }} size=\"32px\" />\n      <Heading>Loading...</Heading>\n    </Flex>\n  );\n\n  const unsupportedNetworkFallback = (chainId: number) => (\n    <Flex\n      sx={{\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        textAlign: \"center\"\n      }}\n    >\n      <Heading sx={{ mb: 3 }}>\n        <Icon name=\"exclamation-triangle\" /> Liquity is not yet deployed to{\" \"}\n        {chainId === 1 ? \"mainnet\" : \"this network\"}.\n      </Heading>\n      Please switch to Ropsten, Rinkeby, Kovan or GÃ¶rli.\n    </Flex>\n  );\n\n  return (\n    <EthersWeb3ReactProvider>\n      <ThemeProvider theme={theme}>\n        <WalletConnector loader={loader}>\n          <LiquityProvider\n            loader={loader}\n            unsupportedNetworkFallback={unsupportedNetworkFallback}\n            unsupportedMainnetFallback={<UnsupportedMainnetFallback />}\n          >\n            <TransactionProvider>\n              <LiquityFrontend loader={loader} />\n            </TransactionProvider>\n          </LiquityProvider>\n        </WalletConnector>\n      </ThemeProvider>\n    </EthersWeb3ReactProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}