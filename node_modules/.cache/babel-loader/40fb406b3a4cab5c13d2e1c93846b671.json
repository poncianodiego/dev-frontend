{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Description.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Text } from \"theme-ui\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { LP } from \"../../../strings\";\nimport { Transaction } from \"../../Transaction\";\nimport { ActionDescription } from \"../../ActionDescription\";\nimport { useValidationState } from \"../context/useValidationState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transactionId = \"farm-stake\";\nexport const Description = ({\n  amount\n}) => {\n  _s();\n\n  const {\n    liquity: {\n      send: liquity\n    }\n  } = useLiquity();\n  const {\n    isValid,\n    hasApproved,\n    isWithdrawing,\n    amountChanged\n  } = useValidationState(amount);\n\n  if (!hasApproved) {\n    return /*#__PURE__*/_jsxDEV(ActionDescription, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"To stake your \", LP, \" tokens you need to allow Liquity to stake them for you\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isValid || amountChanged.isZero) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ActionDescription, {\n    children: [isWithdrawing && /*#__PURE__*/_jsxDEV(Transaction, {\n      id: transactionId,\n      send: liquity.unstakeUniTokens.bind(liquity, amountChanged),\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"You are unstaking \", amountChanged.prettify(4), \" \", LP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), !isWithdrawing && /*#__PURE__*/_jsxDEV(Transaction, {\n      id: transactionId,\n      send: liquity.stakeUniTokens.bind(liquity, amountChanged),\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"You are staking \", amountChanged.prettify(4), \" \", LP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Description, \"BtKClW8Wiuu3d8CT2ILDahds8zc=\", false, function () {\n  return [useLiquity, useValidationState];\n});\n\n_c = Description;\n\nvar _c;\n\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Description.tsx"],"names":["React","Text","useLiquity","LP","Transaction","ActionDescription","useValidationState","transactionId","Description","amount","liquity","send","isValid","hasApproved","isWithdrawing","amountChanged","isZero","unstakeUniTokens","bind","prettify","stakeUniTokens"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;;AAMA,MAAMC,aAAa,GAAG,YAAtB;AAEA,OAAO,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACrE,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAED;AAAR;AADL,MAEFR,UAAU,EAFd;AAGA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA,aAAxB;AAAuCC,IAAAA;AAAvC,MAAyDT,kBAAkB,CAACG,MAAD,CAAjF;;AAEA,MAAI,CAACI,WAAL,EAAkB;AAChB,wBACE,QAAC,iBAAD;AAAA,6BACE,QAAC,IAAD;AAAA,qCAAqBV,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAI,CAACS,OAAD,IAAYG,aAAa,CAACC,MAA9B,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,iBAAD;AAAA,eACGF,aAAa,iBACZ,QAAC,WAAD;AAAa,MAAA,EAAE,EAAEP,aAAjB;AAAgC,MAAA,IAAI,EAAEG,OAAO,CAACO,gBAAR,CAAyBC,IAAzB,CAA8BR,OAA9B,EAAuCK,aAAvC,CAAtC;AAAA,6BACE,QAAC,IAAD;AAAA,yCACqBA,aAAa,CAACI,QAAd,CAAuB,CAAvB,CADrB,OACiDhB,EADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQG,CAACW,aAAD,iBACC,QAAC,WAAD;AAAa,MAAA,EAAE,EAAEP,aAAjB;AAAgC,MAAA,IAAI,EAAEG,OAAO,CAACU,cAAR,CAAuBF,IAAvB,CAA4BR,OAA5B,EAAqCK,aAArC,CAAtC;AAAA,6BACE,QAAC,IAAD;AAAA,uCACmBA,aAAa,CAACI,QAAd,CAAuB,CAAvB,CADnB,OAC+ChB,EAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApCM;;GAAMK,W;UAGPN,U,EAC2DI,kB;;;KAJpDE,W","sourcesContent":["import React from \"react\";\nimport { Text } from \"theme-ui\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { LP } from \"../../../strings\";\nimport { Transaction } from \"../../Transaction\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { ActionDescription } from \"../../ActionDescription\";\nimport { useValidationState } from \"../context/useValidationState\";\n\ntype DescriptionProps = {\n  amount: Decimal;\n};\n\nconst transactionId = \"farm-stake\";\n\nexport const Description: React.FC<DescriptionProps> = ({ amount }) => {\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n  const { isValid, hasApproved, isWithdrawing, amountChanged } = useValidationState(amount);\n\n  if (!hasApproved) {\n    return (\n      <ActionDescription>\n        <Text>To stake your {LP} tokens you need to allow Liquity to stake them for you</Text>\n      </ActionDescription>\n    );\n  }\n\n  if (!isValid || amountChanged.isZero) {\n    return null;\n  }\n\n  return (\n    <ActionDescription>\n      {isWithdrawing && (\n        <Transaction id={transactionId} send={liquity.unstakeUniTokens.bind(liquity, amountChanged)}>\n          <Text>\n            You are unstaking {amountChanged.prettify(4)} {LP}\n          </Text>\n        </Transaction>\n      )}\n      {!isWithdrawing && (\n        <Transaction id={transactionId} send={liquity.stakeUniTokens.bind(liquity, amountChanged)}>\n          <Text>\n            You are staking {amountChanged.prettify(4)} {LP}\n          </Text>\n        </Transaction>\n      )}\n    </ActionDescription>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}