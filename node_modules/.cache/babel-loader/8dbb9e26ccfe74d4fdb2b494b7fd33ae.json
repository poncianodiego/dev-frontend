{"ast":null,"code":"import React from\"react\";import{Text}from\"theme-ui\";import{useLiquity}from\"../../../hooks/LiquityContext\";import{LP}from\"../../../strings\";import{Transaction}from\"../../Transaction\";import{ActionDescription}from\"../../ActionDescription\";import{useValidationState}from\"../context/useValidationState\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var transactionId=\"farm-stake\";export var Description=function Description(_ref){var amount=_ref.amount;var _useLiquity=useLiquity(),liquity=_useLiquity.liquity.send;var _useValidationState=useValidationState(amount),isValid=_useValidationState.isValid,hasApproved=_useValidationState.hasApproved,isWithdrawing=_useValidationState.isWithdrawing,amountChanged=_useValidationState.amountChanged;if(!hasApproved){return/*#__PURE__*/_jsx(ActionDescription,{children:/*#__PURE__*/_jsxs(Text,{children:[\"To stake your \",LP,\" tokens you need to allow Liquity to stake them for you\"]})});}if(!isValid||amountChanged.isZero){return null;}return/*#__PURE__*/_jsxs(ActionDescription,{children:[isWithdrawing&&/*#__PURE__*/_jsx(Transaction,{id:transactionId,send:liquity.unstakeUniTokens.bind(liquity,amountChanged),children:/*#__PURE__*/_jsxs(Text,{children:[\"You are unstaking \",amountChanged.prettify(4),\" \",LP]})}),!isWithdrawing&&/*#__PURE__*/_jsx(Transaction,{id:transactionId,send:liquity.stakeUniTokens.bind(liquity,amountChanged),children:/*#__PURE__*/_jsxs(Text,{children:[\"You are staking \",amountChanged.prettify(4),\" \",LP]})})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Description.tsx"],"names":["React","Text","useLiquity","LP","Transaction","ActionDescription","useValidationState","transactionId","Description","amount","liquity","send","isValid","hasApproved","isWithdrawing","amountChanged","isZero","unstakeUniTokens","bind","prettify","stakeUniTokens"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,UAArB,CACA,OAASC,UAAT,KAA2B,+BAA3B,CACA,OAASC,EAAT,KAAmB,kBAAnB,CACA,OAASC,WAAT,KAA4B,mBAA5B,CAEA,OAASC,iBAAT,KAAkC,yBAAlC,CACA,OAASC,kBAAT,KAAmC,+BAAnC,C,wFAMA,GAAMC,CAAAA,aAAa,CAAG,YAAtB,CAEA,MAAO,IAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,iBAGjEP,UAAU,EAHuD,CAElDQ,OAFkD,aAEnEA,OAFmE,CAExDC,IAFwD,yBAINL,kBAAkB,CAACG,MAAD,CAJZ,CAI7DG,OAJ6D,qBAI7DA,OAJ6D,CAIpDC,WAJoD,qBAIpDA,WAJoD,CAIvCC,aAJuC,qBAIvCA,aAJuC,CAIxBC,aAJwB,qBAIxBA,aAJwB,CAMrE,GAAI,CAACF,WAAL,CAAkB,CAChB,mBACE,KAAC,iBAAD,wBACE,MAAC,IAAD,6BAAqBV,EAArB,6DADF,EADF,CAKD,CAED,GAAI,CAACS,OAAD,EAAYG,aAAa,CAACC,MAA9B,CAAsC,CACpC,MAAO,KAAP,CACD,CAED,mBACE,MAAC,iBAAD,YACGF,aAAa,eACZ,KAAC,WAAD,EAAa,EAAE,CAAEP,aAAjB,CAAgC,IAAI,CAAEG,OAAO,CAACO,gBAAR,CAAyBC,IAAzB,CAA8BR,OAA9B,CAAuCK,aAAvC,CAAtC,uBACE,MAAC,IAAD,iCACqBA,aAAa,CAACI,QAAd,CAAuB,CAAvB,CADrB,KACiDhB,EADjD,GADF,EAFJ,CAQG,CAACW,aAAD,eACC,KAAC,WAAD,EAAa,EAAE,CAAEP,aAAjB,CAAgC,IAAI,CAAEG,OAAO,CAACU,cAAR,CAAuBF,IAAvB,CAA4BR,OAA5B,CAAqCK,aAArC,CAAtC,uBACE,MAAC,IAAD,+BACmBA,aAAa,CAACI,QAAd,CAAuB,CAAvB,CADnB,KAC+ChB,EAD/C,GADF,EATJ,GADF,CAkBD,CApCM","sourcesContent":["import React from \"react\";\nimport { Text } from \"theme-ui\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { LP } from \"../../../strings\";\nimport { Transaction } from \"../../Transaction\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { ActionDescription } from \"../../ActionDescription\";\nimport { useValidationState } from \"../context/useValidationState\";\n\ntype DescriptionProps = {\n  amount: Decimal;\n};\n\nconst transactionId = \"farm-stake\";\n\nexport const Description: React.FC<DescriptionProps> = ({ amount }) => {\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n  const { isValid, hasApproved, isWithdrawing, amountChanged } = useValidationState(amount);\n\n  if (!hasApproved) {\n    return (\n      <ActionDescription>\n        <Text>To stake your {LP} tokens you need to allow Liquity to stake them for you</Text>\n      </ActionDescription>\n    );\n  }\n\n  if (!isValid || amountChanged.isZero) {\n    return null;\n  }\n\n  return (\n    <ActionDescription>\n      {isWithdrawing && (\n        <Transaction id={transactionId} send={liquity.unstakeUniTokens.bind(liquity, amountChanged)}>\n          <Text>\n            You are unstaking {amountChanged.prettify(4)} {LP}\n          </Text>\n        </Transaction>\n      )}\n      {!isWithdrawing && (\n        <Transaction id={transactionId} send={liquity.stakeUniTokens.bind(liquity, amountChanged)}>\n          <Text>\n            You are staking {amountChanged.prettify(4)} {LP}\n          </Text>\n        </Transaction>\n      )}\n    </ActionDescription>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}