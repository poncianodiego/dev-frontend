{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/PriceManager.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Box, Heading, Flex, Button, Label, Input } from \"theme-ui\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { Icon } from \"./Icon\";\nimport { Transaction } from \"./Transaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectPrice = ({\n  price\n}) => price;\n\nexport const PriceManager = () => {\n  _s();\n\n  const {\n    liquity: {\n      send: liquity,\n      connection: {\n        _priceFeedIsTestnet: canSetPrice\n      }\n    }\n  } = useLiquity();\n  const price = useLiquitySelector(selectPrice);\n  const [editedPrice, setEditedPrice] = useState(price.toString(2));\n  useEffect(() => {\n    setEditedPrice(price.toString(2));\n  }, [price]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Price feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          alignItems: \"stretch\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"ETH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          variant: \"unit\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: canSetPrice ? \"number\" : \"text\",\n          step: \"any\",\n          value: editedPrice,\n          onChange: e => setEditedPrice(e.target.value),\n          disabled: !canSetPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), canSetPrice && /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            ml: 2,\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Transaction, {\n            id: \"set-price\",\n            tooltip: \"Set\",\n            tooltipPlacement: \"bottom\",\n            send: overrides => {\n              if (!editedPrice) {\n                throw new Error(\"Invalid price\");\n              }\n\n              return liquity.setPrice(Decimal.from(editedPrice), overrides);\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"icon\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"chart-line\",\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PriceManager, \"biQI773CEHsLK2xiesxwirW+Q8I=\", false, function () {\n  return [useLiquity, useLiquitySelector];\n});\n\n_c = PriceManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceManager\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/PriceManager.tsx"],"names":["React","useState","useEffect","Card","Box","Heading","Flex","Button","Label","Input","Decimal","useLiquitySelector","useLiquity","Icon","Transaction","selectPrice","price","PriceManager","liquity","send","connection","_priceFeedIsTestnet","canSetPrice","editedPrice","setEditedPrice","toString","p","alignItems","e","target","value","ml","overrides","Error","setPrice","from"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Box, Heading, Flex, Button, Label, Input } from \"theme-ui\";\n\nimport { Decimal, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Icon } from \"./Icon\";\nimport { Transaction } from \"./Transaction\";\n\nconst selectPrice = ({ price }: LiquityStoreState) => price;\n\nexport const PriceManager: React.FC = () => {\n  const {\n    liquity: {\n      send: liquity,\n      connection: { _priceFeedIsTestnet: canSetPrice }\n    }\n  } = useLiquity();\n\n  const price = useLiquitySelector(selectPrice);\n  const [editedPrice, setEditedPrice] = useState(price.toString(2));\n\n  useEffect(() => {\n    setEditedPrice(price.toString(2));\n  }, [price]);\n\n  return (\n    <Card>\n      <Heading>Price feed</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <Flex sx={{ alignItems: \"stretch\" }}>\n          <Label>ETH</Label>\n\n          <Label variant=\"unit\">$</Label>\n\n          <Input\n            type={canSetPrice ? \"number\" : \"text\"}\n            step=\"any\"\n            value={editedPrice}\n            onChange={e => setEditedPrice(e.target.value)}\n            disabled={!canSetPrice}\n          />\n\n          {canSetPrice && (\n            <Flex sx={{ ml: 2, alignItems: \"center\" }}>\n              <Transaction\n                id=\"set-price\"\n                tooltip=\"Set\"\n                tooltipPlacement=\"bottom\"\n                send={overrides => {\n                  if (!editedPrice) {\n                    throw new Error(\"Invalid price\");\n                  }\n                  return liquity.setPrice(Decimal.from(editedPrice), overrides);\n                }}\n              >\n                <Button variant=\"icon\">\n                  <Icon name=\"chart-line\" size=\"lg\" />\n                </Button>\n              </Transaction>\n            </Flex>\n          )}\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}