{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/ActiveDeposit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { COIN, GT } from \"../../strings\";\nimport { Icon } from \"../Icon\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { useMyTransactionState } from \"../Transaction\";\nimport { DisabledEditableRow, StaticRow } from \"../Trove/Editor\";\nimport { ClaimAndMove } from \"./actions/ClaimAndMove\";\nimport { ClaimRewards } from \"./actions/ClaimRewards\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport { RemainingLQTY } from \"./RemainingLQTY\";\nimport { Yield } from \"./Yield\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selector = ({\n  stabilityDeposit,\n  trove,\n  lusdInStabilityPool\n}) => ({\n  stabilityDeposit,\n  trove,\n  lusdInStabilityPool\n});\n\nexport const ActiveDeposit = () => {\n  _s();\n\n  const {\n    dispatchEvent\n  } = useStabilityView();\n  const {\n    stabilityDeposit,\n    trove,\n    lusdInStabilityPool\n  } = useLiquitySelector(selector);\n  const poolShare = stabilityDeposit.currentLUSD.mulDiv(100, lusdInStabilityPool);\n  const handleAdjustDeposit = useCallback(() => {\n    dispatchEvent(\"ADJUST_DEPOSIT_PRESSED\");\n  }, [dispatchEvent]);\n  const hasReward = !stabilityDeposit.lqtyReward.isZero;\n  const hasGain = !stabilityDeposit.collateralGain.isZero;\n  const hasTrove = !trove.isEmpty;\n  const transactionId = \"stability-deposit\";\n  const transactionState = useMyTransactionState(transactionId);\n  const isWaitingForTransaction = transactionState.type === \"waitingForApproval\" || transactionState.type === \"waitingForConfirmation\";\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"REWARDS_CLAIMED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: [\"Stability Pool\", !isWaitingForTransaction && /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"flex-end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(RemainingLQTY, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(DisabledEditableRow, {\n          label: \"Deposit\",\n          inputId: \"deposit-lusd\",\n          amount: stabilityDeposit.currentLUSD.prettify(),\n          unit: COIN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StaticRow, {\n          label: \"Pool share\",\n          inputId: \"deposit-share\",\n          amount: poolShare.prettify(4),\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StaticRow, {\n          label: \"Liquidation gain\",\n          inputId: \"deposit-gain\",\n          amount: stabilityDeposit.collateralGain.prettify(4),\n          color: stabilityDeposit.collateralGain.nonZero && \"success\",\n          unit: \"ETH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(StaticRow, {\n            label: \"Reward\",\n            inputId: \"deposit-reward\",\n            amount: stabilityDeposit.lqtyReward.prettify(),\n            color: stabilityDeposit.lqtyReward.nonZero && \"success\",\n            unit: GT,\n            infoIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {\n              tooltip: /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"tooltip\",\n                sx: {\n                  width: \"240px\"\n                },\n                children: \"Although the LQTY rewards accrue every minute, the value on the UI only updates when a user transacts with the Stability Pool. Therefore you may receive more rewards than is displayed when you claim or adjust your deposit.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            sx: {\n              justifyContent: \"flex-end\",\n              flex: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Yield, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        variant: \"layout.actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: handleAdjustDeposit,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"pen\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), \"\\xA0Adjust\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClaimRewards, {\n          disabled: !hasGain && !hasReward,\n          children: \"Claim ETH and LQTY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), hasTrove && /*#__PURE__*/_jsxDEV(ClaimAndMove, {\n        disabled: !hasGain,\n        children: \"Claim LQTY and move ETH to Trove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isWaitingForTransaction && /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActiveDeposit, \"Z2P9THfcLWbcuSLP/iVaghHrMYs=\", false, function () {\n  return [useStabilityView, useLiquitySelector, useMyTransactionState];\n});\n\n_c = ActiveDeposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveDeposit\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/ActiveDeposit.tsx"],"names":["React","useCallback","useEffect","Card","Heading","Box","Flex","Button","useLiquitySelector","COIN","GT","Icon","LoadingOverlay","useMyTransactionState","DisabledEditableRow","StaticRow","ClaimAndMove","ClaimRewards","useStabilityView","RemainingLQTY","Yield","InfoIcon","selector","stabilityDeposit","trove","lusdInStabilityPool","ActiveDeposit","dispatchEvent","poolShare","currentLUSD","mulDiv","handleAdjustDeposit","hasReward","lqtyReward","isZero","hasGain","collateralGain","hasTrove","isEmpty","transactionId","transactionState","isWaitingForTransaction","type","justifyContent","p","prettify","nonZero","alignItems","width","flex"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN, GT } from \"../../strings\";\nimport { Icon } from \"../Icon\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { useMyTransactionState } from \"../Transaction\";\nimport { DisabledEditableRow, StaticRow } from \"../Trove/Editor\";\nimport { ClaimAndMove } from \"./actions/ClaimAndMove\";\nimport { ClaimRewards } from \"./actions/ClaimRewards\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport { RemainingLQTY } from \"./RemainingLQTY\";\nimport { Yield } from \"./Yield\";\nimport { InfoIcon } from \"../InfoIcon\";\n\nconst selector = ({ stabilityDeposit, trove, lusdInStabilityPool }: LiquityStoreState) => ({\n  stabilityDeposit,\n  trove,\n  lusdInStabilityPool\n});\n\nexport const ActiveDeposit: React.FC = () => {\n  const { dispatchEvent } = useStabilityView();\n  const { stabilityDeposit, trove, lusdInStabilityPool } = useLiquitySelector(selector);\n\n  const poolShare = stabilityDeposit.currentLUSD.mulDiv(100, lusdInStabilityPool);\n\n  const handleAdjustDeposit = useCallback(() => {\n    dispatchEvent(\"ADJUST_DEPOSIT_PRESSED\");\n  }, [dispatchEvent]);\n\n  const hasReward = !stabilityDeposit.lqtyReward.isZero;\n  const hasGain = !stabilityDeposit.collateralGain.isZero;\n  const hasTrove = !trove.isEmpty;\n\n  const transactionId = \"stability-deposit\";\n  const transactionState = useMyTransactionState(transactionId);\n  const isWaitingForTransaction =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"REWARDS_CLAIMED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>\n        Stability Pool\n        {!isWaitingForTransaction && (\n          <Flex sx={{ justifyContent: \"flex-end\" }}>\n            <RemainingLQTY />\n          </Flex>\n        )}\n      </Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <Box>\n          <DisabledEditableRow\n            label=\"Deposit\"\n            inputId=\"deposit-lusd\"\n            amount={stabilityDeposit.currentLUSD.prettify()}\n            unit={COIN}\n          />\n\n          <StaticRow\n            label=\"Pool share\"\n            inputId=\"deposit-share\"\n            amount={poolShare.prettify(4)}\n            unit=\"%\"\n          />\n\n          <StaticRow\n            label=\"Liquidation gain\"\n            inputId=\"deposit-gain\"\n            amount={stabilityDeposit.collateralGain.prettify(4)}\n            color={stabilityDeposit.collateralGain.nonZero && \"success\"}\n            unit=\"ETH\"\n          />\n\n          <Flex sx={{ alignItems: \"center\" }}>\n            <StaticRow\n              label=\"Reward\"\n              inputId=\"deposit-reward\"\n              amount={stabilityDeposit.lqtyReward.prettify()}\n              color={stabilityDeposit.lqtyReward.nonZero && \"success\"}\n              unit={GT}\n              infoIcon={\n                <InfoIcon\n                  tooltip={\n                    <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                      Although the LQTY rewards accrue every minute, the value on the UI only updates\n                      when a user transacts with the Stability Pool. Therefore you may receive more\n                      rewards than is displayed when you claim or adjust your deposit.\n                    </Card>\n                  }\n                />\n              }\n            />\n            <Flex sx={{ justifyContent: \"flex-end\", flex: 1 }}>\n              <Yield />\n            </Flex>\n          </Flex>\n        </Box>\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"outline\" onClick={handleAdjustDeposit}>\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n\n          <ClaimRewards disabled={!hasGain && !hasReward}>Claim ETH and LQTY</ClaimRewards>\n        </Flex>\n\n        {hasTrove && (\n          <ClaimAndMove disabled={!hasGain}>Claim LQTY and move ETH to Trove</ClaimAndMove>\n        )}\n      </Box>\n\n      {isWaitingForTransaction && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}