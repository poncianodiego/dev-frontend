{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Card,Box,Heading,Flex,Button,Label,Input}from\"theme-ui\";import{Decimal}from\"@liquity/lib-base\";import{useLiquitySelector}from\"@liquity/lib-react\";import{useLiquity}from\"../hooks/LiquityContext\";import{Icon}from\"./Icon\";import{Transaction}from\"./Transaction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var selectPrice=function selectPrice(_ref){var price=_ref.price;return price;};export var PriceManager=function PriceManager(){var _useLiquity=useLiquity(),_useLiquity$liquity=_useLiquity.liquity,liquity=_useLiquity$liquity.send,canSetPrice=_useLiquity$liquity.connection._priceFeedIsTestnet;var price=useLiquitySelector(selectPrice);var _useState=useState(price.toString(2)),_useState2=_slicedToArray(_useState,2),editedPrice=_useState2[0],setEditedPrice=_useState2[1];useEffect(function(){setEditedPrice(price.toString(2));},[price]);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Heading,{children:\"Price feed\"}),/*#__PURE__*/_jsx(Box,{sx:{p:[2,3]},children:/*#__PURE__*/_jsxs(Flex,{sx:{alignItems:\"stretch\"},children:[/*#__PURE__*/_jsx(Label,{children:\"ETH\"}),/*#__PURE__*/_jsx(Label,{variant:\"unit\",children:\"$\"}),/*#__PURE__*/_jsx(Input,{type:canSetPrice?\"number\":\"text\",step:\"any\",value:editedPrice,onChange:function onChange(e){return setEditedPrice(e.target.value);},disabled:!canSetPrice}),canSetPrice&&/*#__PURE__*/_jsx(Flex,{sx:{ml:2,alignItems:\"center\"},children:/*#__PURE__*/_jsx(Transaction,{id:\"set-price\",tooltip:\"Set\",tooltipPlacement:\"bottom\",send:function send(overrides){if(!editedPrice){throw new Error(\"Invalid price\");}return liquity.setPrice(Decimal.from(editedPrice),overrides);},children:/*#__PURE__*/_jsx(Button,{variant:\"icon\",children:/*#__PURE__*/_jsx(Icon,{name:\"chart-line\",size:\"lg\"})})})})]})})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/PriceManager.tsx"],"names":["React","useState","useEffect","Card","Box","Heading","Flex","Button","Label","Input","Decimal","useLiquitySelector","useLiquity","Icon","Transaction","selectPrice","price","PriceManager","liquity","send","canSetPrice","connection","_priceFeedIsTestnet","toString","editedPrice","setEditedPrice","p","alignItems","e","target","value","ml","overrides","Error","setPrice","from"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,OAApB,CAA6BC,IAA7B,CAAmCC,MAAnC,CAA2CC,KAA3C,CAAkDC,KAAlD,KAA+D,UAA/D,CAEA,OAASC,OAAT,KAA2C,mBAA3C,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CAEA,OAASC,UAAT,KAA2B,yBAA3B,CAEA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,WAAT,KAA4B,eAA5B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAkCA,CAAAA,KAAlC,EAApB,CAEA,MAAO,IAAMC,CAAAA,YAAsB,CAAG,QAAzBA,CAAAA,YAAyB,EAAM,iBAMtCL,UAAU,EAN4B,iCAExCM,OAFwC,CAGhCA,OAHgC,qBAGtCC,IAHsC,CAIHC,WAJG,qBAItCC,UAJsC,CAIxBC,mBAJwB,CAQ1C,GAAMN,CAAAA,KAAK,CAAGL,kBAAkB,CAACI,WAAD,CAAhC,CAR0C,cASJd,QAAQ,CAACe,KAAK,CAACO,QAAN,CAAe,CAAf,CAAD,CATJ,wCASnCC,WATmC,eAStBC,cATsB,eAW1CvB,SAAS,CAAC,UAAM,CACduB,cAAc,CAACT,KAAK,CAACO,QAAN,CAAe,CAAf,CAAD,CAAd,CACD,CAFQ,CAEN,CAACP,KAAD,CAFM,CAAT,CAIA,mBACE,MAAC,IAAD,yBACE,KAAC,OAAD,yBADF,cAGE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEU,CAAC,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAL,CAAT,uBACE,MAAC,IAAD,EAAM,EAAE,CAAE,CAAEC,UAAU,CAAE,SAAd,CAAV,wBACE,KAAC,KAAD,kBADF,cAGE,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,eAHF,cAKE,KAAC,KAAD,EACE,IAAI,CAAEP,WAAW,CAAG,QAAH,CAAc,MADjC,CAEE,IAAI,CAAC,KAFP,CAGE,KAAK,CAAEI,WAHT,CAIE,QAAQ,CAAE,kBAAAI,CAAC,QAAIH,CAAAA,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAJb,CAKE,QAAQ,CAAE,CAACV,WALb,EALF,CAaGA,WAAW,eACV,KAAC,IAAD,EAAM,EAAE,CAAE,CAAEW,EAAE,CAAE,CAAN,CAASJ,UAAU,CAAE,QAArB,CAAV,uBACE,KAAC,WAAD,EACE,EAAE,CAAC,WADL,CAEE,OAAO,CAAC,KAFV,CAGE,gBAAgB,CAAC,QAHnB,CAIE,IAAI,CAAE,cAAAK,SAAS,CAAI,CACjB,GAAI,CAACR,WAAL,CAAkB,CAChB,KAAM,IAAIS,CAAAA,KAAJ,CAAU,eAAV,CAAN,CACD,CACD,MAAOf,CAAAA,OAAO,CAACgB,QAAR,CAAiBxB,OAAO,CAACyB,IAAR,CAAaX,WAAb,CAAjB,CAA4CQ,SAA5C,CAAP,CACD,CATH,uBAWE,KAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,uBACE,KAAC,IAAD,EAAM,IAAI,CAAC,YAAX,CAAwB,IAAI,CAAC,IAA7B,EADF,EAXF,EADF,EAdJ,GADF,EAHF,GADF,CAyCD,CAxDM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Box, Heading, Flex, Button, Label, Input } from \"theme-ui\";\n\nimport { Decimal, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Icon } from \"./Icon\";\nimport { Transaction } from \"./Transaction\";\n\nconst selectPrice = ({ price }: LiquityStoreState) => price;\n\nexport const PriceManager: React.FC = () => {\n  const {\n    liquity: {\n      send: liquity,\n      connection: { _priceFeedIsTestnet: canSetPrice }\n    }\n  } = useLiquity();\n\n  const price = useLiquitySelector(selectPrice);\n  const [editedPrice, setEditedPrice] = useState(price.toString(2));\n\n  useEffect(() => {\n    setEditedPrice(price.toString(2));\n  }, [price]);\n\n  return (\n    <Card>\n      <Heading>Price feed</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <Flex sx={{ alignItems: \"stretch\" }}>\n          <Label>ETH</Label>\n\n          <Label variant=\"unit\">$</Label>\n\n          <Input\n            type={canSetPrice ? \"number\" : \"text\"}\n            step=\"any\"\n            value={editedPrice}\n            onChange={e => setEditedPrice(e.target.value)}\n            disabled={!canSetPrice}\n          />\n\n          {canSetPrice && (\n            <Flex sx={{ ml: 2, alignItems: \"center\" }}>\n              <Transaction\n                id=\"set-price\"\n                tooltip=\"Set\"\n                tooltipPlacement=\"bottom\"\n                send={overrides => {\n                  if (!editedPrice) {\n                    throw new Error(\"Invalid price\");\n                  }\n                  return liquity.setPrice(Decimal.from(editedPrice), overrides);\n                }}\n              >\n                <Button variant=\"icon\">\n                  <Icon name=\"chart-line\" size=\"lg\" />\n                </Button>\n              </Transaction>\n            </Flex>\n          )}\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}