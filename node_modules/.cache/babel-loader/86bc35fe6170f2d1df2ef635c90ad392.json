{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/context/StabilityViewProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { StabilityViewContext } from \"./StabilityViewContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transitions = {\n  NONE: {\n    DEPOSIT_PRESSED: \"DEPOSITING\"\n  },\n  DEPOSITING: {\n    CANCEL_PRESSED: \"NONE\",\n    DEPOSIT_CONFIRMED: \"ACTIVE\"\n  },\n  ACTIVE: {\n    REWARDS_CLAIMED: \"ACTIVE\",\n    ADJUST_DEPOSIT_PRESSED: \"ADJUSTING\",\n    DEPOSIT_EMPTIED: \"NONE\"\n  },\n  ADJUSTING: {\n    CANCEL_PRESSED: \"ACTIVE\",\n    DEPOSIT_CONFIRMED: \"ACTIVE\",\n    DEPOSIT_EMPTIED: \"NONE\"\n  }\n};\n\nconst transition = (view, event) => {\n  var _transitions$view$eve;\n\n  const nextView = (_transitions$view$eve = transitions[view][event]) !== null && _transitions$view$eve !== void 0 ? _transitions$view$eve : view;\n  return nextView;\n};\n\nconst getInitialView = stabilityDeposit => {\n  return stabilityDeposit.isEmpty ? \"NONE\" : \"ACTIVE\";\n};\n\nconst select = ({\n  stabilityDeposit\n}) => stabilityDeposit;\n\nexport const StabilityViewProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const stabilityDeposit = useLiquitySelector(select);\n  const [view, setView] = useState(getInitialView(stabilityDeposit));\n  const viewRef = useRef(view);\n  const dispatchEvent = useCallback(event => {\n    const nextView = transition(viewRef.current, event);\n    console.log(\"dispatchEvent() [current-view, event, next-view]\", viewRef.current, event, nextView);\n    setView(nextView);\n  }, []);\n  useEffect(() => {\n    viewRef.current = view;\n  }, [view]);\n  useEffect(() => {\n    if (stabilityDeposit.isEmpty) {\n      dispatchEvent(\"DEPOSIT_EMPTIED\");\n    }\n  }, [stabilityDeposit.isEmpty, dispatchEvent]);\n  const provider = {\n    view,\n    dispatchEvent\n  };\n  return /*#__PURE__*/_jsxDEV(StabilityViewContext.Provider, {\n    value: provider,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StabilityViewProvider, \"a5AMHHGFV2DS9YfTFoP4QkjPuy0=\", false, function () {\n  return [useLiquitySelector];\n});\n\n_c = StabilityViewProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StabilityViewProvider\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/context/StabilityViewProvider.tsx"],"names":["React","useState","useCallback","useEffect","useRef","useLiquitySelector","StabilityViewContext","transitions","NONE","DEPOSIT_PRESSED","DEPOSITING","CANCEL_PRESSED","DEPOSIT_CONFIRMED","ACTIVE","REWARDS_CLAIMED","ADJUST_DEPOSIT_PRESSED","DEPOSIT_EMPTIED","ADJUSTING","transition","view","event","nextView","getInitialView","stabilityDeposit","isEmpty","select","StabilityViewProvider","props","children","setView","viewRef","dispatchEvent","current","console","log","provider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,SAASC,oBAAT,QAAqC,wBAArC;;AAQA,MAAMC,WAAsC,GAAG;AAC7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb,GADuC;AAI7CC,EAAAA,UAAU,EAAE;AACVC,IAAAA,cAAc,EAAE,MADN;AAEVC,IAAAA,iBAAiB,EAAE;AAFT,GAJiC;AAQ7CC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,QADX;AAENC,IAAAA,sBAAsB,EAAE,WAFlB;AAGNC,IAAAA,eAAe,EAAE;AAHX,GARqC;AAa7CC,EAAAA,SAAS,EAAE;AACTN,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,iBAAiB,EAAE,QAFV;AAGTI,IAAAA,eAAe,EAAE;AAHR;AAbkC,CAA/C;;AAoBA,MAAME,UAAU,GAAG,CAACC,IAAD,EAAsBC,KAAtB,KAA+D;AAAA;;AAChF,QAAMC,QAAQ,4BAAGd,WAAW,CAACY,IAAD,CAAX,CAAkBC,KAAlB,CAAH,yEAA+BD,IAA7C;AACA,SAAOE,QAAP;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAIC,gBAAD,IAAuD;AAC5E,SAAOA,gBAAgB,CAACC,OAAjB,GAA2B,MAA3B,GAAoC,QAA3C;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAA+DA,gBAA9E;;AAEA,OAAO,MAAMG,qBAA+B,GAAGC,KAAK,IAAI;AAAA;;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAMJ,gBAAgB,GAAGlB,kBAAkB,CAACoB,MAAD,CAA3C;AAEA,QAAM,CAACN,IAAD,EAAOU,OAAP,IAAkB5B,QAAQ,CAAgBqB,cAAc,CAACC,gBAAD,CAA9B,CAAhC;AACA,QAAMO,OAAO,GAAG1B,MAAM,CAAgBe,IAAhB,CAAtB;AAEA,QAAMY,aAAa,GAAG7B,WAAW,CAAEkB,KAAD,IAA2B;AAC3D,UAAMC,QAAQ,GAAGH,UAAU,CAACY,OAAO,CAACE,OAAT,EAAkBZ,KAAlB,CAA3B;AAEAa,IAAAA,OAAO,CAACC,GAAR,CACE,kDADF,EAEEJ,OAAO,CAACE,OAFV,EAGEZ,KAHF,EAIEC,QAJF;AAMAQ,IAAAA,OAAO,CAACR,QAAD,CAAP;AACD,GAVgC,EAU9B,EAV8B,CAAjC;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,OAAO,CAACE,OAAR,GAAkBb,IAAlB;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,gBAAgB,CAACC,OAArB,EAA8B;AAC5BO,MAAAA,aAAa,CAAC,iBAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACR,gBAAgB,CAACC,OAAlB,EAA2BO,aAA3B,CAJM,CAAT;AAMA,QAAMI,QAAQ,GAAG;AACfhB,IAAAA,IADe;AAEfY,IAAAA;AAFe,GAAjB;AAKA,sBAAO,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEI,QAAtC;AAAA,cAAiDP;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnCM;;GAAMF,qB;UAEcrB,kB;;;KAFdqB,qB","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { LiquityStoreState, StabilityDeposit } from \"@liquity/lib-base\";\nimport { StabilityViewContext } from \"./StabilityViewContext\";\nimport type { StabilityView, StabilityEvent } from \"./types\";\n\ntype StabilityEventTransitions = Record<\n  StabilityView,\n  Partial<Record<StabilityEvent, StabilityView>>\n>;\n\nconst transitions: StabilityEventTransitions = {\n  NONE: {\n    DEPOSIT_PRESSED: \"DEPOSITING\"\n  },\n  DEPOSITING: {\n    CANCEL_PRESSED: \"NONE\",\n    DEPOSIT_CONFIRMED: \"ACTIVE\"\n  },\n  ACTIVE: {\n    REWARDS_CLAIMED: \"ACTIVE\",\n    ADJUST_DEPOSIT_PRESSED: \"ADJUSTING\",\n    DEPOSIT_EMPTIED: \"NONE\"\n  },\n  ADJUSTING: {\n    CANCEL_PRESSED: \"ACTIVE\",\n    DEPOSIT_CONFIRMED: \"ACTIVE\",\n    DEPOSIT_EMPTIED: \"NONE\"\n  }\n};\n\nconst transition = (view: StabilityView, event: StabilityEvent): StabilityView => {\n  const nextView = transitions[view][event] ?? view;\n  return nextView;\n};\n\nconst getInitialView = (stabilityDeposit: StabilityDeposit): StabilityView => {\n  return stabilityDeposit.isEmpty ? \"NONE\" : \"ACTIVE\";\n};\n\nconst select = ({ stabilityDeposit }: LiquityStoreState): StabilityDeposit => stabilityDeposit;\n\nexport const StabilityViewProvider: React.FC = props => {\n  const { children } = props;\n  const stabilityDeposit = useLiquitySelector(select);\n\n  const [view, setView] = useState<StabilityView>(getInitialView(stabilityDeposit));\n  const viewRef = useRef<StabilityView>(view);\n\n  const dispatchEvent = useCallback((event: StabilityEvent) => {\n    const nextView = transition(viewRef.current, event);\n\n    console.log(\n      \"dispatchEvent() [current-view, event, next-view]\",\n      viewRef.current,\n      event,\n      nextView\n    );\n    setView(nextView);\n  }, []);\n\n  useEffect(() => {\n    viewRef.current = view;\n  }, [view]);\n\n  useEffect(() => {\n    if (stabilityDeposit.isEmpty) {\n      dispatchEvent(\"DEPOSIT_EMPTIED\");\n    }\n  }, [stabilityDeposit.isEmpty, dispatchEvent]);\n\n  const provider = {\n    view,\n    dispatchEvent\n  };\n\n  return <StabilityViewContext.Provider value={provider}>{children}</StabilityViewContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}