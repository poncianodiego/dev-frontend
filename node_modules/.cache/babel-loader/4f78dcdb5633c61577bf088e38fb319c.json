{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/StabilityDepositManager.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { Button, Flex } from \"theme-ui\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { useLiquityReducer, useLiquitySelector } from \"@liquity/lib-react\";\nimport { COIN } from \"../../strings\";\nimport { ActionDescription } from \"../ActionDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\nimport { StabilityDepositEditor } from \"./StabilityDepositEditor\";\nimport { StabilityDepositAction } from \"./StabilityDepositAction\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport { selectForStabilityDepositChangeValidation, validateStabilityDepositChange } from \"./validation/validateStabilityDepositChange\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst init = ({\n  stabilityDeposit\n}) => ({\n  originalDeposit: stabilityDeposit,\n  editedLUSD: stabilityDeposit.currentLUSD,\n  changePending: false\n});\n\nconst reduceWith = action => state => reduce(state, action);\n\nconst finishChange = reduceWith({\n  type: \"finishChange\"\n});\nconst revert = reduceWith({\n  type: \"revert\"\n});\n\nconst reduce = (state, action) => {\n  // console.log(state);\n  // console.log(action);\n  const {\n    originalDeposit,\n    editedLUSD,\n    changePending\n  } = state;\n\n  switch (action.type) {\n    case \"startChange\":\n      {\n        console.log(\"changeStarted\");\n        return { ...state,\n          changePending: true\n        };\n      }\n\n    case \"finishChange\":\n      return { ...state,\n        changePending: false\n      };\n\n    case \"setDeposit\":\n      return { ...state,\n        editedLUSD: Decimal.from(action.newValue)\n      };\n\n    case \"revert\":\n      return { ...state,\n        editedLUSD: originalDeposit.currentLUSD\n      };\n\n    case \"updateStore\":\n      {\n        const {\n          stateChange: {\n            stabilityDeposit: updatedDeposit\n          }\n        } = action;\n\n        if (!updatedDeposit) {\n          return state;\n        }\n\n        const newState = { ...state,\n          originalDeposit: updatedDeposit\n        };\n        const changeCommitted = !updatedDeposit.initialLUSD.eq(originalDeposit.initialLUSD) || updatedDeposit.currentLUSD.gt(originalDeposit.currentLUSD) || updatedDeposit.collateralGain.lt(originalDeposit.collateralGain) || updatedDeposit.lqtyReward.lt(originalDeposit.lqtyReward);\n\n        if (changePending && changeCommitted) {\n          return finishChange(revert(newState));\n        }\n\n        return { ...newState,\n          editedLUSD: updatedDeposit.apply(originalDeposit.whatChanged(editedLUSD))\n        };\n      }\n  }\n};\n\nconst transactionId = \"stability-deposit\";\nexport const StabilityDepositManager = () => {\n  _s();\n\n  const [{\n    originalDeposit,\n    editedLUSD,\n    changePending\n  }, dispatch] = useLiquityReducer(reduce, init);\n  const validationContext = useLiquitySelector(selectForStabilityDepositChangeValidation);\n  const {\n    dispatchEvent\n  } = useStabilityView();\n  const handleCancel = useCallback(() => {\n    dispatchEvent(\"CANCEL_PRESSED\");\n  }, [dispatchEvent]);\n  const [validChange, description] = validateStabilityDepositChange(originalDeposit, editedLUSD, validationContext);\n  const makingNewDeposit = originalDeposit.isEmpty;\n  const myTransactionState = useMyTransactionState(transactionId);\n  useEffect(() => {\n    if (myTransactionState.type === \"waitingForApproval\" || myTransactionState.type === \"waitingForConfirmation\") {\n      dispatch({\n        type: \"startChange\"\n      });\n    } else if (myTransactionState.type === \"failed\" || myTransactionState.type === \"cancelled\") {\n      dispatch({\n        type: \"finishChange\"\n      });\n    } else if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"DEPOSIT_CONFIRMED\");\n    }\n  }, [myTransactionState.type, dispatch, dispatchEvent]);\n  return /*#__PURE__*/_jsxDEV(StabilityDepositEditor, {\n    originalDeposit: originalDeposit,\n    editedLUSD: editedLUSD,\n    changePending: changePending,\n    dispatch: dispatch,\n    children: [description !== null && description !== void 0 ? description : makingNewDeposit ? /*#__PURE__*/_jsxDEV(ActionDescription, {\n      children: [\"Enter the amount of \", COIN, \" you'd like to deposit.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(ActionDescription, {\n      children: [\"Adjust the \", COIN, \" amount to deposit or withdraw.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      variant: \"layout.actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"cancel\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), validChange ? /*#__PURE__*/_jsxDEV(StabilityDepositAction, {\n        transactionId: transactionId,\n        change: validChange,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: true,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StabilityDepositManager, \"H/fLyyp2s1eVLRZSr/StgyXzn70=\", false, function () {\n  return [useLiquityReducer, useLiquitySelector, useStabilityView, useMyTransactionState];\n});\n\n_c = StabilityDepositManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"StabilityDepositManager\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/StabilityDepositManager.tsx"],"names":["React","useCallback","useEffect","Button","Flex","Decimal","useLiquityReducer","useLiquitySelector","COIN","ActionDescription","useMyTransactionState","StabilityDepositEditor","StabilityDepositAction","useStabilityView","selectForStabilityDepositChangeValidation","validateStabilityDepositChange","init","stabilityDeposit","originalDeposit","editedLUSD","currentLUSD","changePending","reduceWith","action","state","reduce","finishChange","type","revert","console","log","from","newValue","stateChange","updatedDeposit","newState","changeCommitted","initialLUSD","eq","gt","collateralGain","lt","lqtyReward","apply","whatChanged","transactionId","StabilityDepositManager","dispatch","validationContext","dispatchEvent","handleCancel","validChange","description","makingNewDeposit","isEmpty","myTransactionState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,UAA7B;AAEA,SAASC,OAAT,QAAuD,mBAAvD;AACA,SAA6BC,iBAA7B,EAAgDC,kBAAhD,QAA0E,oBAA1E;AAEA,SAASC,IAAT,QAAqB,eAArB;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AAEA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SACEC,yCADF,EAEEC,8BAFF,QAGO,6CAHP;;;AAKA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAA8C;AACzDC,EAAAA,eAAe,EAAED,gBADwC;AAEzDE,EAAAA,UAAU,EAAEF,gBAAgB,CAACG,WAF4B;AAGzDC,EAAAA,aAAa,EAAE;AAH0C,CAA9C,CAAb;;AAYA,MAAMC,UAAU,GAAIC,MAAD,IACjBC,KAD4D,IAE3BC,MAAM,CAACD,KAAD,EAAQD,MAAR,CAFzC;;AAIA,MAAMG,YAAY,GAAGJ,UAAU,CAAC;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAAD,CAA/B;AACA,MAAMC,MAAM,GAAGN,UAAU,CAAC;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAzB;;AAEA,MAAMF,MAAM,GAAG,CACbD,KADa,EAEbD,MAFa,KAGoB;AACjC;AACA;AAEA,QAAM;AAAEL,IAAAA,eAAF;AAAmBC,IAAAA,UAAnB;AAA+BE,IAAAA;AAA/B,MAAiDG,KAAvD;;AAEA,UAAQD,MAAM,CAACI,IAAf;AACE,SAAK,aAAL;AAAoB;AAClBE,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAO,EAAE,GAAGN,KAAL;AAAYH,UAAAA,aAAa,EAAE;AAA3B,SAAP;AACD;;AAED,SAAK,cAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYH,QAAAA,aAAa,EAAE;AAA3B,OAAP;;AAEF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYL,QAAAA,UAAU,EAAEd,OAAO,CAAC0B,IAAR,CAAaR,MAAM,CAACS,QAApB;AAAxB,OAAP;;AAEF,SAAK,QAAL;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYL,QAAAA,UAAU,EAAED,eAAe,CAACE;AAAxC,OAAP;;AAEF,SAAK,aAAL;AAAoB;AAClB,cAAM;AACJa,UAAAA,WAAW,EAAE;AAAEhB,YAAAA,gBAAgB,EAAEiB;AAApB;AADT,YAEFX,MAFJ;;AAIA,YAAI,CAACW,cAAL,EAAqB;AACnB,iBAAOV,KAAP;AACD;;AAED,cAAMW,QAAQ,GAAG,EAAE,GAAGX,KAAL;AAAYN,UAAAA,eAAe,EAAEgB;AAA7B,SAAjB;AAEA,cAAME,eAAe,GACnB,CAACF,cAAc,CAACG,WAAf,CAA2BC,EAA3B,CAA8BpB,eAAe,CAACmB,WAA9C,CAAD,IACAH,cAAc,CAACd,WAAf,CAA2BmB,EAA3B,CAA8BrB,eAAe,CAACE,WAA9C,CADA,IAEAc,cAAc,CAACM,cAAf,CAA8BC,EAA9B,CAAiCvB,eAAe,CAACsB,cAAjD,CAFA,IAGAN,cAAc,CAACQ,UAAf,CAA0BD,EAA1B,CAA6BvB,eAAe,CAACwB,UAA7C,CAJF;;AAMA,YAAIrB,aAAa,IAAIe,eAArB,EAAsC;AACpC,iBAAOV,YAAY,CAACE,MAAM,CAACO,QAAD,CAAP,CAAnB;AACD;;AAED,eAAO,EACL,GAAGA,QADE;AAELhB,UAAAA,UAAU,EAAEe,cAAc,CAACS,KAAf,CAAqBzB,eAAe,CAAC0B,WAAhB,CAA4BzB,UAA5B,CAArB;AAFP,SAAP;AAID;AAxCH;AA0CD,CAnDD;;AAqDA,MAAM0B,aAAa,GAAG,mBAAtB;AAEA,OAAO,MAAMC,uBAAiC,GAAG,MAAM;AAAA;;AACrD,QAAM,CAAC;AAAE5B,IAAAA,eAAF;AAAmBC,IAAAA,UAAnB;AAA+BE,IAAAA;AAA/B,GAAD,EAAiD0B,QAAjD,IAA6DzC,iBAAiB,CAACmB,MAAD,EAAST,IAAT,CAApF;AACA,QAAMgC,iBAAiB,GAAGzC,kBAAkB,CAACO,yCAAD,CAA5C;AACA,QAAM;AAAEmC,IAAAA;AAAF,MAAoBpC,gBAAgB,EAA1C;AAEA,QAAMqC,YAAY,GAAGjD,WAAW,CAAC,MAAM;AACrCgD,IAAAA,aAAa,CAAC,gBAAD,CAAb;AACD,GAF+B,EAE7B,CAACA,aAAD,CAF6B,CAAhC;AAIA,QAAM,CAACE,WAAD,EAAcC,WAAd,IAA6BrC,8BAA8B,CAC/DG,eAD+D,EAE/DC,UAF+D,EAG/D6B,iBAH+D,CAAjE;AAMA,QAAMK,gBAAgB,GAAGnC,eAAe,CAACoC,OAAzC;AAEA,QAAMC,kBAAkB,GAAG7C,qBAAqB,CAACmC,aAAD,CAAhD;AAEA3C,EAAAA,SAAS,CAAC,MAAM;AACd,QACEqD,kBAAkB,CAAC5B,IAAnB,KAA4B,oBAA5B,IACA4B,kBAAkB,CAAC5B,IAAnB,KAA4B,wBAF9B,EAGE;AACAoB,MAAAA,QAAQ,CAAC;AAAEpB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALD,MAKO,IAAI4B,kBAAkB,CAAC5B,IAAnB,KAA4B,QAA5B,IAAwC4B,kBAAkB,CAAC5B,IAAnB,KAA4B,WAAxE,EAAqF;AAC1FoB,MAAAA,QAAQ,CAAC;AAAEpB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFM,MAEA,IAAI4B,kBAAkB,CAAC5B,IAAnB,KAA4B,kBAAhC,EAAoD;AACzDsB,MAAAA,aAAa,CAAC,mBAAD,CAAb;AACD;AACF,GAXQ,EAWN,CAACM,kBAAkB,CAAC5B,IAApB,EAA0BoB,QAA1B,EAAoCE,aAApC,CAXM,CAAT;AAaA,sBACE,QAAC,sBAAD;AACE,IAAA,eAAe,EAAE/B,eADnB;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,aAAa,EAAEE,aAHjB;AAIE,IAAA,QAAQ,EAAE0B,QAJZ;AAAA,eAMGK,WANH,aAMGA,WANH,cAMGA,WANH,GAOKC,gBAAgB,gBACf,QAAC,iBAAD;AAAA,yCAAwC7C,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,gBAGf,QAAC,iBAAD;AAAA,gCAA+BA,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAVN,eAaE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,gBAAd;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE0C,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGC,WAAW,gBACV,QAAC,sBAAD;AAAwB,QAAA,aAAa,EAAEN,aAAvC;AAAsD,QAAA,MAAM,EAAEM,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,gBAKV,QAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA7DM;;GAAML,uB;UACwDxC,iB,EACzCC,kB,EACAM,gB,EAcCH,qB;;;KAjBhBoC,uB","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Button, Flex } from \"theme-ui\";\n\nimport { Decimal, Decimalish, LiquityStoreState } from \"@liquity/lib-base\";\nimport { LiquityStoreUpdate, useLiquityReducer, useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN } from \"../../strings\";\n\nimport { ActionDescription } from \"../ActionDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\n\nimport { StabilityDepositEditor } from \"./StabilityDepositEditor\";\nimport { StabilityDepositAction } from \"./StabilityDepositAction\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport {\n  selectForStabilityDepositChangeValidation,\n  validateStabilityDepositChange\n} from \"./validation/validateStabilityDepositChange\";\n\nconst init = ({ stabilityDeposit }: LiquityStoreState) => ({\n  originalDeposit: stabilityDeposit,\n  editedLUSD: stabilityDeposit.currentLUSD,\n  changePending: false\n});\n\ntype StabilityDepositManagerState = ReturnType<typeof init>;\ntype StabilityDepositManagerAction =\n  | LiquityStoreUpdate\n  | { type: \"startChange\" | \"finishChange\" | \"revert\" }\n  | { type: \"setDeposit\"; newValue: Decimalish };\n\nconst reduceWith = (action: StabilityDepositManagerAction) => (\n  state: StabilityDepositManagerState\n): StabilityDepositManagerState => reduce(state, action);\n\nconst finishChange = reduceWith({ type: \"finishChange\" });\nconst revert = reduceWith({ type: \"revert\" });\n\nconst reduce = (\n  state: StabilityDepositManagerState,\n  action: StabilityDepositManagerAction\n): StabilityDepositManagerState => {\n  // console.log(state);\n  // console.log(action);\n\n  const { originalDeposit, editedLUSD, changePending } = state;\n\n  switch (action.type) {\n    case \"startChange\": {\n      console.log(\"changeStarted\");\n      return { ...state, changePending: true };\n    }\n\n    case \"finishChange\":\n      return { ...state, changePending: false };\n\n    case \"setDeposit\":\n      return { ...state, editedLUSD: Decimal.from(action.newValue) };\n\n    case \"revert\":\n      return { ...state, editedLUSD: originalDeposit.currentLUSD };\n\n    case \"updateStore\": {\n      const {\n        stateChange: { stabilityDeposit: updatedDeposit }\n      } = action;\n\n      if (!updatedDeposit) {\n        return state;\n      }\n\n      const newState = { ...state, originalDeposit: updatedDeposit };\n\n      const changeCommitted =\n        !updatedDeposit.initialLUSD.eq(originalDeposit.initialLUSD) ||\n        updatedDeposit.currentLUSD.gt(originalDeposit.currentLUSD) ||\n        updatedDeposit.collateralGain.lt(originalDeposit.collateralGain) ||\n        updatedDeposit.lqtyReward.lt(originalDeposit.lqtyReward);\n\n      if (changePending && changeCommitted) {\n        return finishChange(revert(newState));\n      }\n\n      return {\n        ...newState,\n        editedLUSD: updatedDeposit.apply(originalDeposit.whatChanged(editedLUSD))\n      };\n    }\n  }\n};\n\nconst transactionId = \"stability-deposit\";\n\nexport const StabilityDepositManager: React.FC = () => {\n  const [{ originalDeposit, editedLUSD, changePending }, dispatch] = useLiquityReducer(reduce, init);\n  const validationContext = useLiquitySelector(selectForStabilityDepositChangeValidation);\n  const { dispatchEvent } = useStabilityView();\n\n  const handleCancel = useCallback(() => {\n    dispatchEvent(\"CANCEL_PRESSED\");\n  }, [dispatchEvent]);\n\n  const [validChange, description] = validateStabilityDepositChange(\n    originalDeposit,\n    editedLUSD,\n    validationContext\n  );\n\n  const makingNewDeposit = originalDeposit.isEmpty;\n\n  const myTransactionState = useMyTransactionState(transactionId);\n\n  useEffect(() => {\n    if (\n      myTransactionState.type === \"waitingForApproval\" ||\n      myTransactionState.type === \"waitingForConfirmation\"\n    ) {\n      dispatch({ type: \"startChange\" });\n    } else if (myTransactionState.type === \"failed\" || myTransactionState.type === \"cancelled\") {\n      dispatch({ type: \"finishChange\" });\n    } else if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"DEPOSIT_CONFIRMED\");\n    }\n  }, [myTransactionState.type, dispatch, dispatchEvent]);\n\n  return (\n    <StabilityDepositEditor\n      originalDeposit={originalDeposit}\n      editedLUSD={editedLUSD}\n      changePending={changePending}\n      dispatch={dispatch}\n    >\n      {description ??\n        (makingNewDeposit ? (\n          <ActionDescription>Enter the amount of {COIN} you'd like to deposit.</ActionDescription>\n        ) : (\n          <ActionDescription>Adjust the {COIN} amount to deposit or withdraw.</ActionDescription>\n        ))}\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleCancel}>\n          Cancel\n        </Button>\n\n        {validChange ? (\n          <StabilityDepositAction transactionId={transactionId} change={validChange}>\n            Confirm\n          </StabilityDepositAction>\n        ) : (\n          <Button disabled>Confirm</Button>\n        )}\n      </Flex>\n    </StabilityDepositEditor>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}