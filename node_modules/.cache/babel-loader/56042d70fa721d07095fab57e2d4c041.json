{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/StakingGainsAction.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectLQTYStake = ({\n  lqtyStake\n}) => lqtyStake;\n\nexport const StakingGainsAction = () => {\n  _s();\n\n  const {\n    liquity\n  } = useLiquity();\n  const {\n    collateralGain,\n    lusdGain\n  } = useLiquitySelector(selectLQTYStake);\n  const [sendTransaction] = useTransactionFunction(\"stake\", liquity.send.withdrawGainsFromStaking.bind(liquity.send));\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: sendTransaction,\n    disabled: collateralGain.isZero && lusdGain.isZero,\n    children: \"Claim gains\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StakingGainsAction, \"LwZPQBMiTqkkSCTEwX6K+OeLc7Y=\", false, function () {\n  return [useLiquity, useLiquitySelector, useTransactionFunction];\n});\n\n_c = StakingGainsAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakingGainsAction\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/StakingGainsAction.tsx"],"names":["Button","useLiquitySelector","useLiquity","useTransactionFunction","selectLQTYStake","lqtyStake","StakingGainsAction","liquity","collateralGain","lusdGain","sendTransaction","send","withdrawGainsFromStaking","bind","isZero"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,UAAvB;AAGA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,sBAAT,QAAuC,gBAAvC;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsCA,SAA9D;;AAEA,OAAO,MAAMC,kBAA4B,GAAG,MAAM;AAAA;;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAcL,UAAU,EAA9B;AACA,QAAM;AAAEM,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA+BR,kBAAkB,CAACG,eAAD,CAAvD;AAEA,QAAM,CAACM,eAAD,IAAoBP,sBAAsB,CAC9C,OAD8C,EAE9CI,OAAO,CAACI,IAAR,CAAaC,wBAAb,CAAsCC,IAAtC,CAA2CN,OAAO,CAACI,IAAnD,CAF8C,CAAhD;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,eAAjB;AAAkC,IAAA,QAAQ,EAAEF,cAAc,CAACM,MAAf,IAAyBL,QAAQ,CAACK,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdM;;GAAMR,kB;UACSJ,U,EACiBD,kB,EAEXE,sB;;;KAJfG,kB","sourcesContent":["import { Button } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\n\nconst selectLQTYStake = ({ lqtyStake }: LiquityStoreState) => lqtyStake;\n\nexport const StakingGainsAction: React.FC = () => {\n  const { liquity } = useLiquity();\n  const { collateralGain, lusdGain } = useLiquitySelector(selectLQTYStake);\n\n  const [sendTransaction] = useTransactionFunction(\n    \"stake\",\n    liquity.send.withdrawGainsFromStaking.bind(liquity.send)\n  );\n\n  return (\n    <Button onClick={sendTransaction} disabled={collateralGain.isZero && lusdGain.isZero}>\n      Claim gains\n    </Button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}