{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _asyncToGenerator = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _toConsumableArray = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _objectWithoutProperties = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _defineProperty = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _objectSpread = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _objectSpread2;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._connect = exports._connectByChainId = exports._connectToDeployment = exports.UnsupportedNetworkError = exports._usingStore = exports._requireFrontendAddress = exports._requireAddress = exports._getProvider = exports._requireSigner = exports._getBlockTimestamp = exports._getContracts = void 0;\n\nvar abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\n\nvar lib_base_1 = require(\"@liquity/lib-base\");\n\nvar dev_json_1 = __importDefault(require(\"../deployments/dev.json\"));\n\nvar goerli_json_1 = __importDefault(require(\"../deployments/goerli.json\"));\n\nvar kovan_json_1 = __importDefault(require(\"../deployments/kovan.json\"));\n\nvar rinkeby_json_1 = __importDefault(require(\"../deployments/rinkeby.json\"));\n\nvar ropsten_json_1 = __importDefault(require(\"../deployments/ropsten.json\"));\n\nvar mainnet_json_1 = __importDefault(require(\"../deployments/mainnet.json\"));\n\nvar contracts_1 = require(\"./contracts\");\n\nvar _Multicall_1 = require(\"./_Multicall\");\n\nvar dev = dev_json_1.default;\n\nvar deployments = _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, mainnet_json_1.default.chainId, mainnet_json_1.default), _defineProperty(_objectSpread2, ropsten_json_1.default.chainId, ropsten_json_1.default), _defineProperty(_objectSpread2, rinkeby_json_1.default.chainId, rinkeby_json_1.default), _defineProperty(_objectSpread2, goerli_json_1.default.chainId, goerli_json_1.default), _defineProperty(_objectSpread2, kovan_json_1.default.chainId, kovan_json_1.default), _objectSpread2), dev !== null ? _defineProperty({}, dev.chainId, dev) : {});\n\nvar branded = function branded(t) {\n  return t;\n};\n\nvar connectionFrom = function connectionFrom(provider, signer, _contracts, _multicall, _ref2, optionalParams) {\n  var deploymentDate = _ref2.deploymentDate,\n      totalStabilityPoolLQTYReward = _ref2.totalStabilityPoolLQTYReward,\n      liquidityMiningLQTYRewardRate = _ref2.liquidityMiningLQTYRewardRate,\n      deployment = _objectWithoutProperties(_ref2, [\"deploymentDate\", \"totalStabilityPoolLQTYReward\", \"liquidityMiningLQTYRewardRate\"]);\n\n  if (optionalParams && optionalParams.useStore !== undefined && !validStoreOptions.includes(optionalParams.useStore)) {\n    throw new Error(\"Invalid useStore value \".concat(optionalParams.useStore));\n  }\n\n  return branded(_objectSpread(_objectSpread({\n    provider: provider,\n    signer: signer,\n    _contracts: _contracts,\n    _multicall: _multicall,\n    deploymentDate: new Date(deploymentDate),\n    totalStabilityPoolLQTYReward: lib_base_1.Decimal.from(totalStabilityPoolLQTYReward),\n    liquidityMiningLQTYRewardRate: lib_base_1.Decimal.from(liquidityMiningLQTYRewardRate)\n  }, deployment), optionalParams));\n};\n/** @internal */\n\n\nvar _getContracts = function _getContracts(connection) {\n  return connection._contracts;\n};\n\nexports._getContracts = _getContracts;\n\nvar getMulticall = function getMulticall(connection) {\n  return connection._multicall;\n};\n\nvar numberify = function numberify(bigNumber) {\n  return bigNumber.toNumber();\n};\n\nvar getTimestampFromBlock = function getTimestampFromBlock(_ref3) {\n  var timestamp = _ref3.timestamp;\n  return timestamp;\n};\n/** @internal */\n\n\nvar _getBlockTimestamp = function _getBlockTimestamp(connection) {\n  var blockTag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"latest\";\n\n  var _a, _b;\n\n  return (_b = (_a = // Get the timestamp via a contract call whenever possible, to make it batchable with other calls\n  getMulticall(connection)) === null || _a === void 0 ? void 0 : _a.getCurrentBlockTimestamp({\n    blockTag: blockTag\n  }).then(numberify)) !== null && _b !== void 0 ? _b : exports._getProvider(connection).getBlock(blockTag).then(getTimestampFromBlock);\n};\n\nexports._getBlockTimestamp = _getBlockTimestamp;\n\nvar panic = function panic(e) {\n  throw e;\n};\n/** @internal */\n\n\nvar _requireSigner = function _requireSigner(connection) {\n  var _a;\n\n  return (_a = connection.signer) !== null && _a !== void 0 ? _a : panic(new Error(\"Must be connected through a Signer\"));\n};\n\nexports._requireSigner = _requireSigner;\n/** @internal */\n\nvar _getProvider = function _getProvider(connection) {\n  return connection.provider;\n};\n\nexports._getProvider = _getProvider; // TODO parameterize error message?\n\n/** @internal */\n\nvar _requireAddress = function _requireAddress(connection, overrides) {\n  var _a, _b;\n\n  return (_b = (_a = overrides === null || overrides === void 0 ? void 0 : overrides.from) !== null && _a !== void 0 ? _a : connection.userAddress) !== null && _b !== void 0 ? _b : panic(new Error(\"A user address is required\"));\n};\n\nexports._requireAddress = _requireAddress;\n/** @internal */\n\nvar _requireFrontendAddress = function _requireFrontendAddress(connection) {\n  var _a;\n\n  return (_a = connection.frontendTag) !== null && _a !== void 0 ? _a : panic(new Error(\"A frontend address is required\"));\n};\n\nexports._requireFrontendAddress = _requireFrontendAddress;\n/** @internal */\n\nvar _usingStore = function _usingStore(connection) {\n  return connection.useStore !== undefined;\n};\n\nexports._usingStore = _usingStore;\n/**\n * Thrown when trying to connect to a network where Liquity is not deployed.\n *\n * @remarks\n * Thrown by {@link ReadableEthersLiquity.(connect:2)} and {@link EthersLiquity.(connect:2)}.\n *\n * @public\n */\n\nvar UnsupportedNetworkError = /*#__PURE__*/function (_Error) {\n  _inherits(UnsupportedNetworkError, _Error);\n\n  var _super = _createSuper(UnsupportedNetworkError);\n\n  /** @internal */\n  function UnsupportedNetworkError(chainId) {\n    var _this;\n\n    _classCallCheck(this, UnsupportedNetworkError);\n\n    _this = _super.call(this, \"Unsupported network (chainId = \".concat(chainId, \")\"));\n    _this.name = \"UnsupportedNetworkError\";\n    _this.chainId = chainId;\n    return _this;\n  }\n\n  return UnsupportedNetworkError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.UnsupportedNetworkError = UnsupportedNetworkError;\n\nvar getProviderAndSigner = function getProviderAndSigner(signerOrProvider) {\n  var _a;\n\n  var provider = abstract_signer_1.Signer.isSigner(signerOrProvider) ? (_a = signerOrProvider.provider) !== null && _a !== void 0 ? _a : panic(new Error(\"Signer must have a Provider\")) : signerOrProvider;\n  var signer = abstract_signer_1.Signer.isSigner(signerOrProvider) ? signerOrProvider : undefined;\n  return [provider, signer];\n};\n/** @internal */\n\n\nvar _connectToDeployment = function _connectToDeployment(deployment, signerOrProvider, optionalParams) {\n  return connectionFrom.apply(void 0, _toConsumableArray(getProviderAndSigner(signerOrProvider)).concat([contracts_1._connectToContracts(signerOrProvider, deployment), undefined, deployment, optionalParams]));\n};\n\nexports._connectToDeployment = _connectToDeployment;\nvar validStoreOptions = [\"blockPolled\"];\n/** @internal */\n\nfunction _connectByChainId(provider, signer, chainId, optionalParams) {\n  var _a;\n\n  var deployment = (_a = deployments[chainId]) !== null && _a !== void 0 ? _a : panic(new UnsupportedNetworkError(chainId));\n  return connectionFrom(provider, signer, contracts_1._connectToContracts(signer !== null && signer !== void 0 ? signer : provider, deployment), _Multicall_1._connectToMulticall(signer !== null && signer !== void 0 ? signer : provider, chainId), deployment, optionalParams);\n}\n\nexports._connectByChainId = _connectByChainId;\n/** @internal */\n\nvar _connect = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(signerOrProvider, optionalParams) {\n    var _getProviderAndSigner, _getProviderAndSigner2, provider, signer;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _getProviderAndSigner = getProviderAndSigner(signerOrProvider), _getProviderAndSigner2 = _slicedToArray(_getProviderAndSigner, 2), provider = _getProviderAndSigner2[0], signer = _getProviderAndSigner2[1];\n\n            if (!signer) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!((optionalParams === null || optionalParams === void 0 ? void 0 : optionalParams.userAddress) !== undefined)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error(\"Can't override userAddress when connecting through Signer\");\n\n          case 4:\n            _context.t0 = _objectSpread;\n            _context.t1 = _objectSpread({}, optionalParams);\n            _context.t2 = {};\n            _context.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            _context.t3 = _context.sent;\n            _context.t4 = {\n              userAddress: _context.t3\n            };\n            optionalParams = (0, _context.t0)(_context.t1, _context.t2, _context.t4);\n\n          case 12:\n            _context.t5 = _connectByChainId;\n            _context.t6 = provider;\n            _context.t7 = signer;\n            _context.next = 17;\n            return provider.getNetwork();\n\n          case 17:\n            _context.t8 = _context.sent.chainId;\n            _context.t9 = optionalParams;\n            return _context.abrupt(\"return\", (0, _context.t5)(_context.t6, _context.t7, _context.t8, _context.t9));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function _connect(_x, _x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports._connect = _connect;","map":{"version":3,"sources":["../../src/EthersLiquityConnection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._connect = exports._connectByChainId = exports._connectToDeployment = exports.UnsupportedNetworkError = exports._usingStore = exports._requireFrontendAddress = exports._requireAddress = exports._getProvider = exports._requireSigner = exports._getBlockTimestamp = exports._getContracts = void 0;\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\nconst lib_base_1 = require(\"@liquity/lib-base\");\nconst dev_json_1 = __importDefault(require(\"../deployments/dev.json\"));\nconst goerli_json_1 = __importDefault(require(\"../deployments/goerli.json\"));\nconst kovan_json_1 = __importDefault(require(\"../deployments/kovan.json\"));\nconst rinkeby_json_1 = __importDefault(require(\"../deployments/rinkeby.json\"));\nconst ropsten_json_1 = __importDefault(require(\"../deployments/ropsten.json\"));\nconst mainnet_json_1 = __importDefault(require(\"../deployments/mainnet.json\"));\nconst contracts_1 = require(\"./contracts\");\nconst _Multicall_1 = require(\"./_Multicall\");\nconst dev = dev_json_1.default;\nconst deployments = {\n    [mainnet_json_1.default.chainId]: mainnet_json_1.default,\n    [ropsten_json_1.default.chainId]: ropsten_json_1.default,\n    [rinkeby_json_1.default.chainId]: rinkeby_json_1.default,\n    [goerli_json_1.default.chainId]: goerli_json_1.default,\n    [kovan_json_1.default.chainId]: kovan_json_1.default,\n    ...(dev !== null ? { [dev.chainId]: dev } : {})\n};\nconst branded = (t) => t;\nconst connectionFrom = (provider, signer, _contracts, _multicall, { deploymentDate, totalStabilityPoolLQTYReward, liquidityMiningLQTYRewardRate, ...deployment }, optionalParams) => {\n    if (optionalParams &&\n        optionalParams.useStore !== undefined &&\n        !validStoreOptions.includes(optionalParams.useStore)) {\n        throw new Error(`Invalid useStore value ${optionalParams.useStore}`);\n    }\n    return branded({\n        provider,\n        signer,\n        _contracts,\n        _multicall,\n        deploymentDate: new Date(deploymentDate),\n        totalStabilityPoolLQTYReward: lib_base_1.Decimal.from(totalStabilityPoolLQTYReward),\n        liquidityMiningLQTYRewardRate: lib_base_1.Decimal.from(liquidityMiningLQTYRewardRate),\n        ...deployment,\n        ...optionalParams\n    });\n};\n/** @internal */\nconst _getContracts = (connection) => connection._contracts;\nexports._getContracts = _getContracts;\nconst getMulticall = (connection) => connection._multicall;\nconst numberify = (bigNumber) => bigNumber.toNumber();\nconst getTimestampFromBlock = ({ timestamp }) => timestamp;\n/** @internal */\nconst _getBlockTimestamp = (connection, blockTag = \"latest\") => { var _a, _b; return (_b = (_a = \n// Get the timestamp via a contract call whenever possible, to make it batchable with other calls\ngetMulticall(connection)) === null || _a === void 0 ? void 0 : _a.getCurrentBlockTimestamp({ blockTag }).then(numberify)) !== null && _b !== void 0 ? _b : exports._getProvider(connection).getBlock(blockTag).then(getTimestampFromBlock); };\nexports._getBlockTimestamp = _getBlockTimestamp;\nconst panic = (e) => {\n    throw e;\n};\n/** @internal */\nconst _requireSigner = (connection) => { var _a; return (_a = connection.signer) !== null && _a !== void 0 ? _a : panic(new Error(\"Must be connected through a Signer\")); };\nexports._requireSigner = _requireSigner;\n/** @internal */\nconst _getProvider = (connection) => connection.provider;\nexports._getProvider = _getProvider;\n// TODO parameterize error message?\n/** @internal */\nconst _requireAddress = (connection, overrides) => { var _a, _b; return (_b = (_a = overrides === null || overrides === void 0 ? void 0 : overrides.from) !== null && _a !== void 0 ? _a : connection.userAddress) !== null && _b !== void 0 ? _b : panic(new Error(\"A user address is required\")); };\nexports._requireAddress = _requireAddress;\n/** @internal */\nconst _requireFrontendAddress = (connection) => { var _a; return (_a = connection.frontendTag) !== null && _a !== void 0 ? _a : panic(new Error(\"A frontend address is required\")); };\nexports._requireFrontendAddress = _requireFrontendAddress;\n/** @internal */\nconst _usingStore = (connection) => connection.useStore !== undefined;\nexports._usingStore = _usingStore;\n/**\n * Thrown when trying to connect to a network where Liquity is not deployed.\n *\n * @remarks\n * Thrown by {@link ReadableEthersLiquity.(connect:2)} and {@link EthersLiquity.(connect:2)}.\n *\n * @public\n */\nclass UnsupportedNetworkError extends Error {\n    /** @internal */\n    constructor(chainId) {\n        super(`Unsupported network (chainId = ${chainId})`);\n        this.name = \"UnsupportedNetworkError\";\n        this.chainId = chainId;\n    }\n}\nexports.UnsupportedNetworkError = UnsupportedNetworkError;\nconst getProviderAndSigner = (signerOrProvider) => {\n    var _a;\n    const provider = abstract_signer_1.Signer.isSigner(signerOrProvider)\n        ? (_a = signerOrProvider.provider) !== null && _a !== void 0 ? _a : panic(new Error(\"Signer must have a Provider\")) : signerOrProvider;\n    const signer = abstract_signer_1.Signer.isSigner(signerOrProvider) ? signerOrProvider : undefined;\n    return [provider, signer];\n};\n/** @internal */\nconst _connectToDeployment = (deployment, signerOrProvider, optionalParams) => connectionFrom(...getProviderAndSigner(signerOrProvider), contracts_1._connectToContracts(signerOrProvider, deployment), undefined, deployment, optionalParams);\nexports._connectToDeployment = _connectToDeployment;\nconst validStoreOptions = [\"blockPolled\"];\n/** @internal */\nfunction _connectByChainId(provider, signer, chainId, optionalParams) {\n    var _a;\n    const deployment = (_a = deployments[chainId]) !== null && _a !== void 0 ? _a : panic(new UnsupportedNetworkError(chainId));\n    return connectionFrom(provider, signer, contracts_1._connectToContracts(signer !== null && signer !== void 0 ? signer : provider, deployment), _Multicall_1._connectToMulticall(signer !== null && signer !== void 0 ? signer : provider, chainId), deployment, optionalParams);\n}\nexports._connectByChainId = _connectByChainId;\n/** @internal */\nconst _connect = async (signerOrProvider, optionalParams) => {\n    const [provider, signer] = getProviderAndSigner(signerOrProvider);\n    if (signer) {\n        if ((optionalParams === null || optionalParams === void 0 ? void 0 : optionalParams.userAddress) !== undefined) {\n            throw new Error(\"Can't override userAddress when connecting through Signer\");\n        }\n        optionalParams = {\n            ...optionalParams,\n            userAddress: await signer.getAddress()\n        };\n    }\n    return _connectByChainId(provider, signer, (await provider.getNetwork()).chainId, optionalParams);\n};\nexports._connect = _connect;\n//# sourceMappingURL=EthersLiquityConnection.js.map"]},"metadata":{},"sourceType":"script"}