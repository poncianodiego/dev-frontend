{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Active/Active.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { LP, GT } from \"../../../../strings\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { Icon } from \"../../../Icon\";\nimport { LoadingOverlay } from \"../../../LoadingOverlay\";\nimport { useMyTransactionState } from \"../../../Transaction\";\nimport { DisabledEditableRow, StaticRow } from \"../../../Trove/Editor\";\nimport { useFarmView } from \"../../context/FarmViewContext\";\nimport { RemainingLQTY } from \"../RemainingLQTY\";\nimport { ClaimReward } from \"./ClaimReward\";\nimport { UnstakeAndClaim } from \"../UnstakeAndClaim\";\nimport { Yield } from \"../Yield\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selector = ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  totalStakedUniTokens\n}) => ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  totalStakedUniTokens\n});\n\nconst transactionId = /farm-/i;\nexport const Active = () => {\n  _s();\n\n  const {\n    dispatchEvent\n  } = useFarmView();\n  const {\n    liquidityMiningStake,\n    liquidityMiningLQTYReward,\n    totalStakedUniTokens\n  } = useLiquitySelector(selector);\n  const handleAdjustPressed = useCallback(() => {\n    dispatchEvent(\"ADJUST_PRESSED\");\n  }, [dispatchEvent]);\n  const transactionState = useMyTransactionState(transactionId);\n  const isTransactionPending = transactionState.type === \"waitingForApproval\" || transactionState.type === \"waitingForConfirmation\";\n  const poolShare = liquidityMiningStake.mulDiv(100, totalStakedUniTokens);\n  const hasStakeAndRewards = !liquidityMiningStake.isZero && !liquidityMiningLQTYReward.isZero;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: [\"Uniswap Liquidity Farm\", !isTransactionPending && /*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          justifyContent: \"flex-end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(RemainingLQTY, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(DisabledEditableRow, {\n          label: \"Stake\",\n          inputId: \"farm-stake\",\n          amount: liquidityMiningStake.prettify(4),\n          unit: LP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), poolShare.infinite ? /*#__PURE__*/_jsxDEV(StaticRow, {\n          label: \"Pool share\",\n          inputId: \"farm-share\",\n          amount: \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(StaticRow, {\n          label: \"Pool share\",\n          inputId: \"farm-share\",\n          amount: poolShare.prettify(4),\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(StaticRow, {\n            label: \"Reward\",\n            inputId: \"farm-reward\",\n            amount: liquidityMiningLQTYReward.prettify(4),\n            color: liquidityMiningLQTYReward.nonZero && \"success\",\n            unit: GT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            sx: {\n              justifyContent: \"flex-end\",\n              flex: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Yield, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        variant: \"layout.actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: !liquidityMiningLQTYReward.isZero ? \"outline\" : \"primary\",\n          onClick: handleAdjustPressed,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"pen\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), \"\\xA0Adjust\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), !liquidityMiningLQTYReward.isZero && /*#__PURE__*/_jsxDEV(ClaimReward, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: hasStakeAndRewards && /*#__PURE__*/_jsxDEV(UnstakeAndClaim, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isTransactionPending && /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Active, \"b6RRYkhynMjOITv1+jTXsvildP8=\", false, function () {\n  return [useFarmView, useLiquitySelector, useMyTransactionState];\n});\n\n_c = Active;\n\nvar _c;\n\n$RefreshReg$(_c, \"Active\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Active/Active.tsx"],"names":["React","useCallback","Card","Heading","Box","Flex","Button","LP","GT","useLiquitySelector","Icon","LoadingOverlay","useMyTransactionState","DisabledEditableRow","StaticRow","useFarmView","RemainingLQTY","ClaimReward","UnstakeAndClaim","Yield","selector","liquidityMiningStake","liquidityMiningLQTYReward","totalStakedUniTokens","transactionId","Active","dispatchEvent","handleAdjustPressed","transactionState","isTransactionPending","type","poolShare","mulDiv","hasStakeAndRewards","isZero","justifyContent","p","prettify","infinite","alignItems","nonZero","flex"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { LP, GT } from \"../../../../strings\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { Icon } from \"../../../Icon\";\nimport { LoadingOverlay } from \"../../../LoadingOverlay\";\nimport { useMyTransactionState } from \"../../../Transaction\";\nimport { DisabledEditableRow, StaticRow } from \"../../../Trove/Editor\";\nimport { useFarmView } from \"../../context/FarmViewContext\";\nimport { RemainingLQTY } from \"../RemainingLQTY\";\nimport { ClaimReward } from \"./ClaimReward\";\nimport { UnstakeAndClaim } from \"../UnstakeAndClaim\";\nimport { Yield } from \"../Yield\";\n\nconst selector = ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  totalStakedUniTokens\n}: LiquityStoreState) => ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  totalStakedUniTokens\n});\nconst transactionId = /farm-/i;\n\nexport const Active: React.FC = () => {\n  const { dispatchEvent } = useFarmView();\n  const {\n    liquidityMiningStake,\n    liquidityMiningLQTYReward,\n    totalStakedUniTokens\n  } = useLiquitySelector(selector);\n\n  const handleAdjustPressed = useCallback(() => {\n    dispatchEvent(\"ADJUST_PRESSED\");\n  }, [dispatchEvent]);\n\n  const transactionState = useMyTransactionState(transactionId);\n  const isTransactionPending =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n\n  const poolShare = liquidityMiningStake.mulDiv(100, totalStakedUniTokens);\n  const hasStakeAndRewards = !liquidityMiningStake.isZero && !liquidityMiningLQTYReward.isZero;\n\n  return (\n    <Card>\n      <Heading>\n        Uniswap Liquidity Farm\n        {!isTransactionPending && (\n          <Flex sx={{ justifyContent: \"flex-end\" }}>\n            <RemainingLQTY />\n          </Flex>\n        )}\n      </Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <Box>\n          <DisabledEditableRow\n            label=\"Stake\"\n            inputId=\"farm-stake\"\n            amount={liquidityMiningStake.prettify(4)}\n            unit={LP}\n          />\n          {poolShare.infinite ? (\n            <StaticRow label=\"Pool share\" inputId=\"farm-share\" amount=\"N/A\" />\n          ) : (\n            <StaticRow\n              label=\"Pool share\"\n              inputId=\"farm-share\"\n              amount={poolShare.prettify(4)}\n              unit={\"%\"}\n            />\n          )}\n          <Flex sx={{ alignItems: \"center\" }}>\n            <StaticRow\n              label=\"Reward\"\n              inputId=\"farm-reward\"\n              amount={liquidityMiningLQTYReward.prettify(4)}\n              color={liquidityMiningLQTYReward.nonZero && \"success\"}\n              unit={GT}\n            />\n            <Flex sx={{ justifyContent: \"flex-end\", flex: 1 }}>\n              <Yield />\n            </Flex>\n          </Flex>\n        </Box>\n\n        <Flex variant=\"layout.actions\">\n          <Button\n            variant={!liquidityMiningLQTYReward.isZero ? \"outline\" : \"primary\"}\n            onClick={handleAdjustPressed}\n          >\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n          {!liquidityMiningLQTYReward.isZero && <ClaimReward />}\n        </Flex>\n        <Flex>{hasStakeAndRewards && <UnstakeAndClaim />}</Flex>\n      </Box>\n      {isTransactionPending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}