{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/ReadOnlyStake.tsx\",\n    _s = $RefreshSig$();\n\nimport { Heading, Box, Card, Flex, Button } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { COIN, GT } from \"../../strings\";\nimport { DisabledEditableRow, StaticRow } from \"../Trove/Editor\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { Icon } from \"../Icon\";\nimport { useStakingView } from \"./context/StakingViewContext\";\nimport { StakingGainsAction } from \"./StakingGainsAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst select = ({\n  lqtyStake,\n  totalStakedLQTY\n}) => ({\n  lqtyStake,\n  totalStakedLQTY\n});\n\nexport const ReadOnlyStake = () => {\n  _s();\n\n  const {\n    changePending,\n    dispatch\n  } = useStakingView();\n  const {\n    lqtyStake,\n    totalStakedLQTY\n  } = useLiquitySelector(select);\n  const poolShare = lqtyStake.stakedLQTY.mulDiv(100, totalStakedLQTY);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Staking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: [/*#__PURE__*/_jsxDEV(DisabledEditableRow, {\n        label: \"Stake\",\n        inputId: \"stake-lqty\",\n        amount: lqtyStake.stakedLQTY.prettify(),\n        unit: GT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StaticRow, {\n        label: \"Pool share\",\n        inputId: \"stake-share\",\n        amount: poolShare.prettify(4),\n        unit: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StaticRow, {\n        label: \"Redemption gain\",\n        inputId: \"stake-gain-eth\",\n        amount: lqtyStake.collateralGain.prettify(4),\n        color: lqtyStake.collateralGain.nonZero && \"success\",\n        unit: \"ETH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StaticRow, {\n        label: \"Issuance gain\",\n        inputId: \"stake-gain-lusd\",\n        amount: lqtyStake.lusdGain.prettify(),\n        color: lqtyStake.lusdGain.nonZero && \"success\",\n        unit: COIN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        variant: \"layout.actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: () => dispatch({\n            type: \"startAdjusting\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"pen\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), \"\\xA0Adjust\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StakingGainsAction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), changePending && /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadOnlyStake, \"Glg5Ygt57rk5yl3q/MHTIOBDPac=\", false, function () {\n  return [useStakingView, useLiquitySelector];\n});\n\n_c = ReadOnlyStake;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadOnlyStake\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/ReadOnlyStake.tsx"],"names":["Heading","Box","Card","Flex","Button","useLiquitySelector","COIN","GT","DisabledEditableRow","StaticRow","LoadingOverlay","Icon","useStakingView","StakingGainsAction","select","lqtyStake","totalStakedLQTY","ReadOnlyStake","changePending","dispatch","poolShare","stakedLQTY","mulDiv","p","prettify","collateralGain","nonZero","lusdGain","type"],"mappings":"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","sourcesContent":["import { Heading, Box, Card, Flex, Button } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN, GT } from \"../../strings\";\n\nimport { DisabledEditableRow, StaticRow } from \"../Trove/Editor\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { Icon } from \"../Icon\";\n\nimport { useStakingView } from \"./context/StakingViewContext\";\nimport { StakingGainsAction } from \"./StakingGainsAction\";\n\nconst select = ({ lqtyStake, totalStakedLQTY }: LiquityStoreState) => ({\n  lqtyStake,\n  totalStakedLQTY\n});\n\nexport const ReadOnlyStake: React.FC = () => {\n  const { changePending, dispatch } = useStakingView();\n  const { lqtyStake, totalStakedLQTY } = useLiquitySelector(select);\n\n  const poolShare = lqtyStake.stakedLQTY.mulDiv(100, totalStakedLQTY);\n\n  return (\n    <Card>\n      <Heading>Staking</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <DisabledEditableRow\n          label=\"Stake\"\n          inputId=\"stake-lqty\"\n          amount={lqtyStake.stakedLQTY.prettify()}\n          unit={GT}\n        />\n\n        <StaticRow\n          label=\"Pool share\"\n          inputId=\"stake-share\"\n          amount={poolShare.prettify(4)}\n          unit=\"%\"\n        />\n\n        <StaticRow\n          label=\"Redemption gain\"\n          inputId=\"stake-gain-eth\"\n          amount={lqtyStake.collateralGain.prettify(4)}\n          color={lqtyStake.collateralGain.nonZero && \"success\"}\n          unit=\"ETH\"\n        />\n\n        <StaticRow\n          label=\"Issuance gain\"\n          inputId=\"stake-gain-lusd\"\n          amount={lqtyStake.lusdGain.prettify()}\n          color={lqtyStake.lusdGain.nonZero && \"success\"}\n          unit={COIN}\n        />\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"outline\" onClick={() => dispatch({ type: \"startAdjusting\" })}>\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n\n          <StakingGainsAction />\n        </Flex>\n      </Box>\n\n      {changePending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}