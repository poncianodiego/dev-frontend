{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/StabilityDepositEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Heading, Box, Card, Button } from \"theme-ui\";\nimport { Difference } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { COIN, GT } from \"../../strings\";\nimport { Icon } from \"../Icon\";\nimport { EditableRow, StaticRow } from \"../Trove/Editor\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst select = ({\n  lusdBalance,\n  lusdInStabilityPool\n}) => ({\n  lusdBalance,\n  lusdInStabilityPool\n});\n\nexport const StabilityDepositEditor = ({\n  originalDeposit,\n  editedLUSD,\n  changePending,\n  dispatch,\n  children\n}) => {\n  _s();\n\n  const {\n    lusdBalance,\n    lusdInStabilityPool\n  } = useLiquitySelector(select);\n  const editingState = useState();\n  const edited = !editedLUSD.eq(originalDeposit.currentLUSD);\n  const maxAmount = originalDeposit.currentLUSD.add(lusdBalance);\n  const maxedOut = editedLUSD.eq(maxAmount);\n  const lusdInStabilityPoolAfterChange = lusdInStabilityPool.sub(originalDeposit.currentLUSD).add(editedLUSD);\n  const originalPoolShare = originalDeposit.currentLUSD.mulDiv(100, lusdInStabilityPool);\n  const newPoolShare = editedLUSD.mulDiv(100, lusdInStabilityPoolAfterChange);\n  const poolShareChange = originalDeposit.currentLUSD.nonZero && Difference.between(newPoolShare, originalPoolShare).nonZero;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: [\"Stability Pool\", edited && !changePending && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"titleIcon\",\n        sx: {\n          \":enabled:hover\": {\n            color: \"danger\"\n          }\n        },\n        onClick: () => dispatch({\n          type: \"revert\"\n        }),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"history\",\n          size: \"lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: [2, 3]\n      },\n      children: [/*#__PURE__*/_jsxDEV(EditableRow, {\n        label: \"Deposit\",\n        inputId: \"deposit-lqty\",\n        amount: editedLUSD.prettify(),\n        maxAmount: maxAmount.toString(),\n        maxedOut: maxedOut,\n        unit: COIN,\n        editingState,\n        editedAmount: editedLUSD.toString(2),\n        setEditedAmount: newValue => dispatch({\n          type: \"setDeposit\",\n          newValue\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), newPoolShare.infinite ? /*#__PURE__*/_jsxDEV(StaticRow, {\n        label: \"Pool share\",\n        inputId: \"deposit-share\",\n        amount: \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(StaticRow, {\n        label: \"Pool share\",\n        inputId: \"deposit-share\",\n        amount: newPoolShare.prettify(4),\n        pendingAmount: poolShareChange === null || poolShareChange === void 0 ? void 0 : poolShareChange.prettify(4).concat(\"%\"),\n        pendingColor: (poolShareChange === null || poolShareChange === void 0 ? void 0 : poolShareChange.positive) ? \"success\" : \"danger\",\n        unit: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), !originalDeposit.isEmpty && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StaticRow, {\n          label: \"Liquidation gain\",\n          inputId: \"deposit-gain\",\n          amount: originalDeposit.collateralGain.prettify(4),\n          color: originalDeposit.collateralGain.nonZero && \"success\",\n          unit: \"ETH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StaticRow, {\n          label: \"Reward\",\n          inputId: \"deposit-reward\",\n          amount: originalDeposit.lqtyReward.prettify(),\n          color: originalDeposit.lqtyReward.nonZero && \"success\",\n          unit: GT,\n          infoIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {\n            tooltip: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"tooltip\",\n              sx: {\n                width: \"240px\"\n              },\n              children: \"Although the LQTY rewards accrue every minute, the value on the UI only updates when a user transacts with the Stability Pool. Therefore you may receive more rewards than is displayed when you claim or adjust your deposit.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), changePending && /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StabilityDepositEditor, \"Qv410CEw4Uu8EcUlL24nYCmo6xI=\", false, function () {\n  return [useLiquitySelector];\n});\n\n_c = StabilityDepositEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"StabilityDepositEditor\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/StabilityDepositEditor.tsx"],"names":["React","useState","Heading","Box","Card","Button","Difference","useLiquitySelector","COIN","GT","Icon","EditableRow","StaticRow","LoadingOverlay","InfoIcon","select","lusdBalance","lusdInStabilityPool","StabilityDepositEditor","originalDeposit","editedLUSD","changePending","dispatch","children","editingState","edited","eq","currentLUSD","maxAmount","add","maxedOut","lusdInStabilityPoolAfterChange","sub","originalPoolShare","mulDiv","newPoolShare","poolShareChange","nonZero","between","color","type","p","prettify","toString","newValue","infinite","concat","positive","isEmpty","collateralGain","lqtyReward","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Heading, Box, Card, Button } from \"theme-ui\";\n\nimport {\n  Decimal,\n  Decimalish,\n  StabilityDeposit,\n  LiquityStoreState,\n  Difference\n} from \"@liquity/lib-base\";\n\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN, GT } from \"../../strings\";\n\nimport { Icon } from \"../Icon\";\nimport { EditableRow, StaticRow } from \"../Trove/Editor\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { InfoIcon } from \"../InfoIcon\";\n\nconst select = ({ lusdBalance, lusdInStabilityPool }: LiquityStoreState) => ({\n  lusdBalance,\n  lusdInStabilityPool\n});\n\ntype StabilityDepositEditorProps = {\n  originalDeposit: StabilityDeposit;\n  editedLUSD: Decimal;\n  changePending: boolean;\n  dispatch: (action: { type: \"setDeposit\"; newValue: Decimalish } | { type: \"revert\" }) => void;\n};\n\nexport const StabilityDepositEditor: React.FC<StabilityDepositEditorProps> = ({\n  originalDeposit,\n  editedLUSD,\n  changePending,\n  dispatch,\n  children\n}) => {\n  const { lusdBalance, lusdInStabilityPool } = useLiquitySelector(select);\n  const editingState = useState<string>();\n\n  const edited = !editedLUSD.eq(originalDeposit.currentLUSD);\n\n  const maxAmount = originalDeposit.currentLUSD.add(lusdBalance);\n  const maxedOut = editedLUSD.eq(maxAmount);\n\n  const lusdInStabilityPoolAfterChange = lusdInStabilityPool\n    .sub(originalDeposit.currentLUSD)\n    .add(editedLUSD);\n\n  const originalPoolShare = originalDeposit.currentLUSD.mulDiv(100, lusdInStabilityPool);\n  const newPoolShare = editedLUSD.mulDiv(100, lusdInStabilityPoolAfterChange);\n  const poolShareChange =\n    originalDeposit.currentLUSD.nonZero &&\n    Difference.between(newPoolShare, originalPoolShare).nonZero;\n\n  return (\n    <Card>\n      <Heading>\n        Stability Pool\n        {edited && !changePending && (\n          <Button\n            variant=\"titleIcon\"\n            sx={{ \":enabled:hover\": { color: \"danger\" } }}\n            onClick={() => dispatch({ type: \"revert\" })}\n          >\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Deposit\"\n          inputId=\"deposit-lqty\"\n          amount={editedLUSD.prettify()}\n          maxAmount={maxAmount.toString()}\n          maxedOut={maxedOut}\n          unit={COIN}\n          {...{ editingState }}\n          editedAmount={editedLUSD.toString(2)}\n          setEditedAmount={newValue => dispatch({ type: \"setDeposit\", newValue })}\n        />\n\n        {newPoolShare.infinite ? (\n          <StaticRow label=\"Pool share\" inputId=\"deposit-share\" amount=\"N/A\" />\n        ) : (\n          <StaticRow\n            label=\"Pool share\"\n            inputId=\"deposit-share\"\n            amount={newPoolShare.prettify(4)}\n            pendingAmount={poolShareChange?.prettify(4).concat(\"%\")}\n            pendingColor={poolShareChange?.positive ? \"success\" : \"danger\"}\n            unit=\"%\"\n          />\n        )}\n\n        {!originalDeposit.isEmpty && (\n          <>\n            <StaticRow\n              label=\"Liquidation gain\"\n              inputId=\"deposit-gain\"\n              amount={originalDeposit.collateralGain.prettify(4)}\n              color={originalDeposit.collateralGain.nonZero && \"success\"}\n              unit=\"ETH\"\n            />\n\n            <StaticRow\n              label=\"Reward\"\n              inputId=\"deposit-reward\"\n              amount={originalDeposit.lqtyReward.prettify()}\n              color={originalDeposit.lqtyReward.nonZero && \"success\"}\n              unit={GT}\n              infoIcon={\n                <InfoIcon\n                  tooltip={\n                    <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                      Although the LQTY rewards accrue every minute, the value on the UI only updates\n                      when a user transacts with the Stability Pool. Therefore you may receive more\n                      rewards than is displayed when you claim or adjust your deposit.\n                    </Card>\n                  }\n                />\n              }\n            />\n          </>\n        )}\n        {children}\n      </Box>\n\n      {changePending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}