{"ast":null,"code":"import React,{useEffect}from\"react\";import{Button,Flex,Spinner}from\"theme-ui\";import{useLiquitySelector}from\"@liquity/lib-react\";import{useLiquity}from\"../hooks/LiquityContext\";import{Transaction,useMyTransactionState}from\"./Transaction\";import{useTroveView}from\"./Trove/context/TroveViewContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var select=function select(_ref){var collateralSurplusBalance=_ref.collateralSurplusBalance;return{collateralSurplusBalance:collateralSurplusBalance};};export var CollateralSurplusAction=function CollateralSurplusAction(){var _useLiquitySelector=useLiquitySelector(select),collateralSurplusBalance=_useLiquitySelector.collateralSurplusBalance;var _useLiquity=useLiquity(),liquity=_useLiquity.liquity.send;var myTransactionId=\"claim-coll-surplus\";var myTransactionState=useMyTransactionState(myTransactionId);var _useTroveView=useTroveView(),dispatchEvent=_useTroveView.dispatchEvent;useEffect(function(){if(myTransactionState.type===\"confirmedOneShot\"){dispatchEvent(\"TROVE_SURPLUS_COLLATERAL_CLAIMED\");}},[myTransactionState.type,dispatchEvent]);return myTransactionState.type===\"waitingForApproval\"?/*#__PURE__*/_jsx(Flex,{variant:\"layout.actions\",children:/*#__PURE__*/_jsxs(Button,{disabled:true,sx:{mx:2},children:[/*#__PURE__*/_jsx(Spinner,{sx:{mr:2,color:\"white\"},size:\"20px\"}),\"Waiting for your approval\"]})}):myTransactionState.type!==\"waitingForConfirmation\"&&myTransactionState.type!==\"confirmed\"?/*#__PURE__*/_jsx(Flex,{variant:\"layout.actions\",children:/*#__PURE__*/_jsx(Transaction,{id:myTransactionId,send:liquity.claimCollateralSurplus.bind(liquity,undefined),children:/*#__PURE__*/_jsxs(Button,{sx:{mx:2},children:[\"Claim \",collateralSurplusBalance.prettify(),\" ETH\"]})})}):null;};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/CollateralSurplusAction.tsx"],"names":["React","useEffect","Button","Flex","Spinner","useLiquitySelector","useLiquity","Transaction","useMyTransactionState","useTroveView","select","collateralSurplusBalance","CollateralSurplusAction","liquity","send","myTransactionId","myTransactionState","dispatchEvent","type","mx","mr","color","claimCollateralSurplus","bind","undefined","prettify"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,OAAvB,KAAsC,UAAtC,CAGA,OAASC,kBAAT,KAAmC,oBAAnC,CAEA,OAASC,UAAT,KAA2B,yBAA3B,CAEA,OAASC,WAAT,CAAsBC,qBAAtB,KAAmD,eAAnD,CACA,OAASC,YAAT,KAA6B,kCAA7B,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,UAAGC,CAAAA,wBAAH,MAAGA,wBAAH,OAAsD,CACnEA,wBAAwB,CAAxBA,wBADmE,CAAtD,EAAf,CAIA,MAAO,IAAMC,CAAAA,uBAAiC,CAAG,QAApCA,CAAAA,uBAAoC,EAAM,yBAChBP,kBAAkB,CAACK,MAAD,CADF,CAC7CC,wBAD6C,qBAC7CA,wBAD6C,iBAIjDL,UAAU,EAJuC,CAGlCO,OAHkC,aAGnDA,OAHmD,CAGxCC,IAHwC,CAMrD,GAAMC,CAAAA,eAAe,CAAG,oBAAxB,CACA,GAAMC,CAAAA,kBAAkB,CAAGR,qBAAqB,CAACO,eAAD,CAAhD,CAPqD,kBAS3BN,YAAY,EATe,CAS7CQ,aAT6C,eAS7CA,aAT6C,CAWrDhB,SAAS,CAAC,UAAM,CACd,GAAIe,kBAAkB,CAACE,IAAnB,GAA4B,kBAAhC,CAAoD,CAClDD,aAAa,CAAC,kCAAD,CAAb,CACD,CACF,CAJQ,CAIN,CAACD,kBAAkB,CAACE,IAApB,CAA0BD,aAA1B,CAJM,CAAT,CAMA,MAAOD,CAAAA,kBAAkB,CAACE,IAAnB,GAA4B,oBAA5B,cACL,KAAC,IAAD,EAAM,OAAO,CAAC,gBAAd,uBACE,MAAC,MAAD,EAAQ,QAAQ,KAAhB,CAAiB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAArB,wBACE,KAAC,OAAD,EAAS,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAASC,KAAK,CAAE,OAAhB,CAAb,CAAwC,IAAI,CAAC,MAA7C,EADF,+BADF,EADK,CAOHL,kBAAkB,CAACE,IAAnB,GAA4B,wBAA5B,EACFF,kBAAkB,CAACE,IAAnB,GAA4B,WAD1B,cAEF,KAAC,IAAD,EAAM,OAAO,CAAC,gBAAd,uBACE,KAAC,WAAD,EACE,EAAE,CAAEH,eADN,CAEE,IAAI,CAAEF,OAAO,CAACS,sBAAR,CAA+BC,IAA/B,CAAoCV,OAApC,CAA6CW,SAA7C,CAFR,uBAIE,MAAC,MAAD,EAAQ,EAAE,CAAE,CAAEL,EAAE,CAAE,CAAN,CAAZ,oBAA8BR,wBAAwB,CAACc,QAAzB,EAA9B,UAJF,EADF,EAFE,CAUA,IAjBJ,CAkBD,CAnCM","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button, Flex, Spinner } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Transaction, useMyTransactionState } from \"./Transaction\";\nimport { useTroveView } from \"./Trove/context/TroveViewContext\";\n\nconst select = ({ collateralSurplusBalance }: LiquityStoreState) => ({\n  collateralSurplusBalance\n});\n\nexport const CollateralSurplusAction: React.FC = () => {\n  const { collateralSurplusBalance } = useLiquitySelector(select);\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const myTransactionId = \"claim-coll-surplus\";\n  const myTransactionState = useMyTransactionState(myTransactionId);\n\n  const { dispatchEvent } = useTroveView();\n\n  useEffect(() => {\n    if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"TROVE_SURPLUS_COLLATERAL_CLAIMED\");\n    }\n  }, [myTransactionState.type, dispatchEvent]);\n\n  return myTransactionState.type === \"waitingForApproval\" ? (\n    <Flex variant=\"layout.actions\">\n      <Button disabled sx={{ mx: 2 }}>\n        <Spinner sx={{ mr: 2, color: \"white\" }} size=\"20px\" />\n        Waiting for your approval\n      </Button>\n    </Flex>\n  ) : myTransactionState.type !== \"waitingForConfirmation\" &&\n    myTransactionState.type !== \"confirmed\" ? (\n    <Flex variant=\"layout.actions\">\n      <Transaction\n        id={myTransactionId}\n        send={liquity.claimCollateralSurplus.bind(liquity, undefined)}\n      >\n        <Button sx={{ mx: 2 }}>Claim {collateralSurplusBalance.prettify()} ETH</Button>\n      </Transaction>\n    </Flex>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}