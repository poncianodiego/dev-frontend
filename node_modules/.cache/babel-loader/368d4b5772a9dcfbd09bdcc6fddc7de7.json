{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/pages/PageSwitcher.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { Dashboard } from \"./Dashboard\";\nimport { UnregisteredFrontend } from \"./UnregisteredFrontend\";\nimport { FrontendRegistration } from \"./FrontendRegistration\";\nimport { FrontendRegistrationSuccess } from \"./FrontendRegistrationSuccess\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst selectFrontend = ({\n  frontend\n}) => frontend;\n\nexport const PageSwitcher = () => {\n  _s();\n\n  const {\n    account,\n    config: {\n      frontendTag\n    }\n  } = useLiquity();\n  const frontend = useLiquitySelector(selectFrontend);\n  const unregistered = frontendTag !== AddressZero && frontend.status === \"unregistered\";\n  const [registering, setRegistering] = useState(false);\n  useEffect(() => {\n    if (unregistered) {\n      setRegistering(true);\n    }\n  }, [unregistered]);\n\n  if (registering || unregistered) {\n    if (frontend.status === \"registered\") {\n      return /*#__PURE__*/_jsxDEV(FrontendRegistrationSuccess, {\n        onDismiss: () => setRegistering(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    } else if (account === frontendTag) {\n      return /*#__PURE__*/_jsxDEV(FrontendRegistration, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(UnregisteredFrontend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(PageSwitcher, \"n8HArhYjMqBCWxenx0BBZRGwu2E=\", false, function () {\n  return [useLiquity, useLiquitySelector];\n});\n\n_c = PageSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSwitcher\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/pages/PageSwitcher.tsx"],"names":["useEffect","useState","AddressZero","useLiquitySelector","useLiquity","Dashboard","UnregisteredFrontend","FrontendRegistration","FrontendRegistrationSuccess","selectFrontend","frontend","PageSwitcher","account","config","frontendTag","unregistered","status","registering","setRegistering"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAGA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,2BAAT,QAA4C,+BAA5C;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqCA,QAA5D;;AAEA,OAAO,MAAMC,YAAsB,GAAG,MAAM;AAAA;;AAC1C,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAFJ,MAGFV,UAAU,EAHd;AAKA,QAAMM,QAAQ,GAAGP,kBAAkB,CAACM,cAAD,CAAnC;AACA,QAAMM,YAAY,GAAGD,WAAW,KAAKZ,WAAhB,IAA+BQ,QAAQ,CAACM,MAAT,KAAoB,cAAxE;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,YAAJ,EAAkB;AAChBG,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACH,YAAD,CAJM,CAAT;;AAMA,MAAIE,WAAW,IAAIF,YAAnB,EAAiC;AAC/B,QAAIL,QAAQ,CAACM,MAAT,KAAoB,YAAxB,EAAsC;AACpC,0BAAO,QAAC,2BAAD;AAA6B,QAAA,SAAS,EAAE,MAAME,cAAc,CAAC,KAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAIN,OAAO,KAAKE,WAAhB,EAA6B;AAClC,0BAAO,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BAAO,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GARD,MAQO;AACL,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA5BM;;GAAMH,Y;UAIPP,U,EAEaD,kB;;;KANNQ,Y","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { AddressZero } from \"@ethersproject/constants\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Dashboard } from \"./Dashboard\";\nimport { UnregisteredFrontend } from \"./UnregisteredFrontend\";\nimport { FrontendRegistration } from \"./FrontendRegistration\";\nimport { FrontendRegistrationSuccess } from \"./FrontendRegistrationSuccess\";\n\nconst selectFrontend = ({ frontend }: LiquityStoreState) => frontend;\n\nexport const PageSwitcher: React.FC = () => {\n  const {\n    account,\n    config: { frontendTag }\n  } = useLiquity();\n\n  const frontend = useLiquitySelector(selectFrontend);\n  const unregistered = frontendTag !== AddressZero && frontend.status === \"unregistered\";\n\n  const [registering, setRegistering] = useState(false);\n\n  useEffect(() => {\n    if (unregistered) {\n      setRegistering(true);\n    }\n  }, [unregistered]);\n\n  if (registering || unregistered) {\n    if (frontend.status === \"registered\") {\n      return <FrontendRegistrationSuccess onDismiss={() => setRegistering(false)} />;\n    } else if (account === frontendTag) {\n      return <FrontendRegistration />;\n    } else {\n      return <UnregisteredFrontend />;\n    }\n  } else {\n    return <Dashboard />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}