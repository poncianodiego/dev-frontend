{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";import{Heading,Box,Flex,Card,Button}from\"theme-ui\";import{Decimal}from\"@liquity/lib-base\";import{LP}from\"../../../../strings\";import{Icon}from\"../../../Icon\";import{EditableRow,StaticRow}from\"../../../Trove/Editor\";import{LoadingOverlay}from\"../../../LoadingOverlay\";import{useFarmView}from\"../../context/FarmViewContext\";import{useMyTransactionState}from\"../../../Transaction\";import{Confirm}from\"../Confirm\";import{Description}from\"../Description\";import{Approve}from\"../Approve\";import{Validation}from\"../Validation\";import{useValidationState}from\"../../context/useValidationState\";import{useLiquitySelector}from\"@liquity/lib-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var transactionId=/farm-/;var selector=function selector(_ref){var totalStakedUniTokens=_ref.totalStakedUniTokens;return{totalStakedUniTokens:totalStakedUniTokens};};export var Staking=function Staking(){var _useFarmView=useFarmView(),dispatchEvent=_useFarmView.dispatchEvent;var _useLiquitySelector=useLiquitySelector(selector),totalStakedUniTokens=_useLiquitySelector.totalStakedUniTokens;var _useState=useState(Decimal.from(0)),_useState2=_slicedToArray(_useState,2),amount=_useState2[0],setAmount=_useState2[1];var editingState=useState();var isDirty=!amount.isZero;var _useValidationState=useValidationState(amount),maximumStake=_useValidationState.maximumStake,hasSetMaximumStake=_useValidationState.hasSetMaximumStake;var transactionState=useMyTransactionState(transactionId);var isTransactionPending=transactionState.type===\"waitingForApproval\"||transactionState.type===\"waitingForConfirmation\";var handleCancelPressed=useCallback(function(){dispatchEvent(\"CANCEL_PRESSED\");},[dispatchEvent]);var nextTotalStakedUniTokens=totalStakedUniTokens.add(amount);var poolShare=amount.mulDiv(100,nextTotalStakedUniTokens);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Heading,{children:[\"Uniswap Liquidity Farm\",isDirty&&!isTransactionPending&&/*#__PURE__*/_jsx(Button,{variant:\"titleIcon\",sx:{\":enabled:hover\":{color:\"danger\"}},onClick:function onClick(){return setAmount(Decimal.from(0));},children:/*#__PURE__*/_jsx(Icon,{name:\"history\",size:\"lg\"})})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:[2,3]},children:[/*#__PURE__*/_jsx(EditableRow,{label:\"Stake\",inputId:\"amount-lp\",amount:amount.prettify(4),unit:LP,editingState:editingState,editedAmount:amount.toString(4),setEditedAmount:function setEditedAmount(amount){return setAmount(Decimal.from(amount));},maxAmount:maximumStake.toString(),maxedOut:hasSetMaximumStake}),poolShare.infinite?/*#__PURE__*/_jsx(StaticRow,{label:\"Pool share\",inputId:\"farm-share\",amount:\"N/A\"}):/*#__PURE__*/_jsx(StaticRow,{label:\"Pool share\",inputId:\"farm-share\",amount:poolShare.prettify(4),unit:\"%\"}),isDirty&&/*#__PURE__*/_jsx(Validation,{amount:amount}),/*#__PURE__*/_jsx(Description,{amount:amount}),/*#__PURE__*/_jsxs(Flex,{variant:\"layout.actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"cancel\",onClick:handleCancelPressed,children:\"Cancel\"}),/*#__PURE__*/_jsx(Approve,{amount:amount}),/*#__PURE__*/_jsx(Confirm,{amount:amount})]})]}),isTransactionPending&&/*#__PURE__*/_jsx(LoadingOverlay,{})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Staking/Staking.tsx"],"names":["React","useCallback","useState","Heading","Box","Flex","Card","Button","Decimal","LP","Icon","EditableRow","StaticRow","LoadingOverlay","useFarmView","useMyTransactionState","Confirm","Description","Approve","Validation","useValidationState","useLiquitySelector","transactionId","selector","totalStakedUniTokens","Staking","dispatchEvent","from","amount","setAmount","editingState","isDirty","isZero","maximumStake","hasSetMaximumStake","transactionState","isTransactionPending","type","handleCancelPressed","nextTotalStakedUniTokens","add","poolShare","mulDiv","color","p","prettify","toString","infinite"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Heading, Box, Flex, Card, Button } from \"theme-ui\";\nimport { Decimal, LiquityStoreState } from \"@liquity/lib-base\";\nimport { LP } from \"../../../../strings\";\nimport { Icon } from \"../../../Icon\";\nimport { EditableRow, StaticRow } from \"../../../Trove/Editor\";\nimport { LoadingOverlay } from \"../../../LoadingOverlay\";\nimport { useFarmView } from \"../../context/FarmViewContext\";\nimport { useMyTransactionState } from \"../../../Transaction\";\nimport { Confirm } from \"../Confirm\";\nimport { Description } from \"../Description\";\nimport { Approve } from \"../Approve\";\nimport { Validation } from \"../Validation\";\nimport { useValidationState } from \"../../context/useValidationState\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nconst transactionId = /farm-/;\nconst selector = ({ totalStakedUniTokens }: LiquityStoreState) => ({ totalStakedUniTokens });\n\nexport const Staking: React.FC = () => {\n  const { dispatchEvent } = useFarmView();\n  const { totalStakedUniTokens } = useLiquitySelector(selector);\n\n  const [amount, setAmount] = useState<Decimal>(Decimal.from(0));\n  const editingState = useState<string>();\n  const isDirty = !amount.isZero;\n\n  const { maximumStake, hasSetMaximumStake } = useValidationState(amount);\n\n  const transactionState = useMyTransactionState(transactionId);\n  const isTransactionPending =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n\n  const handleCancelPressed = useCallback(() => {\n    dispatchEvent(\"CANCEL_PRESSED\");\n  }, [dispatchEvent]);\n\n  const nextTotalStakedUniTokens = totalStakedUniTokens.add(amount);\n\n  const poolShare = amount.mulDiv(100, nextTotalStakedUniTokens);\n\n  return (\n    <Card>\n      <Heading>\n        Uniswap Liquidity Farm\n        {isDirty && !isTransactionPending && (\n          <Button\n            variant=\"titleIcon\"\n            sx={{ \":enabled:hover\": { color: \"danger\" } }}\n            onClick={() => setAmount(Decimal.from(0))}\n          >\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Stake\"\n          inputId=\"amount-lp\"\n          amount={amount.prettify(4)}\n          unit={LP}\n          editingState={editingState}\n          editedAmount={amount.toString(4)}\n          setEditedAmount={amount => setAmount(Decimal.from(amount))}\n          maxAmount={maximumStake.toString()}\n          maxedOut={hasSetMaximumStake}\n        ></EditableRow>\n\n        {poolShare.infinite ? (\n          <StaticRow label=\"Pool share\" inputId=\"farm-share\" amount=\"N/A\" />\n        ) : (\n          <StaticRow\n            label=\"Pool share\"\n            inputId=\"farm-share\"\n            amount={poolShare.prettify(4)}\n            unit=\"%\"\n          />\n        )}\n\n        {isDirty && <Validation amount={amount} />}\n        <Description amount={amount} />\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"cancel\" onClick={handleCancelPressed}>\n            Cancel\n          </Button>\n          <Approve amount={amount} />\n          <Confirm amount={amount} />\n        </Flex>\n      </Box>\n      {isTransactionPending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}