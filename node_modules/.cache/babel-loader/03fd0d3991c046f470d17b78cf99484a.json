{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Button,Box,Flex,Card,Heading}from\"theme-ui\";import{Decimal,Percent,MINIMUM_COLLATERAL_RATIO}from\"@liquity/lib-base\";import{useLiquitySelector}from\"@liquity/lib-react\";import{COIN}from\"../../strings\";import{Icon}from\"../Icon\";import{LoadingOverlay}from\"../LoadingOverlay\";import{EditableRow,StaticRow}from\"../Trove/Editor\";import{ActionDescription,Amount}from\"../ActionDescription\";import{ErrorDescription}from\"../ErrorDescription\";import{useMyTransactionState}from\"../Transaction\";import{RedemptionAction}from\"./RedemptionAction\";import{InfoIcon}from\"../InfoIcon\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mcrPercent=new Percent(MINIMUM_COLLATERAL_RATIO).toString(0);var select=function select(_ref){var price=_ref.price,fees=_ref.fees,total=_ref.total,lusdBalance=_ref.lusdBalance;return{price:price,fees:fees,total:total,lusdBalance:lusdBalance};};var transactionId=\"redemption\";export var RedemptionManager=function RedemptionManager(){var _useLiquitySelector=useLiquitySelector(select),price=_useLiquitySelector.price,fees=_useLiquitySelector.fees,total=_useLiquitySelector.total,lusdBalance=_useLiquitySelector.lusdBalance;var _useState=useState(Decimal.ZERO),_useState2=_slicedToArray(_useState,2),lusdAmount=_useState2[0],setLUSDAmount=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),changePending=_useState4[0],setChangePending=_useState4[1];var editingState=useState();var dirty=!lusdAmount.isZero;var ethAmount=lusdAmount.div(price);var redemptionRate=fees.redemptionRate(lusdAmount.div(total.debt));var feePct=new Percent(redemptionRate);var ethFee=ethAmount.mul(redemptionRate);var maxRedemptionRate=redemptionRate.add(0.001);// TODO slippage tolerance\nvar myTransactionState=useMyTransactionState(transactionId);useEffect(function(){if(myTransactionState.type===\"waitingForApproval\"||myTransactionState.type===\"waitingForConfirmation\"){setChangePending(true);}else if(myTransactionState.type===\"failed\"||myTransactionState.type===\"cancelled\"){setChangePending(false);}else if(myTransactionState.type===\"confirmed\"){setLUSDAmount(Decimal.ZERO);setChangePending(false);}},[myTransactionState.type,setChangePending,setLUSDAmount]);var _ref2=total.collateralRatioIsBelowMinimum(price)?[false,/*#__PURE__*/_jsxs(ErrorDescription,{children:[\"You can't redeem LUSD when the total collateral ratio is less than\",\" \",/*#__PURE__*/_jsx(Amount,{children:mcrPercent}),\". Please try again later.\"]})]:lusdAmount.gt(lusdBalance)?[false,/*#__PURE__*/_jsxs(ErrorDescription,{children:[\"The amount you're trying to redeem exceeds your balance by\",\" \",/*#__PURE__*/_jsxs(Amount,{children:[lusdAmount.sub(lusdBalance).prettify(),\" \",COIN]}),\".\"]})]:[true,/*#__PURE__*/_jsxs(ActionDescription,{children:[\"You will receive \",/*#__PURE__*/_jsxs(Amount,{children:[ethAmount.sub(ethFee).prettify(4),\" ETH\"]}),\" in exchange for\",\" \",/*#__PURE__*/_jsxs(Amount,{children:[lusdAmount.prettify(),\" \",COIN]}),\".\"]})],_ref3=_slicedToArray(_ref2,2),canRedeem=_ref3[0],description=_ref3[1];return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Heading,{children:[\"Redeem\",dirty&&!changePending&&/*#__PURE__*/_jsx(Button,{variant:\"titleIcon\",sx:{\":enabled:hover\":{color:\"danger\"}},onClick:function onClick(){return setLUSDAmount(Decimal.ZERO);},children:/*#__PURE__*/_jsx(Icon,{name:\"history\",size:\"lg\"})})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:[2,3]},children:[/*#__PURE__*/_jsx(EditableRow,{label:\"Redeem\",inputId:\"redeem-lusd\",amount:lusdAmount.prettify(),maxAmount:lusdBalance.toString(),maxedOut:lusdAmount.eq(lusdBalance),unit:COIN,editingState:editingState,editedAmount:lusdAmount.toString(2),setEditedAmount:function setEditedAmount(amount){return setLUSDAmount(Decimal.from(amount));}}),/*#__PURE__*/_jsx(StaticRow,{label:\"Redemption Fee\",inputId:\"redeem-fee\",amount:ethFee.toString(4),pendingAmount:feePct.toString(2),unit:\"ETH\",infoIcon:/*#__PURE__*/_jsx(InfoIcon,{tooltip:/*#__PURE__*/_jsx(Card,{variant:\"tooltip\",sx:{minWidth:\"240px\"},children:\"The Redemption Fee is charged as a percentage of the redeemed Ether. The Redemption Fee depends on LUSD redemption volumes and is 0.5% at minimum.\"})})}),(dirty||!canRedeem)&&description||/*#__PURE__*/_jsxs(ActionDescription,{children:[\"Enter the amount of \",COIN,\" you'd like to redeem.\"]}),/*#__PURE__*/_jsx(Flex,{variant:\"layout.actions\",children:/*#__PURE__*/_jsx(RedemptionAction,{transactionId:transactionId,disabled:!dirty||!canRedeem,lusdAmount:lusdAmount,maxRedemptionRate:maxRedemptionRate})})]}),changePending&&/*#__PURE__*/_jsx(LoadingOverlay,{})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Redemption/RedemptionManager.tsx"],"names":["React","useEffect","useState","Button","Box","Flex","Card","Heading","Decimal","Percent","MINIMUM_COLLATERAL_RATIO","useLiquitySelector","COIN","Icon","LoadingOverlay","EditableRow","StaticRow","ActionDescription","Amount","ErrorDescription","useMyTransactionState","RedemptionAction","InfoIcon","mcrPercent","toString","select","price","fees","total","lusdBalance","transactionId","RedemptionManager","ZERO","lusdAmount","setLUSDAmount","changePending","setChangePending","editingState","dirty","isZero","ethAmount","div","redemptionRate","debt","feePct","ethFee","mul","maxRedemptionRate","add","myTransactionState","type","collateralRatioIsBelowMinimum","gt","sub","prettify","canRedeem","description","color","p","eq","amount","from","minWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Box, Flex, Card, Heading } from \"theme-ui\";\n\nimport { Decimal, Percent, LiquityStoreState, MINIMUM_COLLATERAL_RATIO } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN } from \"../../strings\";\n\nimport { Icon } from \"../Icon\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { EditableRow, StaticRow } from \"../Trove/Editor\";\nimport { ActionDescription, Amount } from \"../ActionDescription\";\nimport { ErrorDescription } from \"../ErrorDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\n\nimport { RedemptionAction } from \"./RedemptionAction\";\nimport { InfoIcon } from \"../InfoIcon\";\n\nconst mcrPercent = new Percent(MINIMUM_COLLATERAL_RATIO).toString(0);\n\nconst select = ({ price, fees, total, lusdBalance }: LiquityStoreState) => ({\n  price,\n  fees,\n  total,\n  lusdBalance\n});\n\nconst transactionId = \"redemption\";\n\nexport const RedemptionManager: React.FC = () => {\n  const { price, fees, total, lusdBalance } = useLiquitySelector(select);\n  const [lusdAmount, setLUSDAmount] = useState(Decimal.ZERO);\n  const [changePending, setChangePending] = useState(false);\n  const editingState = useState<string>();\n\n  const dirty = !lusdAmount.isZero;\n  const ethAmount = lusdAmount.div(price);\n  const redemptionRate = fees.redemptionRate(lusdAmount.div(total.debt));\n  const feePct = new Percent(redemptionRate);\n  const ethFee = ethAmount.mul(redemptionRate);\n  const maxRedemptionRate = redemptionRate.add(0.001); // TODO slippage tolerance\n\n  const myTransactionState = useMyTransactionState(transactionId);\n\n  useEffect(() => {\n    if (\n      myTransactionState.type === \"waitingForApproval\" ||\n      myTransactionState.type === \"waitingForConfirmation\"\n    ) {\n      setChangePending(true);\n    } else if (myTransactionState.type === \"failed\" || myTransactionState.type === \"cancelled\") {\n      setChangePending(false);\n    } else if (myTransactionState.type === \"confirmed\") {\n      setLUSDAmount(Decimal.ZERO);\n      setChangePending(false);\n    }\n  }, [myTransactionState.type, setChangePending, setLUSDAmount]);\n\n  const [canRedeem, description] = total.collateralRatioIsBelowMinimum(price)\n    ? [\n        false,\n        <ErrorDescription>\n          You can't redeem LUSD when the total collateral ratio is less than{\" \"}\n          <Amount>{mcrPercent}</Amount>. Please try again later.\n        </ErrorDescription>\n      ]\n    : lusdAmount.gt(lusdBalance)\n    ? [\n        false,\n        <ErrorDescription>\n          The amount you're trying to redeem exceeds your balance by{\" \"}\n          <Amount>\n            {lusdAmount.sub(lusdBalance).prettify()} {COIN}\n          </Amount>\n          .\n        </ErrorDescription>\n      ]\n    : [\n        true,\n        <ActionDescription>\n          You will receive <Amount>{ethAmount.sub(ethFee).prettify(4)} ETH</Amount> in exchange for{\" \"}\n          <Amount>\n            {lusdAmount.prettify()} {COIN}\n          </Amount>\n          .\n        </ActionDescription>\n      ];\n\n  return (\n    <Card>\n      <Heading>\n        Redeem\n        {dirty && !changePending && (\n          <Button\n            variant=\"titleIcon\"\n            sx={{ \":enabled:hover\": { color: \"danger\" } }}\n            onClick={() => setLUSDAmount(Decimal.ZERO)}\n          >\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Redeem\"\n          inputId=\"redeem-lusd\"\n          amount={lusdAmount.prettify()}\n          maxAmount={lusdBalance.toString()}\n          maxedOut={lusdAmount.eq(lusdBalance)}\n          unit={COIN}\n          {...{ editingState }}\n          editedAmount={lusdAmount.toString(2)}\n          setEditedAmount={amount => setLUSDAmount(Decimal.from(amount))}\n        />\n\n        <StaticRow\n          label=\"Redemption Fee\"\n          inputId=\"redeem-fee\"\n          amount={ethFee.toString(4)}\n          pendingAmount={feePct.toString(2)}\n          unit=\"ETH\"\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ minWidth: \"240px\" }}>\n                  The Redemption Fee is charged as a percentage of the redeemed Ether. The Redemption\n                  Fee depends on LUSD redemption volumes and is 0.5% at minimum.\n                </Card>\n              }\n            />\n          }\n        />\n\n        {((dirty || !canRedeem) && description) || (\n          <ActionDescription>Enter the amount of {COIN} you'd like to redeem.</ActionDescription>\n        )}\n\n        <Flex variant=\"layout.actions\">\n          <RedemptionAction\n            transactionId={transactionId}\n            disabled={!dirty || !canRedeem}\n            lusdAmount={lusdAmount}\n            maxRedemptionRate={maxRedemptionRate}\n          />\n        </Flex>\n      </Box>\n\n      {changePending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}