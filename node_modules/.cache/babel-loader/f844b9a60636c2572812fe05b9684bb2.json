{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/Trove.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TroveManager } from \"./TroveManager\";\nimport { ReadOnlyTrove } from \"./ReadOnlyTrove\";\nimport { NoTrove } from \"./NoTrove\";\nimport { Opening } from \"./Opening\";\nimport { Adjusting } from \"./Adjusting\";\nimport { RedeemedTrove } from \"./RedeemedTrove\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { LiquidatedTrove } from \"./LiquidatedTrove\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Trove = props => {\n  _s();\n\n  const {\n    view\n  } = useTroveView();\n\n  switch (view) {\n    // loading state not needed, as main app has a loading spinner that blocks render until the liquity backend data is available\n    case \"ACTIVE\":\n      {\n        return /*#__PURE__*/_jsxDEV(ReadOnlyTrove, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }, this);\n      }\n\n    case \"ADJUSTING\":\n      {\n        return /*#__PURE__*/_jsxDEV(Adjusting, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }, this);\n      }\n\n    case \"CLOSING\":\n      {\n        return /*#__PURE__*/_jsxDEV(TroveManager, { ...props,\n          collateral: Decimal.ZERO,\n          debt: Decimal.ZERO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }, this);\n      }\n\n    case \"OPENING\":\n      {\n        return /*#__PURE__*/_jsxDEV(Opening, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }, this);\n      }\n\n    case \"LIQUIDATED\":\n      {\n        return /*#__PURE__*/_jsxDEV(LiquidatedTrove, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this);\n      }\n\n    case \"REDEEMED\":\n      {\n        return /*#__PURE__*/_jsxDEV(RedeemedTrove, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }, this);\n      }\n\n    case \"NONE\":\n      {\n        return /*#__PURE__*/_jsxDEV(NoTrove, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this);\n      }\n  }\n};\n\n_s(Trove, \"0EXRVnbuYCLLOjAXR+Lt7TsyIqg=\", false, function () {\n  return [useTroveView];\n});\n\n_c = Trove;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trove\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/Trove.tsx"],"names":["React","TroveManager","ReadOnlyTrove","NoTrove","Opening","Adjusting","RedeemedTrove","useTroveView","LiquidatedTrove","Decimal","Trove","props","view","ZERO"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,OAAO,MAAMC,KAAe,GAAGC,KAAK,IAAI;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAWL,YAAY,EAA7B;;AAEA,UAAQK,IAAR;AACE;AACA,SAAK,QAAL;AAAe;AACb,4BAAO,QAAC,aAAD,OAAmBD;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,4BAAO,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAK,SAAL;AAAgB;AACd,4BAAO,QAAC,YAAD,OAAkBA,KAAlB;AAAyB,UAAA,UAAU,EAAEF,OAAO,CAACI,IAA7C;AAAmD,UAAA,IAAI,EAAEJ,OAAO,CAACI;AAAjE;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAK,SAAL;AAAgB;AACd,4BAAO,QAAC,OAAD,OAAaF;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,4BAAO,QAAC,eAAD,OAAqBA;AAArB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,4BAAO,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,SAAK,MAAL;AAAa;AACX,4BAAO,QAAC,OAAD,OAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AAtBH;AAwBD,CA3BM;;GAAMD,K;UACMH,Y;;;KADNG,K","sourcesContent":["import React from \"react\";\nimport { TroveManager } from \"./TroveManager\";\nimport { ReadOnlyTrove } from \"./ReadOnlyTrove\";\nimport { NoTrove } from \"./NoTrove\";\nimport { Opening } from \"./Opening\";\nimport { Adjusting } from \"./Adjusting\";\nimport { RedeemedTrove } from \"./RedeemedTrove\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { LiquidatedTrove } from \"./LiquidatedTrove\";\nimport { Decimal } from \"@liquity/lib-base\";\n\nexport const Trove: React.FC = props => {\n  const { view } = useTroveView();\n\n  switch (view) {\n    // loading state not needed, as main app has a loading spinner that blocks render until the liquity backend data is available\n    case \"ACTIVE\": {\n      return <ReadOnlyTrove {...props} />;\n    }\n    case \"ADJUSTING\": {\n      return <Adjusting {...props} />;\n    }\n    case \"CLOSING\": {\n      return <TroveManager {...props} collateral={Decimal.ZERO} debt={Decimal.ZERO} />;\n    }\n    case \"OPENING\": {\n      return <Opening {...props} />;\n    }\n    case \"LIQUIDATED\": {\n      return <LiquidatedTrove {...props} />;\n    }\n    case \"REDEEMED\": {\n      return <RedeemedTrove {...props} />;\n    }\n    case \"NONE\": {\n      return <NoTrove {...props} />;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}