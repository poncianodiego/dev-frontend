{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Active/ClaimReward.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button } from \"theme-ui\";\nimport { useLiquity } from \"../../../../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"../../../Transaction\";\nimport { useFarmView } from \"../../context/FarmViewContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transactionId = \"farm-claim-reward\";\nexport const ClaimReward = () => {\n  _s();\n\n  const {\n    dispatchEvent\n  } = useFarmView();\n  const {\n    liquity: {\n      send: liquity\n    }\n  } = useLiquity();\n  const transactionState = useMyTransactionState(transactionId);\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"CLAIM_REWARD_CONFIRMED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n  return /*#__PURE__*/_jsxDEV(Transaction, {\n    id: transactionId,\n    send: liquity.withdrawLQTYRewardFromLiquidityMining.bind(liquity),\n    showFailure: \"asTooltip\",\n    tooltipPlacement: \"bottom\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Claim reward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClaimReward, \"TgwK4xV/NurtlZ0Yn/mY7YpoUIs=\", false, function () {\n  return [useFarmView, useLiquity, useMyTransactionState];\n});\n\n_c = ClaimReward;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimReward\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Active/ClaimReward.tsx"],"names":["React","useEffect","Button","useLiquity","Transaction","useMyTransactionState","useFarmView","transactionId","ClaimReward","dispatchEvent","liquity","send","transactionState","type","withdrawLQTYRewardFromLiquidityMining","bind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,sBAAnD;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,MAAMC,aAAa,GAAG,mBAAtB;AAEA,OAAO,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,WAAW,EAArC;AAEA,QAAM;AACJI,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAED;AAAR;AADL,MAEFP,UAAU,EAFd;AAIA,QAAMS,gBAAgB,GAAGP,qBAAqB,CAACE,aAAD,CAA9C;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,gBAAgB,CAACC,IAAjB,KAA0B,kBAA9B,EAAkD;AAChDJ,MAAAA,aAAa,CAAC,wBAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACG,gBAAgB,CAACC,IAAlB,EAAwBJ,aAAxB,CAJM,CAAT;AAMA,sBACE,QAAC,WAAD;AACE,IAAA,EAAE,EAAEF,aADN;AAEE,IAAA,IAAI,EAAEG,OAAO,CAACI,qCAAR,CAA8CC,IAA9C,CAAmDL,OAAnD,CAFR;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,gBAAgB,EAAC,QAJnB;AAAA,2BAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzBM;;GAAMF,W;UACeF,W,EAItBH,U,EAEqBE,qB;;;KAPdG,W","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button } from \"theme-ui\";\nimport { useLiquity } from \"../../../../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"../../../Transaction\";\nimport { useFarmView } from \"../../context/FarmViewContext\";\n\nconst transactionId = \"farm-claim-reward\";\n\nexport const ClaimReward: React.FC = () => {\n  const { dispatchEvent } = useFarmView();\n\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const transactionState = useMyTransactionState(transactionId);\n\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"CLAIM_REWARD_CONFIRMED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n\n  return (\n    <Transaction\n      id={transactionId}\n      send={liquity.withdrawLQTYRewardFromLiquidityMining.bind(liquity)}\n      showFailure=\"asTooltip\"\n      tooltipPlacement=\"bottom\"\n    >\n      <Button>Claim reward</Button>\n    </Transaction>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}