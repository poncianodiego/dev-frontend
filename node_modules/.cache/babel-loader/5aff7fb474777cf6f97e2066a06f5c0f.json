{"ast":null,"code":"import React from\"react\";import{LP}from\"../../../strings\";import{ErrorDescription}from\"../../ErrorDescription\";import{useValidationState}from\"../context/useValidationState\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Validation=function Validation(_ref){var amount=_ref.amount;var _useValidationState=useValidationState(amount),isValid=_useValidationState.isValid,hasApproved=_useValidationState.hasApproved,hasEnoughUniToken=_useValidationState.hasEnoughUniToken;if(isValid){return null;}if(!hasApproved){return/*#__PURE__*/_jsxs(ErrorDescription,{children:[\"You haven't approved enough \",LP]});}if(!hasEnoughUniToken){return/*#__PURE__*/_jsxs(ErrorDescription,{children:[\"You don't have enough \",LP]});}return null;};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Validation.tsx"],"names":["React","LP","ErrorDescription","useValidationState","Validation","amount","isValid","hasApproved","hasEnoughUniToken"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,EAAT,KAAmB,kBAAnB,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,OAASC,kBAAT,KAAmC,+BAAnC,C,6CAMA,MAAO,IAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,yBACfF,kBAAkB,CAACE,MAAD,CADH,CAC3DC,OAD2D,qBAC3DA,OAD2D,CAClDC,WADkD,qBAClDA,WADkD,CACrCC,iBADqC,qBACrCA,iBADqC,CAGnE,GAAIF,OAAJ,CAAa,CACX,MAAO,KAAP,CACD,CAED,GAAI,CAACC,WAAL,CAAkB,CAChB,mBAAO,MAAC,gBAAD,2CAA+CN,EAA/C,GAAP,CACD,CAED,GAAI,CAACO,iBAAL,CAAwB,CACtB,mBAAO,MAAC,gBAAD,qCAAyCP,EAAzC,GAAP,CACD,CAED,MAAO,KAAP,CACD,CAhBM","sourcesContent":["import React from \"react\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { LP } from \"../../../strings\";\nimport { ErrorDescription } from \"../../ErrorDescription\";\nimport { useValidationState } from \"../context/useValidationState\";\n\ntype ValidationProps = {\n  amount: Decimal;\n};\n\nexport const Validation: React.FC<ValidationProps> = ({ amount }) => {\n  const { isValid, hasApproved, hasEnoughUniToken } = useValidationState(amount);\n\n  if (isValid) {\n    return null;\n  }\n\n  if (!hasApproved) {\n    return <ErrorDescription>You haven't approved enough {LP}</ErrorDescription>;\n  }\n\n  if (!hasEnoughUniToken) {\n    return <ErrorDescription>You don't have enough {LP}</ErrorDescription>;\n  }\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}