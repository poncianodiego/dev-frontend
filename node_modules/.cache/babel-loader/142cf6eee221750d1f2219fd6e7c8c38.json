{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useCallback,useEffect}from\"react\";import{Button,Flex}from\"theme-ui\";import{Decimal}from\"@liquity/lib-base\";import{useLiquityReducer,useLiquitySelector}from\"@liquity/lib-react\";import{COIN}from\"../../strings\";import{ActionDescription}from\"../ActionDescription\";import{useMyTransactionState}from\"../Transaction\";import{StabilityDepositEditor}from\"./StabilityDepositEditor\";import{StabilityDepositAction}from\"./StabilityDepositAction\";import{useStabilityView}from\"./context/StabilityViewContext\";import{selectForStabilityDepositChangeValidation,validateStabilityDepositChange}from\"./validation/validateStabilityDepositChange\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var init=function init(_ref){var stabilityDeposit=_ref.stabilityDeposit;return{originalDeposit:stabilityDeposit,editedLUSD:stabilityDeposit.currentLUSD,changePending:false};};var reduceWith=function reduceWith(action){return function(state){return reduce(state,action);};};var finishChange=reduceWith({type:\"finishChange\"});var revert=reduceWith({type:\"revert\"});var reduce=function reduce(state,action){// console.log(state);\n// console.log(action);\nvar originalDeposit=state.originalDeposit,editedLUSD=state.editedLUSD,changePending=state.changePending;switch(action.type){case\"startChange\":{console.log(\"changeStarted\");return _objectSpread(_objectSpread({},state),{},{changePending:true});}case\"finishChange\":return _objectSpread(_objectSpread({},state),{},{changePending:false});case\"setDeposit\":return _objectSpread(_objectSpread({},state),{},{editedLUSD:Decimal.from(action.newValue)});case\"revert\":return _objectSpread(_objectSpread({},state),{},{editedLUSD:originalDeposit.currentLUSD});case\"updateStore\":{var updatedDeposit=action.stateChange.stabilityDeposit;if(!updatedDeposit){return state;}var newState=_objectSpread(_objectSpread({},state),{},{originalDeposit:updatedDeposit});var changeCommitted=!updatedDeposit.initialLUSD.eq(originalDeposit.initialLUSD)||updatedDeposit.currentLUSD.gt(originalDeposit.currentLUSD)||updatedDeposit.collateralGain.lt(originalDeposit.collateralGain)||updatedDeposit.lqtyReward.lt(originalDeposit.lqtyReward);if(changePending&&changeCommitted){return finishChange(revert(newState));}return _objectSpread(_objectSpread({},newState),{},{editedLUSD:updatedDeposit.apply(originalDeposit.whatChanged(editedLUSD))});}}};var transactionId=\"stability-deposit\";export var StabilityDepositManager=function StabilityDepositManager(){var _useLiquityReducer=useLiquityReducer(reduce,init),_useLiquityReducer2=_slicedToArray(_useLiquityReducer,2),_useLiquityReducer2$=_useLiquityReducer2[0],originalDeposit=_useLiquityReducer2$.originalDeposit,editedLUSD=_useLiquityReducer2$.editedLUSD,changePending=_useLiquityReducer2$.changePending,dispatch=_useLiquityReducer2[1];var validationContext=useLiquitySelector(selectForStabilityDepositChangeValidation);var _useStabilityView=useStabilityView(),dispatchEvent=_useStabilityView.dispatchEvent;var handleCancel=useCallback(function(){dispatchEvent(\"CANCEL_PRESSED\");},[dispatchEvent]);var _validateStabilityDep=validateStabilityDepositChange(originalDeposit,editedLUSD,validationContext),_validateStabilityDep2=_slicedToArray(_validateStabilityDep,2),validChange=_validateStabilityDep2[0],description=_validateStabilityDep2[1];var makingNewDeposit=originalDeposit.isEmpty;var myTransactionState=useMyTransactionState(transactionId);useEffect(function(){if(myTransactionState.type===\"waitingForApproval\"||myTransactionState.type===\"waitingForConfirmation\"){dispatch({type:\"startChange\"});}else if(myTransactionState.type===\"failed\"||myTransactionState.type===\"cancelled\"){dispatch({type:\"finishChange\"});}else if(myTransactionState.type===\"confirmedOneShot\"){dispatchEvent(\"DEPOSIT_CONFIRMED\");}},[myTransactionState.type,dispatch,dispatchEvent]);return/*#__PURE__*/_jsxs(StabilityDepositEditor,{originalDeposit:originalDeposit,editedLUSD:editedLUSD,changePending:changePending,dispatch:dispatch,children:[description!==null&&description!==void 0?description:makingNewDeposit?/*#__PURE__*/_jsxs(ActionDescription,{children:[\"Enter the amount of \",COIN,\" you'd like to deposit.\"]}):/*#__PURE__*/_jsxs(ActionDescription,{children:[\"Adjust the \",COIN,\" amount to deposit or withdraw.\"]}),/*#__PURE__*/_jsxs(Flex,{variant:\"layout.actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"cancel\",onClick:handleCancel,children:\"Cancel\"}),validChange?/*#__PURE__*/_jsx(StabilityDepositAction,{transactionId:transactionId,change:validChange,children:\"Confirm\"}):/*#__PURE__*/_jsx(Button,{disabled:true,children:\"Confirm\"})]})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Stability/StabilityDepositManager.tsx"],"names":["React","useCallback","useEffect","Button","Flex","Decimal","useLiquityReducer","useLiquitySelector","COIN","ActionDescription","useMyTransactionState","StabilityDepositEditor","StabilityDepositAction","useStabilityView","selectForStabilityDepositChangeValidation","validateStabilityDepositChange","init","stabilityDeposit","originalDeposit","editedLUSD","currentLUSD","changePending","reduceWith","action","state","reduce","finishChange","type","revert","console","log","from","newValue","updatedDeposit","stateChange","newState","changeCommitted","initialLUSD","eq","gt","collateralGain","lt","lqtyReward","apply","whatChanged","transactionId","StabilityDepositManager","dispatch","validationContext","dispatchEvent","handleCancel","validChange","description","makingNewDeposit","isEmpty","myTransactionState"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Button, Flex } from \"theme-ui\";\n\nimport { Decimal, Decimalish, LiquityStoreState } from \"@liquity/lib-base\";\nimport { LiquityStoreUpdate, useLiquityReducer, useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN } from \"../../strings\";\n\nimport { ActionDescription } from \"../ActionDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\n\nimport { StabilityDepositEditor } from \"./StabilityDepositEditor\";\nimport { StabilityDepositAction } from \"./StabilityDepositAction\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport {\n  selectForStabilityDepositChangeValidation,\n  validateStabilityDepositChange\n} from \"./validation/validateStabilityDepositChange\";\n\nconst init = ({ stabilityDeposit }: LiquityStoreState) => ({\n  originalDeposit: stabilityDeposit,\n  editedLUSD: stabilityDeposit.currentLUSD,\n  changePending: false\n});\n\ntype StabilityDepositManagerState = ReturnType<typeof init>;\ntype StabilityDepositManagerAction =\n  | LiquityStoreUpdate\n  | { type: \"startChange\" | \"finishChange\" | \"revert\" }\n  | { type: \"setDeposit\"; newValue: Decimalish };\n\nconst reduceWith = (action: StabilityDepositManagerAction) => (\n  state: StabilityDepositManagerState\n): StabilityDepositManagerState => reduce(state, action);\n\nconst finishChange = reduceWith({ type: \"finishChange\" });\nconst revert = reduceWith({ type: \"revert\" });\n\nconst reduce = (\n  state: StabilityDepositManagerState,\n  action: StabilityDepositManagerAction\n): StabilityDepositManagerState => {\n  // console.log(state);\n  // console.log(action);\n\n  const { originalDeposit, editedLUSD, changePending } = state;\n\n  switch (action.type) {\n    case \"startChange\": {\n      console.log(\"changeStarted\");\n      return { ...state, changePending: true };\n    }\n\n    case \"finishChange\":\n      return { ...state, changePending: false };\n\n    case \"setDeposit\":\n      return { ...state, editedLUSD: Decimal.from(action.newValue) };\n\n    case \"revert\":\n      return { ...state, editedLUSD: originalDeposit.currentLUSD };\n\n    case \"updateStore\": {\n      const {\n        stateChange: { stabilityDeposit: updatedDeposit }\n      } = action;\n\n      if (!updatedDeposit) {\n        return state;\n      }\n\n      const newState = { ...state, originalDeposit: updatedDeposit };\n\n      const changeCommitted =\n        !updatedDeposit.initialLUSD.eq(originalDeposit.initialLUSD) ||\n        updatedDeposit.currentLUSD.gt(originalDeposit.currentLUSD) ||\n        updatedDeposit.collateralGain.lt(originalDeposit.collateralGain) ||\n        updatedDeposit.lqtyReward.lt(originalDeposit.lqtyReward);\n\n      if (changePending && changeCommitted) {\n        return finishChange(revert(newState));\n      }\n\n      return {\n        ...newState,\n        editedLUSD: updatedDeposit.apply(originalDeposit.whatChanged(editedLUSD))\n      };\n    }\n  }\n};\n\nconst transactionId = \"stability-deposit\";\n\nexport const StabilityDepositManager: React.FC = () => {\n  const [{ originalDeposit, editedLUSD, changePending }, dispatch] = useLiquityReducer(reduce, init);\n  const validationContext = useLiquitySelector(selectForStabilityDepositChangeValidation);\n  const { dispatchEvent } = useStabilityView();\n\n  const handleCancel = useCallback(() => {\n    dispatchEvent(\"CANCEL_PRESSED\");\n  }, [dispatchEvent]);\n\n  const [validChange, description] = validateStabilityDepositChange(\n    originalDeposit,\n    editedLUSD,\n    validationContext\n  );\n\n  const makingNewDeposit = originalDeposit.isEmpty;\n\n  const myTransactionState = useMyTransactionState(transactionId);\n\n  useEffect(() => {\n    if (\n      myTransactionState.type === \"waitingForApproval\" ||\n      myTransactionState.type === \"waitingForConfirmation\"\n    ) {\n      dispatch({ type: \"startChange\" });\n    } else if (myTransactionState.type === \"failed\" || myTransactionState.type === \"cancelled\") {\n      dispatch({ type: \"finishChange\" });\n    } else if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"DEPOSIT_CONFIRMED\");\n    }\n  }, [myTransactionState.type, dispatch, dispatchEvent]);\n\n  return (\n    <StabilityDepositEditor\n      originalDeposit={originalDeposit}\n      editedLUSD={editedLUSD}\n      changePending={changePending}\n      dispatch={dispatch}\n    >\n      {description ??\n        (makingNewDeposit ? (\n          <ActionDescription>Enter the amount of {COIN} you'd like to deposit.</ActionDescription>\n        ) : (\n          <ActionDescription>Adjust the {COIN} amount to deposit or withdraw.</ActionDescription>\n        ))}\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleCancel}>\n          Cancel\n        </Button>\n\n        {validChange ? (\n          <StabilityDepositAction transactionId={transactionId} change={validChange}>\n            Confirm\n          </StabilityDepositAction>\n        ) : (\n          <Button disabled>Confirm</Button>\n        )}\n      </Flex>\n    </StabilityDepositEditor>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}