{"ast":null,"code":"import{createContext,useContext}from\"react\";export var TroveViewContext=/*#__PURE__*/createContext(null);export var useTroveView=function useTroveView(){var context=useContext(TroveViewContext);if(context===null){throw new Error(\"You must add a <TroveViewProvider> into the React tree\");}return context;};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Trove/context/TroveViewContext.tsx"],"names":["createContext","useContext","TroveViewContext","useTroveView","context","Error"],"mappings":"AAAA,OAASA,aAAT,CAAwBC,UAAxB,KAA0C,OAA1C,CAQA,MAAO,IAAMC,CAAAA,gBAAgB,cAAGF,aAAa,CAA8B,IAA9B,CAAtC,CAEP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA4B,CACtD,GAAMC,CAAAA,OAAoC,CAAGH,UAAU,CAACC,gBAAD,CAAvD,CAEA,GAAIE,OAAO,GAAK,IAAhB,CAAsB,CACpB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,wDAAV,CAAN,CACD,CAED,MAAOD,CAAAA,OAAP,CACD,CARM","sourcesContent":["import { createContext, useContext } from \"react\";\nimport type { TroveView, TroveEvent } from \"./types\";\n\ntype TroveViewContextType = {\n  view: TroveView;\n  dispatchEvent: (event: TroveEvent) => void;\n};\n\nexport const TroveViewContext = createContext<TroveViewContextType | null>(null);\n\nexport const useTroveView = (): TroveViewContextType => {\n  const context: TroveViewContextType | null = useContext(TroveViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <TroveViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}