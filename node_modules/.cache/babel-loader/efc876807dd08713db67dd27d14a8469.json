{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useReducer}from\"react\";import{useWeb3React}from\"@web3-react/core\";import{Button,Text,Flex,Link,Box}from\"theme-ui\";import{injectedConnector}from\"../connectors/injectedConnector\";import{useAuthorizedConnection}from\"../hooks/useAuthorizedConnection\";import{RetryDialog}from\"./RetryDialog\";import{ConnectionConfirmationDialog}from\"./ConnectionConfirmationDialog\";import{MetaMaskIcon}from\"./MetaMaskIcon\";import{Icon}from\"./Icon\";import{Modal}from\"./Modal\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var connectionReducer=function connectionReducer(state,action){switch(action.type){case\"startActivating\":return{type:\"activating\",connector:action.connector};case\"finishActivating\":return{type:\"active\",connector:state.type===\"inactive\"?injectedConnector:state.connector};case\"fail\":if(state.type!==\"inactive\"){return{type:action.error.message.match(/user rejected/i)?\"rejectedByUser\":action.error.message.match(/already pending/i)?\"alreadyPending\":\"failed\",connector:state.connector};}break;case\"retry\":if(state.type!==\"inactive\"){return{type:\"activating\",connector:state.connector};}break;case\"cancel\":return{type:\"inactive\"};case\"deactivate\":return{type:\"inactive\"};}console.warn(\"Ignoring connectionReducer action:\");console.log(action);console.log(\"  in state:\");console.log(state);return state;};var detectMetaMask=function detectMetaMask(){var _ethereum$isMetaMask,_ethereum;return(_ethereum$isMetaMask=(_ethereum=window.ethereum)===null||_ethereum===void 0?void 0:_ethereum.isMetaMask)!==null&&_ethereum$isMetaMask!==void 0?_ethereum$isMetaMask:false;};export var WalletConnector=function WalletConnector(_ref){var children=_ref.children,loader=_ref.loader;var _useWeb3React=useWeb3React(),activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate,active=_useWeb3React.active,error=_useWeb3React.error;var triedAuthorizedConnection=useAuthorizedConnection();var _useReducer=useReducer(connectionReducer,{type:\"inactive\"}),_useReducer2=_slicedToArray(_useReducer,2),connectionState=_useReducer2[0],dispatch=_useReducer2[1];var isMetaMask=detectMetaMask();useEffect(function(){if(error){dispatch({type:\"fail\",error:error});deactivate();}},[error,deactivate]);useEffect(function(){if(active){dispatch({type:\"finishActivating\"});}else{dispatch({type:\"deactivate\"});}},[active]);if(!triedAuthorizedConnection){return/*#__PURE__*/_jsx(_Fragment,{children:loader});}if(connectionState.type===\"active\"){return/*#__PURE__*/_jsx(_Fragment,{children:children});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Flex,{sx:{height:\"100vh\",justifyContent:\"center\",alignItems:\"center\"},children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){dispatch({type:\"startActivating\",connector:injectedConnector});activate(injectedConnector);},children:isMetaMask?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MetaMaskIcon,{}),/*#__PURE__*/_jsx(Box,{sx:{ml:2},children:\"Connect to MetaMask\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Icon,{name:\"plug\",size:\"lg\"}),/*#__PURE__*/_jsx(Box,{sx:{ml:2},children:\"Connect wallet\"})]})})}),connectionState.type===\"failed\"&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsxs(RetryDialog,{title:isMetaMask?\"Failed to connect to MetaMask\":\"Failed to connect wallet\",onCancel:function onCancel(){return dispatch({type:\"cancel\"});},onRetry:function onRetry(){dispatch({type:\"retry\"});activate(connectionState.connector);},children:[/*#__PURE__*/_jsx(Box,{sx:{textAlign:\"center\"},children:\"You might need to install MetaMask or use a different browser.\"}),/*#__PURE__*/_jsxs(Link,{sx:{lineHeight:3},href:\"https://metamask.io/download.html\",target:\"_blank\",children:[\"Learn more \",/*#__PURE__*/_jsx(Icon,{size:\"xs\",name:\"external-link-alt\"})]})]})}),connectionState.type===\"activating\"&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(ConnectionConfirmationDialog,{title:isMetaMask?\"Confirm connection in MetaMask\":\"Confirm connection in your wallet\",icon:isMetaMask?/*#__PURE__*/_jsx(MetaMaskIcon,{}):/*#__PURE__*/_jsx(Icon,{name:\"wallet\",size:\"lg\"}),onCancel:function onCancel(){return dispatch({type:\"cancel\"});},children:/*#__PURE__*/_jsxs(Text,{sx:{textAlign:\"center\"},children:[\"Confirm the request that's just appeared.\",isMetaMask?/*#__PURE__*/_jsx(_Fragment,{children:\" If you can't see a request, open your MetaMask extension via your browser.\"}):/*#__PURE__*/_jsx(_Fragment,{children:\" If you can't see a request, you might have to open your wallet.\"})]})})}),connectionState.type===\"rejectedByUser\"&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(RetryDialog,{title:\"Cancel connection?\",onCancel:function onCancel(){return dispatch({type:\"cancel\"});},onRetry:function onRetry(){dispatch({type:\"retry\"});activate(connectionState.connector);},children:/*#__PURE__*/_jsx(Text,{children:\"To use Liquity, you need to connect your Ethereum account.\"})})}),connectionState.type===\"alreadyPending\"&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(RetryDialog,{title:\"Connection already requested\",onCancel:function onCancel(){return dispatch({type:\"cancel\"});},onRetry:function onRetry(){dispatch({type:\"retry\"});activate(connectionState.connector);},children:/*#__PURE__*/_jsx(Text,{children:\"Please check your wallet and accept the connection request before retrying.\"})})})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/WalletConnector.tsx"],"names":["React","useEffect","useReducer","useWeb3React","Button","Text","Flex","Link","Box","injectedConnector","useAuthorizedConnection","RetryDialog","ConnectionConfirmationDialog","MetaMaskIcon","Icon","Modal","connectionReducer","state","action","type","connector","error","message","match","console","warn","log","detectMetaMask","window","ethereum","isMetaMask","WalletConnector","children","loader","activate","deactivate","active","triedAuthorizedConnection","connectionState","dispatch","height","justifyContent","alignItems","ml","textAlign","lineHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { Button, Text, Flex, Link, Box } from \"theme-ui\";\n\nimport { injectedConnector } from \"../connectors/injectedConnector\";\nimport { useAuthorizedConnection } from \"../hooks/useAuthorizedConnection\";\n\nimport { RetryDialog } from \"./RetryDialog\";\nimport { ConnectionConfirmationDialog } from \"./ConnectionConfirmationDialog\";\nimport { MetaMaskIcon } from \"./MetaMaskIcon\";\nimport { Icon } from \"./Icon\";\nimport { Modal } from \"./Modal\";\n\ninterface MaybeHasMetaMask {\n  ethereum?: {\n    isMetaMask?: boolean;\n  };\n}\n\ntype ConnectionState =\n  | { type: \"inactive\" }\n  | {\n      type: \"activating\" | \"active\" | \"rejectedByUser\" | \"alreadyPending\" | \"failed\";\n      connector: AbstractConnector;\n    };\n\ntype ConnectionAction =\n  | { type: \"startActivating\"; connector: AbstractConnector }\n  | { type: \"fail\"; error: Error }\n  | { type: \"finishActivating\" | \"retry\" | \"cancel\" | \"deactivate\" };\n\nconst connectionReducer: React.Reducer<ConnectionState, ConnectionAction> = (state, action) => {\n  switch (action.type) {\n    case \"startActivating\":\n      return {\n        type: \"activating\",\n        connector: action.connector\n      };\n    case \"finishActivating\":\n      return {\n        type: \"active\",\n        connector: state.type === \"inactive\" ? injectedConnector : state.connector\n      };\n    case \"fail\":\n      if (state.type !== \"inactive\") {\n        return {\n          type: action.error.message.match(/user rejected/i)\n            ? \"rejectedByUser\"\n            : action.error.message.match(/already pending/i)\n            ? \"alreadyPending\"\n            : \"failed\",\n          connector: state.connector\n        };\n      }\n      break;\n    case \"retry\":\n      if (state.type !== \"inactive\") {\n        return {\n          type: \"activating\",\n          connector: state.connector\n        };\n      }\n      break;\n    case \"cancel\":\n      return {\n        type: \"inactive\"\n      };\n    case \"deactivate\":\n      return {\n        type: \"inactive\"\n      };\n  }\n\n  console.warn(\"Ignoring connectionReducer action:\");\n  console.log(action);\n  console.log(\"  in state:\");\n  console.log(state);\n\n  return state;\n};\n\nconst detectMetaMask = () => (window as MaybeHasMetaMask).ethereum?.isMetaMask ?? false;\n\ntype WalletConnectorProps = {\n  loader?: React.ReactNode;\n};\n\nexport const WalletConnector: React.FC<WalletConnectorProps> = ({ children, loader }) => {\n  const { activate, deactivate, active, error } = useWeb3React<unknown>();\n  const triedAuthorizedConnection = useAuthorizedConnection();\n  const [connectionState, dispatch] = useReducer(connectionReducer, { type: \"inactive\" });\n  const isMetaMask = detectMetaMask();\n\n  useEffect(() => {\n    if (error) {\n      dispatch({ type: \"fail\", error });\n      deactivate();\n    }\n  }, [error, deactivate]);\n\n  useEffect(() => {\n    if (active) {\n      dispatch({ type: \"finishActivating\" });\n    } else {\n      dispatch({ type: \"deactivate\" });\n    }\n  }, [active]);\n\n  if (!triedAuthorizedConnection) {\n    return <>{loader}</>;\n  }\n\n  if (connectionState.type === \"active\") {\n    return <>{children}</>;\n  }\n\n  return (\n    <>\n      <Flex sx={{ height: \"100vh\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Button\n          onClick={() => {\n            dispatch({ type: \"startActivating\", connector: injectedConnector });\n            activate(injectedConnector);\n          }}\n        >\n          {isMetaMask ? (\n            <>\n              <MetaMaskIcon />\n              <Box sx={{ ml: 2 }}>Connect to MetaMask</Box>\n            </>\n          ) : (\n            <>\n              <Icon name=\"plug\" size=\"lg\" />\n              <Box sx={{ ml: 2 }}>Connect wallet</Box>\n            </>\n          )}\n        </Button>\n      </Flex>\n\n      {connectionState.type === \"failed\" && (\n        <Modal>\n          <RetryDialog\n            title={isMetaMask ? \"Failed to connect to MetaMask\" : \"Failed to connect wallet\"}\n            onCancel={() => dispatch({ type: \"cancel\" })}\n            onRetry={() => {\n              dispatch({ type: \"retry\" });\n              activate(connectionState.connector);\n            }}\n          >\n            <Box sx={{ textAlign: \"center\" }}>\n              You might need to install MetaMask or use a different browser.\n            </Box>\n            <Link sx={{ lineHeight: 3 }} href=\"https://metamask.io/download.html\" target=\"_blank\">\n              Learn more <Icon size=\"xs\" name=\"external-link-alt\" />\n            </Link>\n          </RetryDialog>\n        </Modal>\n      )}\n\n      {connectionState.type === \"activating\" && (\n        <Modal>\n          <ConnectionConfirmationDialog\n            title={\n              isMetaMask ? \"Confirm connection in MetaMask\" : \"Confirm connection in your wallet\"\n            }\n            icon={isMetaMask ? <MetaMaskIcon /> : <Icon name=\"wallet\" size=\"lg\" />}\n            onCancel={() => dispatch({ type: \"cancel\" })}\n          >\n            <Text sx={{ textAlign: \"center\" }}>\n              Confirm the request that&apos;s just appeared.\n              {isMetaMask ? (\n                <> If you can&apos;t see a request, open your MetaMask extension via your browser.</>\n              ) : (\n                <> If you can&apos;t see a request, you might have to open your wallet.</>\n              )}\n            </Text>\n          </ConnectionConfirmationDialog>\n        </Modal>\n      )}\n\n      {connectionState.type === \"rejectedByUser\" && (\n        <Modal>\n          <RetryDialog\n            title=\"Cancel connection?\"\n            onCancel={() => dispatch({ type: \"cancel\" })}\n            onRetry={() => {\n              dispatch({ type: \"retry\" });\n              activate(connectionState.connector);\n            }}\n          >\n            <Text>To use Liquity, you need to connect your Ethereum account.</Text>\n          </RetryDialog>\n        </Modal>\n      )}\n\n      {connectionState.type === \"alreadyPending\" && (\n        <Modal>\n          <RetryDialog\n            title=\"Connection already requested\"\n            onCancel={() => dispatch({ type: \"cancel\" })}\n            onRetry={() => {\n              dispatch({ type: \"retry\" });\n              activate(connectionState.connector);\n            }}\n          >\n            <Text>Please check your wallet and accept the connection request before retrying.</Text>\n          </RetryDialog>\n        </Modal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}