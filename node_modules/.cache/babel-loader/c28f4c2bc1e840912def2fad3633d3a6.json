{"ast":null,"code":"import React,{useCallback}from\"react\";import{Card,Heading,Box,Flex,Button}from\"theme-ui\";import{LP,GT}from\"../../../../strings\";import{useLiquitySelector}from\"@liquity/lib-react\";import{Icon}from\"../../../Icon\";import{LoadingOverlay}from\"../../../LoadingOverlay\";import{useMyTransactionState}from\"../../../Transaction\";import{DisabledEditableRow,StaticRow}from\"../../../Trove/Editor\";import{useFarmView}from\"../../context/FarmViewContext\";import{RemainingLQTY}from\"../RemainingLQTY\";import{ClaimReward}from\"./ClaimReward\";import{UnstakeAndClaim}from\"../UnstakeAndClaim\";import{Yield}from\"../Yield\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var selector=function selector(_ref){var liquidityMiningStake=_ref.liquidityMiningStake,liquidityMiningLQTYReward=_ref.liquidityMiningLQTYReward,totalStakedUniTokens=_ref.totalStakedUniTokens;return{liquidityMiningStake:liquidityMiningStake,liquidityMiningLQTYReward:liquidityMiningLQTYReward,totalStakedUniTokens:totalStakedUniTokens};};var transactionId=/farm-/i;export var Active=function Active(){var _useFarmView=useFarmView(),dispatchEvent=_useFarmView.dispatchEvent;var _useLiquitySelector=useLiquitySelector(selector),liquidityMiningStake=_useLiquitySelector.liquidityMiningStake,liquidityMiningLQTYReward=_useLiquitySelector.liquidityMiningLQTYReward,totalStakedUniTokens=_useLiquitySelector.totalStakedUniTokens;var handleAdjustPressed=useCallback(function(){dispatchEvent(\"ADJUST_PRESSED\");},[dispatchEvent]);var transactionState=useMyTransactionState(transactionId);var isTransactionPending=transactionState.type===\"waitingForApproval\"||transactionState.type===\"waitingForConfirmation\";var poolShare=liquidityMiningStake.mulDiv(100,totalStakedUniTokens);var hasStakeAndRewards=!liquidityMiningStake.isZero&&!liquidityMiningLQTYReward.isZero;return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Heading,{children:[\"Uniswap Liquidity Farm\",!isTransactionPending&&/*#__PURE__*/_jsx(Flex,{sx:{justifyContent:\"flex-end\"},children:/*#__PURE__*/_jsx(RemainingLQTY,{})})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:[2,3]},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(DisabledEditableRow,{label:\"Stake\",inputId:\"farm-stake\",amount:liquidityMiningStake.prettify(4),unit:LP}),poolShare.infinite?/*#__PURE__*/_jsx(StaticRow,{label:\"Pool share\",inputId:\"farm-share\",amount:\"N/A\"}):/*#__PURE__*/_jsx(StaticRow,{label:\"Pool share\",inputId:\"farm-share\",amount:poolShare.prettify(4),unit:\"%\"}),/*#__PURE__*/_jsxs(Flex,{sx:{alignItems:\"center\"},children:[/*#__PURE__*/_jsx(StaticRow,{label:\"Reward\",inputId:\"farm-reward\",amount:liquidityMiningLQTYReward.prettify(4),color:liquidityMiningLQTYReward.nonZero&&\"success\",unit:GT}),/*#__PURE__*/_jsx(Flex,{sx:{justifyContent:\"flex-end\",flex:1},children:/*#__PURE__*/_jsx(Yield,{})})]})]}),/*#__PURE__*/_jsxs(Flex,{variant:\"layout.actions\",children:[/*#__PURE__*/_jsxs(Button,{variant:!liquidityMiningLQTYReward.isZero?\"outline\":\"primary\",onClick:handleAdjustPressed,children:[/*#__PURE__*/_jsx(Icon,{name:\"pen\",size:\"sm\"}),\"\\xA0Adjust\"]}),!liquidityMiningLQTYReward.isZero&&/*#__PURE__*/_jsx(ClaimReward,{})]}),/*#__PURE__*/_jsx(Flex,{children:hasStakeAndRewards&&/*#__PURE__*/_jsx(UnstakeAndClaim,{})})]}),isTransactionPending&&/*#__PURE__*/_jsx(LoadingOverlay,{})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Active/Active.tsx"],"names":["React","useCallback","Card","Heading","Box","Flex","Button","LP","GT","useLiquitySelector","Icon","LoadingOverlay","useMyTransactionState","DisabledEditableRow","StaticRow","useFarmView","RemainingLQTY","ClaimReward","UnstakeAndClaim","Yield","selector","liquidityMiningStake","liquidityMiningLQTYReward","totalStakedUniTokens","transactionId","Active","dispatchEvent","handleAdjustPressed","transactionState","isTransactionPending","type","poolShare","mulDiv","hasStakeAndRewards","isZero","justifyContent","p","prettify","infinite","alignItems","nonZero","flex"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { LP, GT } from \"../../../../strings\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { Icon } from \"../../../Icon\";\nimport { LoadingOverlay } from \"../../../LoadingOverlay\";\nimport { useMyTransactionState } from \"../../../Transaction\";\nimport { DisabledEditableRow, StaticRow } from \"../../../Trove/Editor\";\nimport { useFarmView } from \"../../context/FarmViewContext\";\nimport { RemainingLQTY } from \"../RemainingLQTY\";\nimport { ClaimReward } from \"./ClaimReward\";\nimport { UnstakeAndClaim } from \"../UnstakeAndClaim\";\nimport { Yield } from \"../Yield\";\n\nconst selector = ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  totalStakedUniTokens\n}: LiquityStoreState) => ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  totalStakedUniTokens\n});\nconst transactionId = /farm-/i;\n\nexport const Active: React.FC = () => {\n  const { dispatchEvent } = useFarmView();\n  const {\n    liquidityMiningStake,\n    liquidityMiningLQTYReward,\n    totalStakedUniTokens\n  } = useLiquitySelector(selector);\n\n  const handleAdjustPressed = useCallback(() => {\n    dispatchEvent(\"ADJUST_PRESSED\");\n  }, [dispatchEvent]);\n\n  const transactionState = useMyTransactionState(transactionId);\n  const isTransactionPending =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n\n  const poolShare = liquidityMiningStake.mulDiv(100, totalStakedUniTokens);\n  const hasStakeAndRewards = !liquidityMiningStake.isZero && !liquidityMiningLQTYReward.isZero;\n\n  return (\n    <Card>\n      <Heading>\n        Uniswap Liquidity Farm\n        {!isTransactionPending && (\n          <Flex sx={{ justifyContent: \"flex-end\" }}>\n            <RemainingLQTY />\n          </Flex>\n        )}\n      </Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <Box>\n          <DisabledEditableRow\n            label=\"Stake\"\n            inputId=\"farm-stake\"\n            amount={liquidityMiningStake.prettify(4)}\n            unit={LP}\n          />\n          {poolShare.infinite ? (\n            <StaticRow label=\"Pool share\" inputId=\"farm-share\" amount=\"N/A\" />\n          ) : (\n            <StaticRow\n              label=\"Pool share\"\n              inputId=\"farm-share\"\n              amount={poolShare.prettify(4)}\n              unit={\"%\"}\n            />\n          )}\n          <Flex sx={{ alignItems: \"center\" }}>\n            <StaticRow\n              label=\"Reward\"\n              inputId=\"farm-reward\"\n              amount={liquidityMiningLQTYReward.prettify(4)}\n              color={liquidityMiningLQTYReward.nonZero && \"success\"}\n              unit={GT}\n            />\n            <Flex sx={{ justifyContent: \"flex-end\", flex: 1 }}>\n              <Yield />\n            </Flex>\n          </Flex>\n        </Box>\n\n        <Flex variant=\"layout.actions\">\n          <Button\n            variant={!liquidityMiningLQTYReward.isZero ? \"outline\" : \"primary\"}\n            onClick={handleAdjustPressed}\n          >\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n          {!liquidityMiningLQTYReward.isZero && <ClaimReward />}\n        </Flex>\n        <Flex>{hasStakeAndRewards && <UnstakeAndClaim />}</Flex>\n      </Box>\n      {isTransactionPending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}