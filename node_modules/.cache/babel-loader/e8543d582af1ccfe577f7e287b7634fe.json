{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";import{Heading,Box,Flex,Card,Button}from\"theme-ui\";import{Decimal,Difference}from\"@liquity/lib-base\";import{useLiquitySelector}from\"@liquity/lib-react\";import{LP,GT}from\"../../../../strings\";import{Icon}from\"../../../Icon\";import{EditableRow,StaticRow}from\"../../../Trove/Editor\";import{LoadingOverlay}from\"../../../LoadingOverlay\";import{useFarmView}from\"../../context/FarmViewContext\";import{useMyTransactionState}from\"../../../Transaction\";import{Confirm}from\"../Confirm\";import{Description}from\"../Description\";import{Approve}from\"../Approve\";import{Validation}from\"../Validation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var selector=function selector(_ref){var liquidityMiningStake=_ref.liquidityMiningStake,liquidityMiningLQTYReward=_ref.liquidityMiningLQTYReward,uniTokenBalance=_ref.uniTokenBalance,totalStakedUniTokens=_ref.totalStakedUniTokens;return{liquidityMiningStake:liquidityMiningStake,liquidityMiningLQTYReward:liquidityMiningLQTYReward,uniTokenBalance:uniTokenBalance,totalStakedUniTokens:totalStakedUniTokens};};var transactionId=/farm-/;export var Adjusting=function Adjusting(){var _useFarmView=useFarmView(),dispatchEvent=_useFarmView.dispatchEvent;var _useLiquitySelector=useLiquitySelector(selector),liquidityMiningStake=_useLiquitySelector.liquidityMiningStake,liquidityMiningLQTYReward=_useLiquitySelector.liquidityMiningLQTYReward,uniTokenBalance=_useLiquitySelector.uniTokenBalance,totalStakedUniTokens=_useLiquitySelector.totalStakedUniTokens;var _useState=useState(liquidityMiningStake),_useState2=_slicedToArray(_useState,2),amount=_useState2[0],setAmount=_useState2[1];var editingState=useState();var transactionState=useMyTransactionState(transactionId);var isTransactionPending=transactionState.type===\"waitingForApproval\"||transactionState.type===\"waitingForConfirmation\";var isDirty=!amount.eq(liquidityMiningStake);var maximumAmount=liquidityMiningStake.add(uniTokenBalance);var hasSetMaximumAmount=amount.eq(maximumAmount);var handleCancelPressed=useCallback(function(){dispatchEvent(\"CANCEL_PRESSED\");},[dispatchEvent]);var nextTotalStakedUniTokens=isDirty?totalStakedUniTokens.sub(liquidityMiningStake).add(amount):totalStakedUniTokens;var originalPoolShare=liquidityMiningStake.mulDiv(100,totalStakedUniTokens);var poolShare=amount.mulDiv(100,nextTotalStakedUniTokens);var poolShareChange=liquidityMiningStake.nonZero&&Difference.between(poolShare,originalPoolShare).nonZero;return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Heading,{children:[\"Uniswap Liquidity Farm\",isDirty&&!isTransactionPending&&/*#__PURE__*/_jsx(Button,{variant:\"titleIcon\",sx:{\":enabled:hover\":{color:\"danger\"}},onClick:function onClick(){return setAmount(liquidityMiningStake);},children:/*#__PURE__*/_jsx(Icon,{name:\"history\",size:\"lg\"})})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:[2,3]},children:[/*#__PURE__*/_jsx(EditableRow,{label:\"Stake\",inputId:\"farm-stake-amount\",amount:isDirty?amount.prettify(4):liquidityMiningStake.prettify(4),unit:LP,editingState:editingState,editedAmount:amount.toString(4),setEditedAmount:function setEditedAmount(amount){return setAmount(Decimal.from(amount));},maxAmount:maximumAmount.toString(),maxedOut:hasSetMaximumAmount}),poolShare.infinite?/*#__PURE__*/_jsx(StaticRow,{label:\"Pool share\",inputId:\"farm-share\",amount:\"N/A\"}):/*#__PURE__*/_jsx(StaticRow,{label:\"Pool share\",inputId:\"farm-share\",amount:poolShare.prettify(4),unit:\"%\",pendingAmount:poolShareChange===null||poolShareChange===void 0?void 0:poolShareChange.prettify(4).concat(\"%\"),pendingColor:(poolShareChange===null||poolShareChange===void 0?void 0:poolShareChange.positive)?\"success\":\"danger\"}),/*#__PURE__*/_jsx(StaticRow,{label:\"Reward\",inputId:\"farm-reward-amount\",amount:liquidityMiningLQTYReward.prettify(4),color:liquidityMiningLQTYReward.nonZero&&\"success\",unit:GT}),isDirty&&/*#__PURE__*/_jsx(Validation,{amount:amount}),isDirty&&/*#__PURE__*/_jsx(Description,{amount:amount}),/*#__PURE__*/_jsxs(Flex,{variant:\"layout.actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"cancel\",onClick:handleCancelPressed,children:\"Cancel\"}),/*#__PURE__*/_jsx(Approve,{amount:amount}),/*#__PURE__*/_jsx(Confirm,{amount:amount})]})]}),isTransactionPending&&/*#__PURE__*/_jsx(LoadingOverlay,{})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Adjusting/Adjusting.tsx"],"names":["React","useCallback","useState","Heading","Box","Flex","Card","Button","Decimal","Difference","useLiquitySelector","LP","GT","Icon","EditableRow","StaticRow","LoadingOverlay","useFarmView","useMyTransactionState","Confirm","Description","Approve","Validation","selector","liquidityMiningStake","liquidityMiningLQTYReward","uniTokenBalance","totalStakedUniTokens","transactionId","Adjusting","dispatchEvent","amount","setAmount","editingState","transactionState","isTransactionPending","type","isDirty","eq","maximumAmount","add","hasSetMaximumAmount","handleCancelPressed","nextTotalStakedUniTokens","sub","originalPoolShare","mulDiv","poolShare","poolShareChange","nonZero","between","color","p","prettify","toString","from","infinite","concat","positive"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Heading, Box, Flex, Card, Button } from \"theme-ui\";\nimport { Decimal, Difference, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { LP, GT } from \"../../../../strings\";\nimport { Icon } from \"../../../Icon\";\nimport { EditableRow, StaticRow } from \"../../../Trove/Editor\";\nimport { LoadingOverlay } from \"../../../LoadingOverlay\";\nimport { useFarmView } from \"../../context/FarmViewContext\";\nimport { useMyTransactionState } from \"../../../Transaction\";\nimport { Confirm } from \"../Confirm\";\nimport { Description } from \"../Description\";\nimport { Approve } from \"../Approve\";\nimport { Validation } from \"../Validation\";\n\nconst selector = ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  uniTokenBalance,\n  totalStakedUniTokens\n}: LiquityStoreState) => ({\n  liquidityMiningStake,\n  liquidityMiningLQTYReward,\n  uniTokenBalance,\n  totalStakedUniTokens\n});\n\nconst transactionId = /farm-/;\n\nexport const Adjusting: React.FC = () => {\n  const { dispatchEvent } = useFarmView();\n  const {\n    liquidityMiningStake,\n    liquidityMiningLQTYReward,\n    uniTokenBalance,\n    totalStakedUniTokens\n  } = useLiquitySelector(selector);\n  const [amount, setAmount] = useState<Decimal>(liquidityMiningStake);\n  const editingState = useState<string>();\n\n  const transactionState = useMyTransactionState(transactionId);\n  const isTransactionPending =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n  const isDirty = !amount.eq(liquidityMiningStake);\n  const maximumAmount = liquidityMiningStake.add(uniTokenBalance);\n  const hasSetMaximumAmount = amount.eq(maximumAmount);\n\n  const handleCancelPressed = useCallback(() => {\n    dispatchEvent(\"CANCEL_PRESSED\");\n  }, [dispatchEvent]);\n\n  const nextTotalStakedUniTokens = isDirty\n    ? totalStakedUniTokens.sub(liquidityMiningStake).add(amount)\n    : totalStakedUniTokens;\n\n  const originalPoolShare = liquidityMiningStake.mulDiv(100, totalStakedUniTokens);\n  const poolShare = amount.mulDiv(100, nextTotalStakedUniTokens);\n\n  const poolShareChange =\n    liquidityMiningStake.nonZero && Difference.between(poolShare, originalPoolShare).nonZero;\n\n  return (\n    <Card>\n      <Heading>\n        Uniswap Liquidity Farm\n        {isDirty && !isTransactionPending && (\n          <Button\n            variant=\"titleIcon\"\n            sx={{ \":enabled:hover\": { color: \"danger\" } }}\n            onClick={() => setAmount(liquidityMiningStake)}\n          >\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Stake\"\n          inputId=\"farm-stake-amount\"\n          amount={isDirty ? amount.prettify(4) : liquidityMiningStake.prettify(4)}\n          unit={LP}\n          editingState={editingState}\n          editedAmount={amount.toString(4)}\n          setEditedAmount={amount => setAmount(Decimal.from(amount))}\n          maxAmount={maximumAmount.toString()}\n          maxedOut={hasSetMaximumAmount}\n        ></EditableRow>\n\n        {poolShare.infinite ? (\n          <StaticRow label=\"Pool share\" inputId=\"farm-share\" amount=\"N/A\" />\n        ) : (\n          <StaticRow\n            label=\"Pool share\"\n            inputId=\"farm-share\"\n            amount={poolShare.prettify(4)}\n            unit=\"%\"\n            pendingAmount={poolShareChange?.prettify(4).concat(\"%\")}\n            pendingColor={poolShareChange?.positive ? \"success\" : \"danger\"}\n          />\n        )}\n\n        <StaticRow\n          label=\"Reward\"\n          inputId=\"farm-reward-amount\"\n          amount={liquidityMiningLQTYReward.prettify(4)}\n          color={liquidityMiningLQTYReward.nonZero && \"success\"}\n          unit={GT}\n        />\n\n        {isDirty && <Validation amount={amount} />}\n        {isDirty && <Description amount={amount} />}\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"cancel\" onClick={handleCancelPressed}>\n            Cancel\n          </Button>\n          <Approve amount={amount} />\n          <Confirm amount={amount} />\n        </Flex>\n      </Box>\n      {isTransactionPending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}