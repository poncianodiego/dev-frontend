{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Approve.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button } from \"theme-ui\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"../../Transaction\";\nimport { useFarmView } from \"../context/FarmViewContext\";\nimport { useValidationState } from \"../context/useValidationState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transactionId = \"farm-approve\";\nexport const Approve = ({\n  amount\n}) => {\n  _s();\n\n  const {\n    dispatchEvent\n  } = useFarmView();\n  const {\n    liquity: {\n      send: liquity\n    }\n  } = useLiquity();\n  const {\n    hasApproved\n  } = useValidationState(amount);\n  const transactionState = useMyTransactionState(transactionId);\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"STAKE_APPROVED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n\n  if (hasApproved) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Transaction, {\n    id: transactionId,\n    send: liquity.approveUniTokens.bind(liquity, undefined),\n    showFailure: \"asTooltip\",\n    tooltipPlacement: \"bottom\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        width: \"60%\"\n      },\n      children: \"Approve UNI LP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Approve, \"02hxVU4HbX6Y1Y8cBwlgfcZliAk=\", false, function () {\n  return [useFarmView, useLiquity, useValidationState, useMyTransactionState];\n});\n\n_c = Approve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Approve\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/views/Approve.tsx"],"names":["React","useEffect","Button","useLiquity","Transaction","useMyTransactionState","useFarmView","useValidationState","transactionId","Approve","amount","dispatchEvent","liquity","send","hasApproved","transactionState","type","approveUniTokens","bind","undefined","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,mBAAnD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;;AAMA,MAAMC,aAAa,GAAG,cAAtB;AAEA,OAAO,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAoBL,WAAW,EAArC;AACA,QAAM;AACJM,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAED;AAAR;AADL,MAEFT,UAAU,EAFd;AAIA,QAAM;AAAEW,IAAAA;AAAF,MAAkBP,kBAAkB,CAACG,MAAD,CAA1C;AACA,QAAMK,gBAAgB,GAAGV,qBAAqB,CAACG,aAAD,CAA9C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,gBAAgB,CAACC,IAAjB,KAA0B,kBAA9B,EAAkD;AAChDL,MAAAA,aAAa,CAAC,gBAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACI,gBAAgB,CAACC,IAAlB,EAAwBL,aAAxB,CAJM,CAAT;;AAMA,MAAIG,WAAJ,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,WAAD;AACE,IAAA,EAAE,EAAEN,aADN;AAEE,IAAA,IAAI,EAAEI,OAAO,CAACK,gBAAR,CAAyBC,IAAzB,CAA8BN,OAA9B,EAAuCO,SAAvC,CAFR;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,gBAAgB,EAAC,QAJnB;AAAA,2BAME,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BM;;GAAMX,O;UACeH,W,EAGtBH,U,EAEoBI,kB,EACCF,qB;;;KAPdI,O","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button } from \"theme-ui\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"../../Transaction\";\nimport { useFarmView } from \"../context/FarmViewContext\";\nimport { useValidationState } from \"../context/useValidationState\";\n\ntype ApproveProps = {\n  amount: Decimal;\n};\n\nconst transactionId = \"farm-approve\";\n\nexport const Approve: React.FC<ApproveProps> = ({ amount }) => {\n  const { dispatchEvent } = useFarmView();\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const { hasApproved } = useValidationState(amount);\n  const transactionState = useMyTransactionState(transactionId);\n\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"STAKE_APPROVED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n\n  if (hasApproved) {\n    return null;\n  }\n\n  return (\n    <Transaction\n      id={transactionId}\n      send={liquity.approveUniTokens.bind(liquity, undefined)}\n      showFailure=\"asTooltip\"\n      tooltipPlacement=\"bottom\"\n    >\n      <Button sx={{ width: \"60%\" }}>Approve UNI LP</Button>\n    </Transaction>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}