{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nexport const StakingViewContext = /*#__PURE__*/createContext(null);\nexport const useStakingView = () => {\n  _s();\n\n  const context = useContext(StakingViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <TroveViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n\n_s(useStakingView, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/context/StakingViewContext.tsx"],"names":["createContext","useContext","StakingViewContext","useStakingView","context","Error"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAiBA,OAAO,MAAMC,kBAAkB,gBAAGF,aAAa,CAAgC,IAAhC,CAAxC;AAEP,OAAO,MAAMG,cAAc,GAAG,MAA8B;AAAA;;AAC1D,QAAMC,OAAO,GAAGH,UAAU,CAACC,kBAAD,CAA1B;;AAEA,MAAIE,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAM,IAAIC,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD,CARM;;GAAMD,c","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport type StakingView = \"ACTIVE\" | \"ADJUSTING\" | \"NONE\";\n\nexport type StakingViewAction = { type: \"startAdjusting\" | \"cancelAdjusting\" };\n\nexport type StakingViewContextType = {\n  view: StakingView;\n\n  // Indicates that a staking TX is pending.\n  // The panel should be covered with a spinner overlay when this is true.\n  changePending: boolean;\n\n  // Dispatch an action that changes the Staking panel's view.\n  dispatch: (action: StakingViewAction) => void;\n};\n\nexport const StakingViewContext = createContext<StakingViewContextType | null>(null);\n\nexport const useStakingView = (): StakingViewContextType => {\n  const context = useContext(StakingViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <TroveViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}