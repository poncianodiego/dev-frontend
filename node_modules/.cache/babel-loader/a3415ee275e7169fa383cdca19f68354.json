{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SendableEthersLiquity = void 0;\n\nvar sendTransaction = function sendTransaction(tx) {\n  return tx.send();\n};\n/**\n * Ethers-based implementation of {@link @liquity/lib-base#SendableLiquity}.\n *\n * @public\n */\n\n\nvar SendableEthersLiquity = /*#__PURE__*/function () {\n  function SendableEthersLiquity(populatable) {\n    _classCallCheck(this, SendableEthersLiquity);\n\n    this._populate = populatable;\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.openTrove} */\n\n\n  _createClass(SendableEthersLiquity, [{\n    key: \"openTrove\",\n    value: function openTrove(params, maxBorrowingRate, overrides) {\n      return this._populate.openTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.closeTrove} */\n\n  }, {\n    key: \"closeTrove\",\n    value: function closeTrove(overrides) {\n      return this._populate.closeTrove(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.adjustTrove} */\n\n  }, {\n    key: \"adjustTrove\",\n    value: function adjustTrove(params, maxBorrowingRate, overrides) {\n      return this._populate.adjustTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositCollateral} */\n\n  }, {\n    key: \"depositCollateral\",\n    value: function depositCollateral(amount, overrides) {\n      return this._populate.depositCollateral(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawCollateral} */\n\n  }, {\n    key: \"withdrawCollateral\",\n    value: function withdrawCollateral(amount, overrides) {\n      return this._populate.withdrawCollateral(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.borrowLUSD} */\n\n  }, {\n    key: \"borrowLUSD\",\n    value: function borrowLUSD(amount, maxBorrowingRate, overrides) {\n      return this._populate.borrowLUSD(amount, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.repayLUSD} */\n\n  }, {\n    key: \"repayLUSD\",\n    value: function repayLUSD(amount, overrides) {\n      return this._populate.repayLUSD(amount, overrides).then(sendTransaction);\n    }\n    /** @internal */\n\n  }, {\n    key: \"setPrice\",\n    value: function setPrice(price, overrides) {\n      return this._populate.setPrice(price, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidate} */\n\n  }, {\n    key: \"liquidate\",\n    value: function liquidate(address, overrides) {\n      return this._populate.liquidate(address, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidateUpTo} */\n\n  }, {\n    key: \"liquidateUpTo\",\n    value: function liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides) {\n      return this._populate.liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositLUSDInStabilityPool} */\n\n  }, {\n    key: \"depositLUSDInStabilityPool\",\n    value: function depositLUSDInStabilityPool(amount, frontendTag, overrides) {\n      return this._populate.depositLUSDInStabilityPool(amount, frontendTag, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLUSDFromStabilityPool} */\n\n  }, {\n    key: \"withdrawLUSDFromStabilityPool\",\n    value: function withdrawLUSDFromStabilityPool(amount, overrides) {\n      return this._populate.withdrawLUSDFromStabilityPool(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStabilityPool} */\n\n  }, {\n    key: \"withdrawGainsFromStabilityPool\",\n    value: function withdrawGainsFromStabilityPool(overrides) {\n      return this._populate.withdrawGainsFromStabilityPool(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.transferCollateralGainToTrove} */\n\n  }, {\n    key: \"transferCollateralGainToTrove\",\n    value: function transferCollateralGainToTrove(overrides) {\n      return this._populate.transferCollateralGainToTrove(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLUSD} */\n\n  }, {\n    key: \"sendLUSD\",\n    value: function sendLUSD(toAddress, amount, overrides) {\n      return this._populate.sendLUSD(toAddress, amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLQTY} */\n\n  }, {\n    key: \"sendLQTY\",\n    value: function sendLQTY(toAddress, amount, overrides) {\n      return this._populate.sendLQTY(toAddress, amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.redeemLUSD} */\n\n  }, {\n    key: \"redeemLUSD\",\n    value: function redeemLUSD(amount, maxRedemptionRate, overrides) {\n      return this._populate.redeemLUSD(amount, maxRedemptionRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.claimCollateralSurplus} */\n\n  }, {\n    key: \"claimCollateralSurplus\",\n    value: function claimCollateralSurplus(overrides) {\n      return this._populate.claimCollateralSurplus(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeLQTY} */\n\n  }, {\n    key: \"stakeLQTY\",\n    value: function stakeLQTY(amount, overrides) {\n      return this._populate.stakeLQTY(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeLQTY} */\n\n  }, {\n    key: \"unstakeLQTY\",\n    value: function unstakeLQTY(amount, overrides) {\n      return this._populate.unstakeLQTY(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStaking} */\n\n  }, {\n    key: \"withdrawGainsFromStaking\",\n    value: function withdrawGainsFromStaking(overrides) {\n      return this._populate.withdrawGainsFromStaking(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.registerFrontend} */\n\n  }, {\n    key: \"registerFrontend\",\n    value: function registerFrontend(kickbackRate, overrides) {\n      return this._populate.registerFrontend(kickbackRate, overrides).then(sendTransaction);\n    }\n    /** @internal */\n\n  }, {\n    key: \"_mintUniToken\",\n    value: function _mintUniToken(amount, address, overrides) {\n      return this._populate._mintUniToken(amount, address, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.approveUniTokens} */\n\n  }, {\n    key: \"approveUniTokens\",\n    value: function approveUniTokens(allowance, overrides) {\n      return this._populate.approveUniTokens(allowance, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeUniTokens} */\n\n  }, {\n    key: \"stakeUniTokens\",\n    value: function stakeUniTokens(amount, overrides) {\n      return this._populate.stakeUniTokens(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeUniTokens} */\n\n  }, {\n    key: \"unstakeUniTokens\",\n    value: function unstakeUniTokens(amount, overrides) {\n      return this._populate.unstakeUniTokens(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLQTYRewardFromLiquidityMining} */\n\n  }, {\n    key: \"withdrawLQTYRewardFromLiquidityMining\",\n    value: function withdrawLQTYRewardFromLiquidityMining(overrides) {\n      return this._populate.withdrawLQTYRewardFromLiquidityMining(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.exitLiquidityMining} */\n\n  }, {\n    key: \"exitLiquidityMining\",\n    value: function exitLiquidityMining(overrides) {\n      return this._populate.exitLiquidityMining(overrides).then(sendTransaction);\n    }\n  }]);\n\n  return SendableEthersLiquity;\n}();\n\nexports.SendableEthersLiquity = SendableEthersLiquity;","map":{"version":3,"sources":["../../src/SendableEthersLiquity.ts"],"names":[],"mappings":";;;;;;;;;;;AA2BA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAI,EAAJ;AAAA,SAAiD,EAAE,CAAC,IAAH,EAAjD;AAAA,CAAxB;AAEA;;;;AAIG;;;IACU,qB;AAIX,iCAAY,WAAZ,EAAiD;AAAA;;AAC/C,SAAK,SAAL,GAAiB,WAAjB;AACD;AAED;;;;;WACA,mBACE,MADF,EAEE,gBAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,MAAzB,EAAiC,gBAAjC,EAAmD,SAAnD,EAA8D,IAA9D,CAAmE,eAAnE,CAAP;AACD;AAED;;;;WACA,oBACE,SADF,EACwC;AAEtC,aAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,SAA1B,EAAqC,IAArC,CAA0C,eAA1C,CAAP;AACD;AAED;;;;WACA,qBACE,MADF,EAEE,gBAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CAAe,WAAf,CAA2B,MAA3B,EAAmC,gBAAnC,EAAqD,SAArD,EAAgE,IAAhE,CAAqE,eAArE,CAAP;AACD;AAED;;;;WACA,2BACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,iBAAf,CAAiC,MAAjC,EAAyC,SAAzC,EAAoD,IAApD,CAAyD,eAAzD,CAAP;AACD;AAED;;;;WACA,4BACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,kBAAf,CAAkC,MAAlC,EAA0C,SAA1C,EAAqD,IAArD,CAA0D,eAA1D,CAAP;AACD;AAED;;;;WACA,oBACE,MADF,EAEE,gBAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,MAA1B,EAAkC,gBAAlC,EAAoD,SAApD,EAA+D,IAA/D,CAAoE,eAApE,CAAP;AACD;AAED;;;;WACA,mBACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,MAAzB,EAAiC,SAAjC,EAA4C,IAA5C,CAAiD,eAAjD,CAAP;AACD;AAED;;;;WACA,kBACE,KADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,QAAf,CAAwB,KAAxB,EAA+B,SAA/B,EAA0C,IAA1C,CAA+C,eAA/C,CAAP;AACD;AAED;;;;WACA,mBACE,OADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,OAAzB,EAAkC,SAAlC,EAA6C,IAA7C,CAAkD,eAAlD,CAAP;AACD;AAED;;;;WACA,uBACE,gCADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CACJ,aADI,CACU,gCADV,EAC4C,SAD5C,EAEJ,IAFI,CAEC,eAFD,CAAP;AAGD;AAED;;;;WACA,oCACE,MADF,EAEE,WAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CACJ,0BADI,CACuB,MADvB,EAC+B,WAD/B,EAC4C,SAD5C,EAEJ,IAFI,CAEC,eAFD,CAAP;AAGD;AAED;;;;WACA,uCACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,6BAAf,CAA6C,MAA7C,EAAqD,SAArD,EAAgE,IAAhE,CAAqE,eAArE,CAAP;AACD;AAED;;;;WACA,wCACE,SADF,EACwC;AAEtC,aAAO,KAAK,SAAL,CAAe,8BAAf,CAA8C,SAA9C,EAAyD,IAAzD,CAA8D,eAA9D,CAAP;AACD;AAED;;;;WACA,uCACE,SADF,EACwC;AAEtC,aAAO,KAAK,SAAL,CAAe,6BAAf,CAA6C,SAA7C,EAAwD,IAAxD,CAA6D,eAA7D,CAAP;AACD;AAED;;;;WACA,kBACE,SADF,EAEE,MAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CAAe,QAAf,CAAwB,SAAxB,EAAmC,MAAnC,EAA2C,SAA3C,EAAsD,IAAtD,CAA2D,eAA3D,CAAP;AACD;AAED;;;;WACA,kBACE,SADF,EAEE,MAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CAAe,QAAf,CAAwB,SAAxB,EAAmC,MAAnC,EAA2C,SAA3C,EAAsD,IAAtD,CAA2D,eAA3D,CAAP;AACD;AAED;;;;WACA,oBACE,MADF,EAEE,iBAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,MAA1B,EAAkC,iBAAlC,EAAqD,SAArD,EAAgE,IAAhE,CAAqE,eAArE,CAAP;AACD;AAED;;;;WACA,gCACE,SADF,EACwC;AAEtC,aAAO,KAAK,SAAL,CAAe,sBAAf,CAAsC,SAAtC,EAAiD,IAAjD,CAAsD,eAAtD,CAAP;AACD;AAED;;;;WACA,mBACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,MAAzB,EAAiC,SAAjC,EAA4C,IAA5C,CAAiD,eAAjD,CAAP;AACD;AAED;;;;WACA,qBACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,WAAf,CAA2B,MAA3B,EAAmC,SAAnC,EAA8C,IAA9C,CAAmD,eAAnD,CAAP;AACD;AAED;;;;WACA,kCACE,SADF,EACwC;AAEtC,aAAO,KAAK,SAAL,CAAe,wBAAf,CAAwC,SAAxC,EAAmD,IAAnD,CAAwD,eAAxD,CAAP;AACD;AAED;;;;WACA,0BACE,YADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,gBAAf,CAAgC,YAAhC,EAA8C,SAA9C,EAAyD,IAAzD,CAA8D,eAA9D,CAAP;AACD;AAED;;;;WACA,uBACE,MADF,EAEE,OAFF,EAGE,SAHF,EAGwC;AAEtC,aAAO,KAAK,SAAL,CAAe,aAAf,CAA6B,MAA7B,EAAqC,OAArC,EAA8C,SAA9C,EAAyD,IAAzD,CAA8D,eAA9D,CAAP;AACD;AAED;;;;WACA,0BACE,SADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,gBAAf,CAAgC,SAAhC,EAA2C,SAA3C,EAAsD,IAAtD,CAA2D,eAA3D,CAAP;AACD;AAED;;;;WACA,wBACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,cAAf,CAA8B,MAA9B,EAAsC,SAAtC,EAAiD,IAAjD,CAAsD,eAAtD,CAAP;AACD;AAED;;;;WACA,0BACE,MADF,EAEE,SAFF,EAEwC;AAEtC,aAAO,KAAK,SAAL,CAAe,gBAAf,CAAgC,MAAhC,EAAwC,SAAxC,EAAmD,IAAnD,CAAwD,eAAxD,CAAP;AACD;AAED;;;;WACA,+CACE,SADF,EACwC;AAEtC,aAAO,KAAK,SAAL,CAAe,qCAAf,CAAqD,SAArD,EAAgE,IAAhE,CAAqE,eAArE,CAAP;AACD;AAED;;;;WACA,6BACE,SADF,EACwC;AAEtC,aAAO,KAAK,SAAL,CAAe,mBAAf,CAAmC,SAAnC,EAA8C,IAA9C,CAAmD,eAAnD,CAAP;AACD;;;;;;AA3OH,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendableEthersLiquity = void 0;\nconst sendTransaction = (tx) => tx.send();\n/**\n * Ethers-based implementation of {@link @liquity/lib-base#SendableLiquity}.\n *\n * @public\n */\nclass SendableEthersLiquity {\n    constructor(populatable) {\n        this._populate = populatable;\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.openTrove} */\n    openTrove(params, maxBorrowingRate, overrides) {\n        return this._populate.openTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.closeTrove} */\n    closeTrove(overrides) {\n        return this._populate.closeTrove(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.adjustTrove} */\n    adjustTrove(params, maxBorrowingRate, overrides) {\n        return this._populate.adjustTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositCollateral} */\n    depositCollateral(amount, overrides) {\n        return this._populate.depositCollateral(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawCollateral} */\n    withdrawCollateral(amount, overrides) {\n        return this._populate.withdrawCollateral(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.borrowLUSD} */\n    borrowLUSD(amount, maxBorrowingRate, overrides) {\n        return this._populate.borrowLUSD(amount, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.repayLUSD} */\n    repayLUSD(amount, overrides) {\n        return this._populate.repayLUSD(amount, overrides).then(sendTransaction);\n    }\n    /** @internal */\n    setPrice(price, overrides) {\n        return this._populate.setPrice(price, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidate} */\n    liquidate(address, overrides) {\n        return this._populate.liquidate(address, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidateUpTo} */\n    liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides) {\n        return this._populate\n            .liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides)\n            .then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositLUSDInStabilityPool} */\n    depositLUSDInStabilityPool(amount, frontendTag, overrides) {\n        return this._populate\n            .depositLUSDInStabilityPool(amount, frontendTag, overrides)\n            .then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLUSDFromStabilityPool} */\n    withdrawLUSDFromStabilityPool(amount, overrides) {\n        return this._populate.withdrawLUSDFromStabilityPool(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStabilityPool} */\n    withdrawGainsFromStabilityPool(overrides) {\n        return this._populate.withdrawGainsFromStabilityPool(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.transferCollateralGainToTrove} */\n    transferCollateralGainToTrove(overrides) {\n        return this._populate.transferCollateralGainToTrove(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLUSD} */\n    sendLUSD(toAddress, amount, overrides) {\n        return this._populate.sendLUSD(toAddress, amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLQTY} */\n    sendLQTY(toAddress, amount, overrides) {\n        return this._populate.sendLQTY(toAddress, amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.redeemLUSD} */\n    redeemLUSD(amount, maxRedemptionRate, overrides) {\n        return this._populate.redeemLUSD(amount, maxRedemptionRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.claimCollateralSurplus} */\n    claimCollateralSurplus(overrides) {\n        return this._populate.claimCollateralSurplus(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeLQTY} */\n    stakeLQTY(amount, overrides) {\n        return this._populate.stakeLQTY(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeLQTY} */\n    unstakeLQTY(amount, overrides) {\n        return this._populate.unstakeLQTY(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStaking} */\n    withdrawGainsFromStaking(overrides) {\n        return this._populate.withdrawGainsFromStaking(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.registerFrontend} */\n    registerFrontend(kickbackRate, overrides) {\n        return this._populate.registerFrontend(kickbackRate, overrides).then(sendTransaction);\n    }\n    /** @internal */\n    _mintUniToken(amount, address, overrides) {\n        return this._populate._mintUniToken(amount, address, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.approveUniTokens} */\n    approveUniTokens(allowance, overrides) {\n        return this._populate.approveUniTokens(allowance, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeUniTokens} */\n    stakeUniTokens(amount, overrides) {\n        return this._populate.stakeUniTokens(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeUniTokens} */\n    unstakeUniTokens(amount, overrides) {\n        return this._populate.unstakeUniTokens(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLQTYRewardFromLiquidityMining} */\n    withdrawLQTYRewardFromLiquidityMining(overrides) {\n        return this._populate.withdrawLQTYRewardFromLiquidityMining(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.exitLiquidityMining} */\n    exitLiquidityMining(overrides) {\n        return this._populate.exitLiquidityMining(overrides).then(sendTransaction);\n    }\n}\nexports.SendableEthersLiquity = SendableEthersLiquity;\n//# sourceMappingURL=SendableEthersLiquity.js.map"]},"metadata":{},"sourceType":"script"}