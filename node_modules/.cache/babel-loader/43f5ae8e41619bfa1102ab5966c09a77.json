{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.equals = void 0;\n\nvar hasOwnProperty = function hasOwnProperty(o, key) {\n  return Object.prototype.hasOwnProperty.call(o, key);\n};\n\nvar shallowEquals = function shallowEquals(a, b) {\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n  return keysA.length === keysB.length && keysA.every(function (key) {\n    return hasOwnProperty(b, key) && Object.is(a[key], b[key]);\n  });\n};\n\nvar isObject = function isObject(a) {\n  return a !== null && typeof a === \"object\";\n};\n\nvar equals = function equals(a, b) {\n  return isObject(a) && isObject(b) ? shallowEquals(a, b) : Object.is(a, b);\n};\n\nexports.equals = equals;","map":{"version":3,"sources":["../../../src/utils/equals.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,CAAD,EAAmB,GAAnB;AAAA,SACrB,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,CAArC,EAAwC,GAAxC,CADqB;AAAA,CAAvB;;AAGA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,CAAD,EAAmB,CAAnB,EAAuC;AAC3D,MAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAd;AACA,MAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAd;AAEA,SACE,KAAK,CAAC,MAAN,KAAiB,KAAK,CAAC,MAAvB,IACA,KAAK,CAAC,KAAN,CAAY,UAAA,GAAG;AAAA,WAAI,cAAc,CAAC,CAAD,EAAI,GAAJ,CAAd,IAA0B,MAAM,CAAC,EAAP,CAAU,CAAC,CAAC,GAAD,CAAX,EAAkB,CAAC,CAAC,GAAD,CAAnB,CAA9B;AAAA,GAAf,CAFF;AAID,CARD;;AAUA,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,CAAD;AAAA,SAAoC,CAAC,KAAK,IAAN,IAAc,OAAO,CAAP,KAAa,QAA/D;AAAA,CAAjB;;AAEO,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,CAAD,EAAa,CAAb;AAAA,SACpB,QAAQ,CAAC,CAAD,CAAR,IAAe,QAAQ,CAAC,CAAD,CAAvB,GAA6B,aAAa,CAAC,CAAD,EAAI,CAAJ,CAA1C,GAAmD,MAAM,CAAC,EAAP,CAAU,CAAV,EAAa,CAAb,CAD/B;AAAA,CAAf;;AAAM,OAAA,CAAA,MAAA,GAAM,MAAN","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.equals = void 0;\nconst hasOwnProperty = (o, key) => Object.prototype.hasOwnProperty.call(o, key);\nconst shallowEquals = (a, b) => {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    return (keysA.length === keysB.length &&\n        keysA.every(key => hasOwnProperty(b, key) && Object.is(a[key], b[key])));\n};\nconst isObject = (a) => a !== null && typeof a === \"object\";\nconst equals = (a, b) => isObject(a) && isObject(b) ? shallowEquals(a, b) : Object.is(a, b);\nexports.equals = equals;\n//# sourceMappingURL=equals.js.map"]},"metadata":{},"sourceType":"script"}