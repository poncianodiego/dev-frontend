{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/pages/FrontendRegistration.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Card, Heading, Box, Flex, Input, Label, Paragraph, Button, Spinner } from \"theme-ui\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { shortenAddress } from \"../utils/shortenAddress\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"../components/Transaction\";\nimport { Icon } from \"../components/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FrontendRegistrationAction = ({\n  kickbackRate\n}) => {\n  _s();\n\n  const {\n    liquity: {\n      send: liquity\n    }\n  } = useLiquity();\n  const myTransactionId = \"register-frontend\";\n  const myTransactionState = useMyTransactionState(myTransactionId);\n  return myTransactionState.type === \"waitingForApproval\" ? /*#__PURE__*/_jsxDEV(Button, {\n    disabled: true,\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      sx: {\n        mr: 2,\n        color: \"white\"\n      },\n      size: \"20px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \"Waiting for your approval\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : myTransactionState.type !== \"waitingForConfirmation\" && myTransactionState.type !== \"confirmed\" ? /*#__PURE__*/_jsxDEV(Transaction, {\n    id: myTransactionId,\n    send: liquity.registerFrontend.bind(liquity, kickbackRate),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(FrontendRegistrationAction, \"x1DBmmrNcM4i5J6HTfPD7Mgp9Pg=\", false, function () {\n  return [useLiquity, useMyTransactionState];\n});\n\n_c = FrontendRegistrationAction;\nexport const FrontendRegistration = () => {\n  _s2();\n\n  const {\n    account\n  } = useLiquity();\n  const [kickbackRate, setKickbackRate] = useState(Decimal.from(0.8));\n  const [cut, setCut] = useState(Decimal.from(0.2));\n  const [kickbackRateString, setKickbackRateString] = useState(\"80\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Choose a kickback rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: [2, 3]\n        },\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Kickback rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            variant: \"unit\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            sx: {\n              maxWidth: \"200px\"\n            },\n            type: \"number\",\n            step: \"any\",\n            value: kickbackRateString,\n            onChange: e => {\n              setKickbackRateString(e.target.value);\n\n              try {\n                const newKickbackRate = Decimal.from(e.target.value || 0).div(100);\n                const newCut = Decimal.ONE.sub(newKickbackRate);\n                setKickbackRate(newKickbackRate);\n                setCut(newCut);\n              } catch {}\n            },\n            onBlur: () => {\n              setKickbackRateString(kickbackRate.mul(100).toString());\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n        m: 3,\n        mt: [3, null, 4],\n        mb: 4,\n        p: 3,\n        maxWidth: \"450px\",\n        border: 1,\n        borderRadius: \"8px\",\n        borderColor: \"danger\",\n        boxShadow: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        sx: {\n          alignItems: \"center\",\n          mx: 3,\n          fontSize: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"hand-paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          sx: {\n            ml: 3,\n            fontSize: \"18px\"\n          },\n          children: \"Before you proceed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        sx: {\n          fontSize: 1,\n          mt: 3\n        },\n        children: [\"You are about to register \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: shortenAddress(account)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }, this), \" to receive\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [cut.mul(100).toString(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), \" of the LQTY rewards earned through this frontend.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        sx: {\n          fontSize: 1,\n          mt: 3,\n          fontWeight: \"bold\"\n        },\n        children: \"You will not be able to change the kickback rate for this address later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        sx: {\n          fontSize: 1,\n          mt: 3\n        },\n        children: \"If you'd like to use a different kickback rate in the future, you will need to repeat this registration with a different address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FrontendRegistrationAction, {\n      kickbackRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(FrontendRegistration, \"D47zIStPBWqHc/cgcdsZ3UaCq5o=\", false, function () {\n  return [useLiquity];\n});\n\n_c2 = FrontendRegistration;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FrontendRegistrationAction\");\n$RefreshReg$(_c2, \"FrontendRegistration\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/pages/FrontendRegistration.tsx"],"names":["useState","Card","Heading","Box","Flex","Input","Label","Paragraph","Button","Spinner","Decimal","shortenAddress","useLiquity","Transaction","useMyTransactionState","Icon","FrontendRegistrationAction","kickbackRate","liquity","send","myTransactionId","myTransactionState","type","mr","color","registerFrontend","bind","FrontendRegistration","account","setKickbackRate","from","cut","setCut","kickbackRateString","setKickbackRateString","p","maxWidth","e","target","value","newKickbackRate","div","newCut","ONE","sub","mul","toString","display","flexDirection","justifyContent","m","mt","mb","border","borderRadius","borderColor","boxShadow","alignItems","mx","fontSize","ml","fontWeight"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Card, Heading, Box, Flex, Input, Label, Paragraph, Button, Spinner } from \"theme-ui\";\n\nimport { Decimal } from \"@liquity/lib-base\";\n\nimport { shortenAddress } from \"../utils/shortenAddress\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"../components/Transaction\";\nimport { Icon } from \"../components/Icon\";\n\ntype FrontendRegistrationActionProps = {\n  kickbackRate: Decimal;\n};\n\nconst FrontendRegistrationAction: React.FC<FrontendRegistrationActionProps> = ({ kickbackRate }) => {\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const myTransactionId = \"register-frontend\";\n  const myTransactionState = useMyTransactionState(myTransactionId);\n\n  return myTransactionState.type === \"waitingForApproval\" ? (\n    <Button disabled>\n      <Spinner sx={{ mr: 2, color: \"white\" }} size=\"20px\" />\n      Waiting for your approval\n    </Button>\n  ) : myTransactionState.type !== \"waitingForConfirmation\" &&\n    myTransactionState.type !== \"confirmed\" ? (\n    <Transaction id={myTransactionId} send={liquity.registerFrontend.bind(liquity, kickbackRate)}>\n      <Button>Register</Button>\n    </Transaction>\n  ) : null;\n};\n\nexport const FrontendRegistration: React.FC = () => {\n  const { account } = useLiquity();\n\n  const [kickbackRate, setKickbackRate] = useState(Decimal.from(0.8));\n  const [cut, setCut] = useState(Decimal.from(0.2));\n  const [kickbackRateString, setKickbackRateString] = useState(\"80\");\n\n  return (\n    <>\n      <Card>\n        <Heading>Choose a kickback rate</Heading>\n\n        <Box sx={{ p: [2, 3] }}>\n          <Flex>\n            <Label>Kickback rate</Label>\n            <Label variant=\"unit\">%</Label>\n\n            <Input\n              sx={{ maxWidth: \"200px\" }}\n              type=\"number\"\n              step=\"any\"\n              value={kickbackRateString}\n              onChange={e => {\n                setKickbackRateString(e.target.value);\n                try {\n                  const newKickbackRate = Decimal.from(e.target.value || 0).div(100);\n                  const newCut = Decimal.ONE.sub(newKickbackRate);\n\n                  setKickbackRate(newKickbackRate);\n                  setCut(newCut);\n                } catch {}\n              }}\n              onBlur={() => {\n                setKickbackRateString(kickbackRate.mul(100).toString());\n              }}\n            />\n          </Flex>\n        </Box>\n      </Card>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-around\",\n\n          m: 3,\n          mt: [3, null, 4],\n          mb: 4,\n          p: 3,\n          maxWidth: \"450px\",\n\n          border: 1,\n          borderRadius: \"8px\",\n          borderColor: \"danger\",\n          boxShadow: 2\n        }}\n      >\n        <Flex sx={{ alignItems: \"center\", mx: 3, fontSize: 4 }}>\n          <Icon name=\"hand-paper\" />\n          <Heading sx={{ ml: 3, fontSize: \"18px\" }}>Before you proceed</Heading>\n        </Flex>\n\n        <Paragraph sx={{ fontSize: 1, mt: 3 }}>\n          You are about to register <b>{shortenAddress(account)}</b> to receive{\" \"}\n          <b>{cut.mul(100).toString()}%</b> of the LQTY rewards earned through this frontend.\n        </Paragraph>\n\n        <Paragraph sx={{ fontSize: 1, mt: 3, fontWeight: \"bold\" }}>\n          You will not be able to change the kickback rate for this address later.\n        </Paragraph>\n\n        <Paragraph sx={{ fontSize: 1, mt: 3 }}>\n          If you'd like to use a different kickback rate in the future, you will need to repeat this\n          registration with a different address.\n        </Paragraph>\n      </Box>\n\n      <FrontendRegistrationAction {...{ kickbackRate }} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}