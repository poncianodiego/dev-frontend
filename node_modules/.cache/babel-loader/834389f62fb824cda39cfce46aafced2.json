{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SendableEthersLiquity = void 0;\n\nconst sendTransaction = tx => tx.send();\n/**\n * Ethers-based implementation of {@link @liquity/lib-base#SendableLiquity}.\n *\n * @public\n */\n\n\nclass SendableEthersLiquity {\n  constructor(populatable) {\n    this._populate = populatable;\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.openTrove} */\n\n\n  openTrove(params, maxBorrowingRate, overrides) {\n    return this._populate.openTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.closeTrove} */\n\n\n  closeTrove(overrides) {\n    return this._populate.closeTrove(overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.adjustTrove} */\n\n\n  adjustTrove(params, maxBorrowingRate, overrides) {\n    return this._populate.adjustTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositCollateral} */\n\n\n  depositCollateral(amount, overrides) {\n    return this._populate.depositCollateral(amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawCollateral} */\n\n\n  withdrawCollateral(amount, overrides) {\n    return this._populate.withdrawCollateral(amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.borrowLUSD} */\n\n\n  borrowLUSD(amount, maxBorrowingRate, overrides) {\n    return this._populate.borrowLUSD(amount, maxBorrowingRate, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.repayLUSD} */\n\n\n  repayLUSD(amount, overrides) {\n    return this._populate.repayLUSD(amount, overrides).then(sendTransaction);\n  }\n  /** @internal */\n\n\n  setPrice(price, overrides) {\n    return this._populate.setPrice(price, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidate} */\n\n\n  liquidate(address, overrides) {\n    return this._populate.liquidate(address, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidateUpTo} */\n\n\n  liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides) {\n    return this._populate.liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositLUSDInStabilityPool} */\n\n\n  depositLUSDInStabilityPool(amount, frontendTag, overrides) {\n    return this._populate.depositLUSDInStabilityPool(amount, frontendTag, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLUSDFromStabilityPool} */\n\n\n  withdrawLUSDFromStabilityPool(amount, overrides) {\n    return this._populate.withdrawLUSDFromStabilityPool(amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStabilityPool} */\n\n\n  withdrawGainsFromStabilityPool(overrides) {\n    return this._populate.withdrawGainsFromStabilityPool(overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.transferCollateralGainToTrove} */\n\n\n  transferCollateralGainToTrove(overrides) {\n    return this._populate.transferCollateralGainToTrove(overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLUSD} */\n\n\n  sendLUSD(toAddress, amount, overrides) {\n    return this._populate.sendLUSD(toAddress, amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLQTY} */\n\n\n  sendLQTY(toAddress, amount, overrides) {\n    return this._populate.sendLQTY(toAddress, amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.redeemLUSD} */\n\n\n  redeemLUSD(amount, maxRedemptionRate, overrides) {\n    return this._populate.redeemLUSD(amount, maxRedemptionRate, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.claimCollateralSurplus} */\n\n\n  claimCollateralSurplus(overrides) {\n    return this._populate.claimCollateralSurplus(overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeLQTY} */\n\n\n  stakeLQTY(amount, overrides) {\n    return this._populate.stakeLQTY(amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeLQTY} */\n\n\n  unstakeLQTY(amount, overrides) {\n    return this._populate.unstakeLQTY(amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStaking} */\n\n\n  withdrawGainsFromStaking(overrides) {\n    return this._populate.withdrawGainsFromStaking(overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.registerFrontend} */\n\n\n  registerFrontend(kickbackRate, overrides) {\n    return this._populate.registerFrontend(kickbackRate, overrides).then(sendTransaction);\n  }\n  /** @internal */\n\n\n  _mintUniToken(amount, address, overrides) {\n    return this._populate._mintUniToken(amount, address, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.approveUniTokens} */\n\n\n  approveUniTokens(allowance, overrides) {\n    return this._populate.approveUniTokens(allowance, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeUniTokens} */\n\n\n  stakeUniTokens(amount, overrides) {\n    return this._populate.stakeUniTokens(amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeUniTokens} */\n\n\n  unstakeUniTokens(amount, overrides) {\n    return this._populate.unstakeUniTokens(amount, overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLQTYRewardFromLiquidityMining} */\n\n\n  withdrawLQTYRewardFromLiquidityMining(overrides) {\n    return this._populate.withdrawLQTYRewardFromLiquidityMining(overrides).then(sendTransaction);\n  }\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.exitLiquidityMining} */\n\n\n  exitLiquidityMining(overrides) {\n    return this._populate.exitLiquidityMining(overrides).then(sendTransaction);\n  }\n\n}\n\nexports.SendableEthersLiquity = SendableEthersLiquity;","map":{"version":3,"sources":["../../src/SendableEthersLiquity.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendableEthersLiquity = void 0;\nconst sendTransaction = (tx) => tx.send();\n/**\n * Ethers-based implementation of {@link @liquity/lib-base#SendableLiquity}.\n *\n * @public\n */\nclass SendableEthersLiquity {\n    constructor(populatable) {\n        this._populate = populatable;\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.openTrove} */\n    openTrove(params, maxBorrowingRate, overrides) {\n        return this._populate.openTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.closeTrove} */\n    closeTrove(overrides) {\n        return this._populate.closeTrove(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.adjustTrove} */\n    adjustTrove(params, maxBorrowingRate, overrides) {\n        return this._populate.adjustTrove(params, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositCollateral} */\n    depositCollateral(amount, overrides) {\n        return this._populate.depositCollateral(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawCollateral} */\n    withdrawCollateral(amount, overrides) {\n        return this._populate.withdrawCollateral(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.borrowLUSD} */\n    borrowLUSD(amount, maxBorrowingRate, overrides) {\n        return this._populate.borrowLUSD(amount, maxBorrowingRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.repayLUSD} */\n    repayLUSD(amount, overrides) {\n        return this._populate.repayLUSD(amount, overrides).then(sendTransaction);\n    }\n    /** @internal */\n    setPrice(price, overrides) {\n        return this._populate.setPrice(price, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidate} */\n    liquidate(address, overrides) {\n        return this._populate.liquidate(address, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidateUpTo} */\n    liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides) {\n        return this._populate\n            .liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides)\n            .then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositLUSDInStabilityPool} */\n    depositLUSDInStabilityPool(amount, frontendTag, overrides) {\n        return this._populate\n            .depositLUSDInStabilityPool(amount, frontendTag, overrides)\n            .then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLUSDFromStabilityPool} */\n    withdrawLUSDFromStabilityPool(amount, overrides) {\n        return this._populate.withdrawLUSDFromStabilityPool(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStabilityPool} */\n    withdrawGainsFromStabilityPool(overrides) {\n        return this._populate.withdrawGainsFromStabilityPool(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.transferCollateralGainToTrove} */\n    transferCollateralGainToTrove(overrides) {\n        return this._populate.transferCollateralGainToTrove(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLUSD} */\n    sendLUSD(toAddress, amount, overrides) {\n        return this._populate.sendLUSD(toAddress, amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLQTY} */\n    sendLQTY(toAddress, amount, overrides) {\n        return this._populate.sendLQTY(toAddress, amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.redeemLUSD} */\n    redeemLUSD(amount, maxRedemptionRate, overrides) {\n        return this._populate.redeemLUSD(amount, maxRedemptionRate, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.claimCollateralSurplus} */\n    claimCollateralSurplus(overrides) {\n        return this._populate.claimCollateralSurplus(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeLQTY} */\n    stakeLQTY(amount, overrides) {\n        return this._populate.stakeLQTY(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeLQTY} */\n    unstakeLQTY(amount, overrides) {\n        return this._populate.unstakeLQTY(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStaking} */\n    withdrawGainsFromStaking(overrides) {\n        return this._populate.withdrawGainsFromStaking(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.registerFrontend} */\n    registerFrontend(kickbackRate, overrides) {\n        return this._populate.registerFrontend(kickbackRate, overrides).then(sendTransaction);\n    }\n    /** @internal */\n    _mintUniToken(amount, address, overrides) {\n        return this._populate._mintUniToken(amount, address, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.approveUniTokens} */\n    approveUniTokens(allowance, overrides) {\n        return this._populate.approveUniTokens(allowance, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeUniTokens} */\n    stakeUniTokens(amount, overrides) {\n        return this._populate.stakeUniTokens(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeUniTokens} */\n    unstakeUniTokens(amount, overrides) {\n        return this._populate.unstakeUniTokens(amount, overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLQTYRewardFromLiquidityMining} */\n    withdrawLQTYRewardFromLiquidityMining(overrides) {\n        return this._populate.withdrawLQTYRewardFromLiquidityMining(overrides).then(sendTransaction);\n    }\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.exitLiquidityMining} */\n    exitLiquidityMining(overrides) {\n        return this._populate.exitLiquidityMining(overrides).then(sendTransaction);\n    }\n}\nexports.SendableEthersLiquity = SendableEthersLiquity;\n//# sourceMappingURL=SendableEthersLiquity.js.map"]},"metadata":{},"sourceType":"script"}