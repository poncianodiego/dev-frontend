{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useEffect,useRef}from\"react\";import{useLiquitySelector}from\"@liquity/lib-react\";import{FarmViewContext}from\"./FarmViewContext\";import{transitions}from\"./transitions\";import{jsx as _jsx}from\"react/jsx-runtime\";var transition=function transition(view,event){var _transitions$view$eve;var nextView=(_transitions$view$eve=transitions[view][event])!==null&&_transitions$view$eve!==void 0?_transitions$view$eve:view;return nextView;};var getInitialView=function getInitialView(liquidityMiningStake,remainingLiquidityMiningLQTYReward,liquidityMiningLQTYReward){if(remainingLiquidityMiningLQTYReward.isZero)return\"DISABLED\";if(liquidityMiningStake.isZero&&liquidityMiningLQTYReward.isZero)return\"INACTIVE\";return\"ACTIVE\";};var selector=function selector(_ref){var liquidityMiningStake=_ref.liquidityMiningStake,remainingLiquidityMiningLQTYReward=_ref.remainingLiquidityMiningLQTYReward,liquidityMiningLQTYReward=_ref.liquidityMiningLQTYReward;return{liquidityMiningStake:liquidityMiningStake,remainingLiquidityMiningLQTYReward:remainingLiquidityMiningLQTYReward,liquidityMiningLQTYReward:liquidityMiningLQTYReward};};export var FarmViewProvider=function FarmViewProvider(props){var children=props.children;var _useLiquitySelector=useLiquitySelector(selector),liquidityMiningStake=_useLiquitySelector.liquidityMiningStake,remainingLiquidityMiningLQTYReward=_useLiquitySelector.remainingLiquidityMiningLQTYReward,liquidityMiningLQTYReward=_useLiquitySelector.liquidityMiningLQTYReward;var _useState=useState(getInitialView(liquidityMiningStake,remainingLiquidityMiningLQTYReward,liquidityMiningLQTYReward)),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var viewRef=useRef(view);var dispatchEvent=useCallback(function(event){var nextView=transition(viewRef.current,event);console.log(\"dispatchEvent() [current-view, event, next-view]\",viewRef.current,event,nextView);setView(nextView);},[]);useEffect(function(){viewRef.current=view;},[view]);useEffect(function(){if(liquidityMiningStake.isZero&&liquidityMiningLQTYReward.isZero){dispatchEvent(\"UNSTAKE_AND_CLAIM_CONFIRMED\");}else if(liquidityMiningStake.isZero&&!liquidityMiningLQTYReward.isZero){dispatchEvent(\"UNSTAKE_CONFIRMED\");}},[liquidityMiningStake.isZero,liquidityMiningLQTYReward.isZero,dispatchEvent]);var provider={view:view,dispatchEvent:dispatchEvent};return/*#__PURE__*/_jsx(FarmViewContext.Provider,{value:provider,children:children});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Farm/context/FarmViewProvider.tsx"],"names":["React","useState","useCallback","useEffect","useRef","useLiquitySelector","FarmViewContext","transitions","transition","view","event","nextView","getInitialView","liquidityMiningStake","remainingLiquidityMiningLQTYReward","liquidityMiningLQTYReward","isZero","selector","FarmViewProvider","props","children","setView","viewRef","dispatchEvent","current","console","log","provider"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { LiquityStoreState, Decimal } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { FarmViewContext } from \"./FarmViewContext\";\nimport { transitions } from \"./transitions\";\nimport type { FarmView, FarmEvent } from \"./transitions\";\n\nconst transition = (view: FarmView, event: FarmEvent): FarmView => {\n  const nextView = transitions[view][event] ?? view;\n  return nextView;\n};\n\nconst getInitialView = (\n  liquidityMiningStake: Decimal,\n  remainingLiquidityMiningLQTYReward: Decimal,\n  liquidityMiningLQTYReward: Decimal\n): FarmView => {\n  if (remainingLiquidityMiningLQTYReward.isZero) return \"DISABLED\";\n  if (liquidityMiningStake.isZero && liquidityMiningLQTYReward.isZero) return \"INACTIVE\";\n  return \"ACTIVE\";\n};\n\nconst selector = ({\n  liquidityMiningStake,\n  remainingLiquidityMiningLQTYReward,\n  liquidityMiningLQTYReward\n}: LiquityStoreState) => ({\n  liquidityMiningStake,\n  remainingLiquidityMiningLQTYReward,\n  liquidityMiningLQTYReward\n});\n\nexport const FarmViewProvider: React.FC = props => {\n  const { children } = props;\n  const {\n    liquidityMiningStake,\n    remainingLiquidityMiningLQTYReward,\n    liquidityMiningLQTYReward\n  } = useLiquitySelector(selector);\n\n  const [view, setView] = useState<FarmView>(\n    getInitialView(\n      liquidityMiningStake,\n      remainingLiquidityMiningLQTYReward,\n      liquidityMiningLQTYReward\n    )\n  );\n  const viewRef = useRef<FarmView>(view);\n\n  const dispatchEvent = useCallback((event: FarmEvent) => {\n    const nextView = transition(viewRef.current, event);\n\n    console.log(\n      \"dispatchEvent() [current-view, event, next-view]\",\n      viewRef.current,\n      event,\n      nextView\n    );\n    setView(nextView);\n  }, []);\n\n  useEffect(() => {\n    viewRef.current = view;\n  }, [view]);\n\n  useEffect(() => {\n    if (liquidityMiningStake.isZero && liquidityMiningLQTYReward.isZero) {\n      dispatchEvent(\"UNSTAKE_AND_CLAIM_CONFIRMED\");\n    } else if (liquidityMiningStake.isZero && !liquidityMiningLQTYReward.isZero) {\n      dispatchEvent(\"UNSTAKE_CONFIRMED\");\n    }\n  }, [liquidityMiningStake.isZero, liquidityMiningLQTYReward.isZero, dispatchEvent]);\n\n  const provider = {\n    view,\n    dispatchEvent\n  };\n\n  return <FarmViewContext.Provider value={provider}>{children}</FarmViewContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}