{"ast":null,"code":"import _slicedToArray from\"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Card,Box,Heading,Flex,Button,Label,Input}from\"theme-ui\";import{useLiquity}from\"../hooks/LiquityContext\";import{Icon}from\"./Icon\";import{Transaction}from\"./Transaction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var LiquidationManager=function LiquidationManager(){var _useLiquity=useLiquity(),liquity=_useLiquity.liquity.send;var _useState=useState(\"90\"),_useState2=_slicedToArray(_useState,2),numberOfTrovesToLiquidate=_useState2[0],setNumberOfTrovesToLiquidate=_useState2[1];return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Heading,{children:\"Liquidate\"}),/*#__PURE__*/_jsx(Box,{sx:{p:[2,3]},children:/*#__PURE__*/_jsxs(Flex,{sx:{alignItems:\"stretch\"},children:[/*#__PURE__*/_jsx(Label,{children:\"Up to\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",min:\"1\",step:\"1\",value:numberOfTrovesToLiquidate,onChange:function onChange(e){return setNumberOfTrovesToLiquidate(e.target.value);}}),/*#__PURE__*/_jsx(Label,{children:\"Troves\"}),/*#__PURE__*/_jsx(Flex,{sx:{ml:2,alignItems:\"center\"},children:/*#__PURE__*/_jsx(Transaction,{id:\"batch-liquidate\",tooltip:\"Liquidate\",tooltipPlacement:\"bottom\",send:function send(overrides){if(!numberOfTrovesToLiquidate){throw new Error(\"Invalid number\");}return liquity.liquidateUpTo(parseInt(numberOfTrovesToLiquidate,10),overrides);},children:/*#__PURE__*/_jsx(Button,{variant:\"dangerIcon\",children:/*#__PURE__*/_jsx(Icon,{name:\"trash\",size:\"lg\"})})})})]})})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/LiquidationManager.tsx"],"names":["React","useState","Card","Box","Heading","Flex","Button","Label","Input","useLiquity","Icon","Transaction","LiquidationManager","liquity","send","numberOfTrovesToLiquidate","setNumberOfTrovesToLiquidate","p","alignItems","e","target","value","ml","overrides","Error","liquidateUpTo","parseInt"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,OAApB,CAA6BC,IAA7B,CAAmCC,MAAnC,CAA2CC,KAA3C,CAAkDC,KAAlD,KAA+D,UAA/D,CAEA,OAASC,UAAT,KAA2B,yBAA3B,CAEA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,WAAT,KAA4B,eAA5B,C,wFAEA,MAAO,IAAMC,CAAAA,kBAA4B,CAAG,QAA/BA,CAAAA,kBAA+B,EAAM,iBAG5CH,UAAU,EAHkC,CAE7BI,OAF6B,aAE9CA,OAF8C,CAEnCC,IAFmC,eAIkBb,QAAQ,CAAC,IAAD,CAJ1B,wCAIzCc,yBAJyC,eAIdC,4BAJc,eAMhD,mBACE,MAAC,IAAD,yBACE,KAAC,OAAD,wBADF,cAGE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAL,CAAT,uBACE,MAAC,IAAD,EAAM,EAAE,CAAE,CAAEC,UAAU,CAAE,SAAd,CAAV,wBACE,KAAC,KAAD,oBADF,cAGE,KAAC,KAAD,EACE,IAAI,CAAC,QADP,CAEE,GAAG,CAAC,GAFN,CAGE,IAAI,CAAC,GAHP,CAIE,KAAK,CAAEH,yBAJT,CAKE,QAAQ,CAAE,kBAAAI,CAAC,QAAIH,CAAAA,4BAA4B,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC,EALb,EAHF,cAWE,KAAC,KAAD,qBAXF,cAaE,KAAC,IAAD,EAAM,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAASJ,UAAU,CAAE,QAArB,CAAV,uBACE,KAAC,WAAD,EACE,EAAE,CAAC,iBADL,CAEE,OAAO,CAAC,WAFV,CAGE,gBAAgB,CAAC,QAHnB,CAIE,IAAI,CAAE,cAAAK,SAAS,CAAI,CACjB,GAAI,CAACR,yBAAL,CAAgC,CAC9B,KAAM,IAAIS,CAAAA,KAAJ,CAAU,gBAAV,CAAN,CACD,CACD,MAAOX,CAAAA,OAAO,CAACY,aAAR,CAAsBC,QAAQ,CAACX,yBAAD,CAA4B,EAA5B,CAA9B,CAA+DQ,SAA/D,CAAP,CACD,CATH,uBAWE,KAAC,MAAD,EAAQ,OAAO,CAAC,YAAhB,uBACE,KAAC,IAAD,EAAM,IAAI,CAAC,OAAX,CAAmB,IAAI,CAAC,IAAxB,EADF,EAXF,EADF,EAbF,GADF,EAHF,GADF,CAuCD,CA7CM","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Box, Heading, Flex, Button, Label, Input } from \"theme-ui\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Icon } from \"./Icon\";\nimport { Transaction } from \"./Transaction\";\n\nexport const LiquidationManager: React.FC = () => {\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n  const [numberOfTrovesToLiquidate, setNumberOfTrovesToLiquidate] = useState(\"90\");\n\n  return (\n    <Card>\n      <Heading>Liquidate</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <Flex sx={{ alignItems: \"stretch\" }}>\n          <Label>Up to</Label>\n\n          <Input\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            value={numberOfTrovesToLiquidate}\n            onChange={e => setNumberOfTrovesToLiquidate(e.target.value)}\n          />\n\n          <Label>Troves</Label>\n\n          <Flex sx={{ ml: 2, alignItems: \"center\" }}>\n            <Transaction\n              id=\"batch-liquidate\"\n              tooltip=\"Liquidate\"\n              tooltipPlacement=\"bottom\"\n              send={overrides => {\n                if (!numberOfTrovesToLiquidate) {\n                  throw new Error(\"Invalid number\");\n                }\n                return liquity.liquidateUpTo(parseInt(numberOfTrovesToLiquidate, 10), overrides);\n              }}\n            >\n              <Button variant=\"dangerIcon\">\n                <Icon name=\"trash\" size=\"lg\" />\n              </Button>\n            </Transaction>\n          </Flex>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}