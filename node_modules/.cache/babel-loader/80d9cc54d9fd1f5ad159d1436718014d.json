{"ast":null,"code":"var _jsxFileName = \"/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/Staking.tsx\",\n    _s = $RefreshSig$();\n\nimport { useStakingView } from \"./context/StakingViewContext\";\nimport { ReadOnlyStake } from \"./ReadOnlyStake\";\nimport { StakingManager } from \"./StakingManager\";\nimport { NoStake } from \"./NoStake\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Staking = () => {\n  _s();\n\n  const {\n    view\n  } = useStakingView();\n\n  switch (view) {\n    case \"ACTIVE\":\n      return /*#__PURE__*/_jsxDEV(ReadOnlyStake, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }, this);\n\n    case \"ADJUSTING\":\n      return /*#__PURE__*/_jsxDEV(StakingManager, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n\n    case \"NONE\":\n      return /*#__PURE__*/_jsxDEV(NoStake, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n  }\n};\n\n_s(Staking, \"uohKaVt3Z8161KQutlX4RCbBoIA=\", false, function () {\n  return [useStakingView];\n});\n\n_c = Staking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staking\");","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/Staking.tsx"],"names":["useStakingView","ReadOnlyStake","StakingManager","NoStake","Staking","view"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,8BAA/B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAWL,cAAc,EAA/B;;AAEA,UAAQK,IAAR;AACE,SAAK,QAAL;AACE,0BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AAEF,SAAK,WAAL;AACE,0BAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AAEF,SAAK,MAAL;AACE,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AARJ;AAUD,CAbM;;GAAMD,O;UACMJ,c;;;KADNI,O","sourcesContent":["import { useStakingView } from \"./context/StakingViewContext\";\nimport { ReadOnlyStake } from \"./ReadOnlyStake\";\nimport { StakingManager } from \"./StakingManager\";\nimport { NoStake } from \"./NoStake\";\n\nexport const Staking: React.FC = () => {\n  const { view } = useStakingView();\n\n  switch (view) {\n    case \"ACTIVE\":\n      return <ReadOnlyStake />;\n\n    case \"ADJUSTING\":\n      return <StakingManager />;\n\n    case \"NONE\":\n      return <NoStake />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}