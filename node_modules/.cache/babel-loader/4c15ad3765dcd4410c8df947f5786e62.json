{"ast":null,"code":"import{Heading,Box,Card,Flex,Button}from\"theme-ui\";import{useLiquitySelector}from\"@liquity/lib-react\";import{COIN,GT}from\"../../strings\";import{DisabledEditableRow,StaticRow}from\"../Trove/Editor\";import{LoadingOverlay}from\"../LoadingOverlay\";import{Icon}from\"../Icon\";import{useStakingView}from\"./context/StakingViewContext\";import{StakingGainsAction}from\"./StakingGainsAction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var select=function select(_ref){var lqtyStake=_ref.lqtyStake,totalStakedLQTY=_ref.totalStakedLQTY;return{lqtyStake:lqtyStake,totalStakedLQTY:totalStakedLQTY};};export var ReadOnlyStake=function ReadOnlyStake(){var _useStakingView=useStakingView(),changePending=_useStakingView.changePending,dispatch=_useStakingView.dispatch;var _useLiquitySelector=useLiquitySelector(select),lqtyStake=_useLiquitySelector.lqtyStake,totalStakedLQTY=_useLiquitySelector.totalStakedLQTY;var poolShare=lqtyStake.stakedLQTY.mulDiv(100,totalStakedLQTY);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Heading,{children:\"Staking\"}),/*#__PURE__*/_jsxs(Box,{sx:{p:[2,3]},children:[/*#__PURE__*/_jsx(DisabledEditableRow,{label:\"Stake\",inputId:\"stake-lqty\",amount:lqtyStake.stakedLQTY.prettify(),unit:GT}),/*#__PURE__*/_jsx(StaticRow,{label:\"Pool share\",inputId:\"stake-share\",amount:poolShare.prettify(4),unit:\"%\"}),/*#__PURE__*/_jsx(StaticRow,{label:\"Redemption gain\",inputId:\"stake-gain-eth\",amount:lqtyStake.collateralGain.prettify(4),color:lqtyStake.collateralGain.nonZero&&\"success\",unit:\"ETH\"}),/*#__PURE__*/_jsx(StaticRow,{label:\"Issuance gain\",inputId:\"stake-gain-lusd\",amount:lqtyStake.lusdGain.prettify(),color:lqtyStake.lusdGain.nonZero&&\"success\",unit:COIN}),/*#__PURE__*/_jsxs(Flex,{variant:\"layout.actions\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline\",onClick:function onClick(){return dispatch({type:\"startAdjusting\"});},children:[/*#__PURE__*/_jsx(Icon,{name:\"pen\",size:\"sm\"}),\"\\xA0Adjust\"]}),/*#__PURE__*/_jsx(StakingGainsAction,{})]})]}),changePending&&/*#__PURE__*/_jsx(LoadingOverlay,{})]});};","map":{"version":3,"sources":["/Users/diegoponciano/Desktop/ryan/liquity/frontend/packages/dev-frontend/src/components/Staking/ReadOnlyStake.tsx"],"names":["Heading","Box","Card","Flex","Button","useLiquitySelector","COIN","GT","DisabledEditableRow","StaticRow","LoadingOverlay","Icon","useStakingView","StakingGainsAction","select","lqtyStake","totalStakedLQTY","ReadOnlyStake","changePending","dispatch","poolShare","stakedLQTY","mulDiv","p","prettify","collateralGain","nonZero","lusdGain","type"],"mappings":"AAAA,OAASA,OAAT,CAAkBC,GAAlB,CAAuBC,IAAvB,CAA6BC,IAA7B,CAAmCC,MAAnC,KAAiD,UAAjD,CAGA,OAASC,kBAAT,KAAmC,oBAAnC,CAEA,OAASC,IAAT,CAAeC,EAAf,KAAyB,eAAzB,CAEA,OAASC,mBAAT,CAA8BC,SAA9B,KAA+C,iBAA/C,CACA,OAASC,cAAT,KAA+B,mBAA/B,CACA,OAASC,IAAT,KAAqB,SAArB,CAEA,OAASC,cAAT,KAA+B,8BAA/B,CACA,OAASC,kBAAT,KAAmC,sBAAnC,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,eAAd,MAAcA,eAAd,OAAwD,CACrED,SAAS,CAATA,SADqE,CAErEC,eAAe,CAAfA,eAFqE,CAAxD,EAAf,CAKA,MAAO,IAAMC,CAAAA,aAAuB,CAAG,QAA1BA,CAAAA,aAA0B,EAAM,qBACPL,cAAc,EADP,CACnCM,aADmC,iBACnCA,aADmC,CACpBC,QADoB,iBACpBA,QADoB,yBAEJd,kBAAkB,CAACS,MAAD,CAFd,CAEnCC,SAFmC,qBAEnCA,SAFmC,CAExBC,eAFwB,qBAExBA,eAFwB,CAI3C,GAAMI,CAAAA,SAAS,CAAGL,SAAS,CAACM,UAAV,CAAqBC,MAArB,CAA4B,GAA5B,CAAiCN,eAAjC,CAAlB,CAEA,mBACE,MAAC,IAAD,yBACE,KAAC,OAAD,sBADF,cAGE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEO,CAAC,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAL,CAAT,wBACE,KAAC,mBAAD,EACE,KAAK,CAAC,OADR,CAEE,OAAO,CAAC,YAFV,CAGE,MAAM,CAAER,SAAS,CAACM,UAAV,CAAqBG,QAArB,EAHV,CAIE,IAAI,CAAEjB,EAJR,EADF,cAQE,KAAC,SAAD,EACE,KAAK,CAAC,YADR,CAEE,OAAO,CAAC,aAFV,CAGE,MAAM,CAAEa,SAAS,CAACI,QAAV,CAAmB,CAAnB,CAHV,CAIE,IAAI,CAAC,GAJP,EARF,cAeE,KAAC,SAAD,EACE,KAAK,CAAC,iBADR,CAEE,OAAO,CAAC,gBAFV,CAGE,MAAM,CAAET,SAAS,CAACU,cAAV,CAAyBD,QAAzB,CAAkC,CAAlC,CAHV,CAIE,KAAK,CAAET,SAAS,CAACU,cAAV,CAAyBC,OAAzB,EAAoC,SAJ7C,CAKE,IAAI,CAAC,KALP,EAfF,cAuBE,KAAC,SAAD,EACE,KAAK,CAAC,eADR,CAEE,OAAO,CAAC,iBAFV,CAGE,MAAM,CAAEX,SAAS,CAACY,QAAV,CAAmBH,QAAnB,EAHV,CAIE,KAAK,CAAET,SAAS,CAACY,QAAV,CAAmBD,OAAnB,EAA8B,SAJvC,CAKE,IAAI,CAAEpB,IALR,EAvBF,cA+BE,MAAC,IAAD,EAAM,OAAO,CAAC,gBAAd,wBACE,MAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAE,yBAAMa,CAAAA,QAAQ,CAAC,CAAES,IAAI,CAAE,gBAAR,CAAD,CAAd,EAAnC,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,KAAX,CAAiB,IAAI,CAAC,IAAtB,EADF,gBADF,cAME,KAAC,kBAAD,IANF,GA/BF,GAHF,CA4CGV,aAAa,eAAI,KAAC,cAAD,IA5CpB,GADF,CAgDD,CAtDM","sourcesContent":["import { Heading, Box, Card, Flex, Button } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN, GT } from \"../../strings\";\n\nimport { DisabledEditableRow, StaticRow } from \"../Trove/Editor\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { Icon } from \"../Icon\";\n\nimport { useStakingView } from \"./context/StakingViewContext\";\nimport { StakingGainsAction } from \"./StakingGainsAction\";\n\nconst select = ({ lqtyStake, totalStakedLQTY }: LiquityStoreState) => ({\n  lqtyStake,\n  totalStakedLQTY\n});\n\nexport const ReadOnlyStake: React.FC = () => {\n  const { changePending, dispatch } = useStakingView();\n  const { lqtyStake, totalStakedLQTY } = useLiquitySelector(select);\n\n  const poolShare = lqtyStake.stakedLQTY.mulDiv(100, totalStakedLQTY);\n\n  return (\n    <Card>\n      <Heading>Staking</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <DisabledEditableRow\n          label=\"Stake\"\n          inputId=\"stake-lqty\"\n          amount={lqtyStake.stakedLQTY.prettify()}\n          unit={GT}\n        />\n\n        <StaticRow\n          label=\"Pool share\"\n          inputId=\"stake-share\"\n          amount={poolShare.prettify(4)}\n          unit=\"%\"\n        />\n\n        <StaticRow\n          label=\"Redemption gain\"\n          inputId=\"stake-gain-eth\"\n          amount={lqtyStake.collateralGain.prettify(4)}\n          color={lqtyStake.collateralGain.nonZero && \"success\"}\n          unit=\"ETH\"\n        />\n\n        <StaticRow\n          label=\"Issuance gain\"\n          inputId=\"stake-gain-lusd\"\n          amount={lqtyStake.lusdGain.prettify()}\n          color={lqtyStake.lusdGain.nonZero && \"success\"}\n          unit={COIN}\n        />\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"outline\" onClick={() => dispatch({ type: \"startAdjusting\" })}>\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n\n          <StakingGainsAction />\n        </Flex>\n      </Box>\n\n      {changePending && <LoadingOverlay />}\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}